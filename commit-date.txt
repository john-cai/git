hello
blame: document --color-* options
editor: save and reset terminal after calling EDITOR
terminal: teach git how to save/restore its terminal settings
Documentation/git-status: mention how to detect copies
Documentation/git-status: document porcelain status T (typechange)
Documentation/diff-format: state in which cases porcelain status is T
Documentation/git-status: remove impossible porcelain status DR and DC
bisect--helper: add space between colon and following sentence
blame: describe default output format
config.h: remove unused git_config_get_untracked_cache() declaration
log-tree.h: remove unused function declarations
grep.h: remove unused grep_threads_ok() declaration
builtin.h: remove cmd_tar_tree() declaration
builtin/remote.c: add and use SHOW_INFO_INIT
builtin/remote.c: add and use a REF_STATES_INIT
urlmatch.[ch]: add and use URLMATCH_CONFIG_INIT
difftool: add a missing space to the run_dir_diff() comments
difftool: remove an unnecessary call to strbuf_release()
difftool: refactor dir-diff to write files using helper functions
difftool: create a tmpdir path without repeated slashes
Makefile: restrict -Wpedantic and -Wno-pedantic-ms-format better
doc: fix capitalization in "git status --porcelain=v2" description
refs/ref-cache.[ch]: remove "incomplete" from create_dir_entry()
refs/ref-cache.c: remove "mkdir" parameter from find_containing_dir()
refs/ref-cache.[ch]: remove unused add_ref_entry()
refs/ref-cache.[ch]: remove unused remove_entry_from_dir()
refs.[ch]: remove unused ref_storage_backend_exists()
config.c: remove unused git_config_key_is_valid()
string-list.[ch]: remove string_list_init() compatibility function
builtin/blame.c: refactor commit_info_init() to COMMIT_INFO_INIT macro
daemon.c: refactor hostinfo_init() to HOSTINFO_INIT macro
cbtree.h: define cb_init() in terms of CBTREE_INIT
*.h: move some *_INIT to designated initializers
*.h _INIT macros: don't specify fields equal to 0
*.[ch] *_INIT macros: use { 0 } for a "zero out" idiom
submodule-config.h: remove unused SUBMODULE_INIT macro
Makefile: pass -Wno-pendantic under GENERATE_COMPILATION_DATABASE=yes
Documentation: call out commands that nuke untracked files/directories
Comment important codepaths regarding nuking untracked files/dirs
unpack-trees: avoid nuking untracked dir in way of locally deleted file
unpack-trees: avoid nuking untracked dir in way of unmerged file
Change unpack_trees' 'reset' flag into an enum
Remove ignored files by default when they are in the way
unpack-trees: make dir an internal-only struct
unpack-trees: introduce preserve_ignored to unpack_trees_options
read-tree, merge-recursive: overwrite ignored files by default
checkout, read-tree: fix leak of unpack_trees_options.dir
lazyload.h: use an even more generic function pointer than FARPROC
http: check CURLE_SSL_PINNEDPUBKEYNOTMATCH when emitting errors
hook-list.h: add a generated list of hooks, like config-list.h
hook.c users: use "hook_exists()" instead of "find_hook()"
hook.[ch]: move find_hook() from run-command.c to hook.c
t2500: add various tests for nuking untracked files
Makefile: remove an out-of-date comment
Makefile: don't perform "mv $@+ $@" dance for $(GENERATED_H)
Makefile: stop hardcoding {command,config}-list.h
Makefile: mark "check" target as .PHONY
bundle: remove ignored & undocumented "--verbose" flag
tests: add a test mode for SANITIZE=leak, run it in CI
Makefile: add SANITIZE=leak flag to GIT-BUILD-OPTIONS
difftool: fix symlink-file writing in dir-diff mode
help: move column config discovery to help.c library
help / completion: make "git help" do the hard work
help tests: test --config-for-completion option & output
help: simplify by moving to OPT_CMDMODE()
help: correct logic error in combining --all and --guides
help: correct logic error in combining --all and --config
help tests: add test for --config output
help: correct usage & behavior of "git help --guides"
Makefile: make COMPUTE_HEADER_DEPENDENCIES=auto work with DEVOPTS=pedantic
Makefile: make the "sparse" target non-.PHONY
difftool: fix word spacing in the usage strings
test-lib tests: get rid of copy/pasted mock test code
test-lib tests: assert 1 exit code, not non-zero
test-lib tests: refactor common part of check_sub_test_lib_test*()
test-lib tests: avoid subshell for "test_cmp" for readability
test-lib tests: don't provide a description for the sub-tests
test-lib tests: split up "write and run" into two functions
parse-options: properly align continued usage output
Makefile: clean .depend dirs under COMPUTE_HEADER_DEPENDENCIES != yes
repository.h: don't use a mix of int and bitfields
repo-settings.c: simplify the setup
read-cache & fetch-negotiator: check "enum" values in switch()
environment.c: remove test-specific "ignore_untracked..." variable
wrapper.c: add x{un,}setenv(), and use xsetenv() in environment.c
ls-files: use imperative mood for -X and -z option description
merge-ort: fix completely wrong comment
trace2.h: fix trivial comment typo
simple-ipc: move definition of ipc_active_state outside of ifdef
unicode: update the width tables to Unicode 14
Documentation: cleanup git-cvsserver
git-cvsserver: protect against NULL in crypt(3)
git-cvsserver: use crypt correctly to compare password hashes
t0000: avoid masking git exit value through pipes
tree-diff: fix leak when not HAVE_ALLOCA_H
git-compat-util: include declaration for unix sockets in windows
credential-cache: check for windows specific errors
t0301: fixes for windows compatibility
bisect--helper: retire `--bisect-next-check` subcommand
bisect--helper: reimplement `bisect_run` shell function in C
bisect--helper: reimplement `bisect_visualize()` shell function in C
run-command: make `exists_in_PATH()` non-static
t6030-bisect-porcelain: add test for bisect visualize
t6030-bisect-porcelain: add tests to control bisect run exit cases
http: don't hardcode the value of CURL_SOCKOPT_OK
http: centralize the accounting of libcurl dependencies
http: correct curl version check for CURLOPT_PINNEDPUBLICKEY
http: correct version check for CURL_HTTP_VERSION_2
http: drop support for curl < 7.18.0 (again)
Makefile: drop support for curl < 7.9.8 (again)
INSTALL: mention that we need libcurl 7.19.4 or newer to build
parse-options API: remove OPTION_ARGUMENT feature
difftool: use run_command() API in run_file_diff()
difftool: prepare "struct child_process" in cmd_difftool()
git rev-parse --parseopt tests: add more usagestr tests
send-pack: properly use parse_options() API for usage string
parse-options API users: align usage output in C-strings
gc: remove unused launchctl_get_uid() call
test-tool run-command: fix flip-flop init pattern
tests: remove leftover untracked files
test-lib: remove unused $_x40 and $_z40 variables
git-bisect: remove unused SHA-1 $x40 shell variable
git-sh-setup: remove unused "pull with rebase" message
git-submodule: remove unused is_zero_oid() function
INSTALL: reword and copy-edit the "libcurl" section
INSTALL: don't mention the "curl" executable at all
help: correct the usage string in -h and documentation
am: fix incorrect exit status on am fail to abort
t4151: add a few am --abort tests
git-am.txt: clarify --abort behavior
stash: restore untracked files AFTER restoring tracked files
stash: avoid feeding directories to update-index
t3903: document a pair of directory/file bugs
pack-objects: rename .idx files into place after .bitmap files
pack-write: split up finish_tmp_packfile() function
index-pack: refactor renaming in final()
pack-write: refactor renaming in finish_tmp_packfile()
pack.h: line-wrap the definition of finish_tmp_packfile()
entry: show finer-grained counter in "Filtering content" progress line
commit-graph: fix bogus counter in "Scanning merged commits" progress line
read-cache: fix GIT_TEST_SPLIT_INDEX
tests: disable GIT_TEST_SPLIT_INDEX for sparse index tests
read-cache: look for shared index files next to the index, too
t1600-index: disable GIT_TEST_SPLIT_INDEX
t1600-index: don't run git commands upstream of a pipe
t1600-index: remove unnecessary redirection
pack-write: skip *.rev work when not writing *.rev
Documentation: fix default directory of git bugreport -o
Makefile: remove the check_bindir script
send-email: fix a "first config key wins" regression in v2.33.0
diff-index: restore -c/--cc options handling
tr2: log N parent process names on Linux
tr2: do compiler enum check in trace2_collect_process_info()
tr2: leave the parent list empty upon failure & don't leak memory
tr2: stop leaking "thread_name" memory
tr2: clarify TRACE2_PROCESS_INFO_EXIT comment under Linux
tr2: remove NEEDSWORK comment for "non-procfs" implementations
bundle: show progress on "unbundle"
index-pack: add --progress-title option
bundle API: change "flags" to be "extra_index_pack_args"
test-lib-functions: keep user's debugger config files and TERM in 'debug'
test-lib-functions: optionally keep HOME, TERM and SHELL in 'test_pause'
test-lib-functions: use 'TEST_SHELL_PATH' in 'test_pause'
make: add INSTALL_STRIP option variable
developer: enable pedantic by default
win32: allow building with pedantic mode enabled
gettext: remove optional non-standard parens in N_() definition
remote: avoid -Wunused-but-set-variable in gcc with -DNDEBUG
gc: remove trailing dot from "gc.log" line
mailmap.c: fix a memory leak in free_mailap_{info,entry}()
fast-export: fix anonymized tag using original length
protocol-caps.c: fix memory leak in send_info()
commit-graph: show "unexpected subcommand" error
commit-graph: show usage on "commit-graph [write|verify] garbage"
commit-graph: early exit to "usage" on !argc
multi-pack-index: refactor "goto usage" pattern
commit-graph: use parse_options_concat()
commit-graph: remove redundant handling of -h
commit-graph: define common usage with a macro
test-lib: set GIT_CEILING_DIRECTORIES to protect the surrounding repository
doc: fix syntax error and the format of printf
bundle API: start writing API documentation
column: fix parsing of the '--nl' option
refs file backend: move raceproof_create_file() here
refs/files: remove unused "errno != ENOTDIR" condition
refs/files: remove unused "errno == EISDIR" code
refs/files: remove unused "oid" in lock_ref_oid_basic()
refs API: remove OID argument to reflog_expire()
reflog expire: don't lock reflogs using previously seen OID
refs/files: add a comment about refs_reflog_exists() call
refs: make repo_dwim_log() accept a NULL oid
refs/debug: re-indent argument list for "prepare"
refs/files: remove unused "skip" in lock_raw_ref() too
refs/files: remove unused "extras/skip" in lock_ref_oid_basic()
advice: move advice.graftFileDeprecated squashing to commit.[ch]
advice: remove use of global advice_add_embedded_repo
advice: remove read uses of most global `advice_` variables
advice: add enum variants for missing advice variables
diff-lib: ignore paths that are outside $cwd if --relative asked
t6300: check for cat-file exit status code
t6300: don't run cat-file on non-existent object
rebase: emit one "fatal" in "fatal: fatal: <error>"
ls-remote: set packet_trace_identity(<name>)
submodule--helper: run update procedures from C
cherry-pick: use better advice message
refs/files: remove unused REF_DELETING in lock_ref_oid_basic()
refs/packet: add missing BUG() invocations to reflog callbacks
Makefile: remove archives before manipulating them with 'ar'
completion: bash: add correct suffix in variables
completion: bash: fix for multiple dash commands
completion: bash: fix for suboptions with value
completion: bash: fix prefix detection in branch.*
l10n: TEAMS: change Simplified Chinese team leader
ci: use upload-artifacts v1 for dockerized jobs
Merge branch 'next' of github.com:ChrisADR/git-po
l10n: es: 2.33.0 round 2
l10n: zh_CN: for git v2.33.0 l10n round 2
l10n: README: refactor to use GFM syntax
Merge branch 'l10n-2.33-rnd2' of github.com:ralfth/git
Merge branch 'pt-PT' of github.com:git-l10n-pt-PT/git-po
l10n: update German translation for Git v2.33.0 (rnd2)
Merge branch 'loc/zh_TW/210814' of github.com:l10n-tw/git-po
l10n: zh_TW.po: remove the obsolete glossary
Merge branch 'master' of github.com:vnwildman/git
Merge branch 'po-id' of github.com:bagasme/git-po
l10n: vi.po(5230t): Updated translation for v2.32.0 round 2
l10n: id: po-id for 2.33.0 round 2
l10n: zh_TW.po: update for v2.33.0 rnd 2
Merge branch 'master' of github.com:vnwildman/git
l10n: git.pot: v2.33.0 round 2 (11 new, 8 removed)
Merge branch 'master' of github.com:git/git
Merge branch 'master' of github.com:nafmo/git-l10n-sv
Merge branch 'master' of github.com:alshopov/git-po
Merge branch 'l10n-2.33' of github.com:ralfth/git
Merge branch 'fr_fix_typos' of github.com:jnavila/git
Merge branch 'master' of github.com:Softcatala/git-po
l10n: de.po: fix typos
l10n: update German translation for Git v2.33.0
ci: update freebsd 12 cirrus job
list-objects.c: rename "traverse_trees_and_blobs" to "traverse_non_commits"
l10n: id: mismatch variable name fixes
l10n: vi.po(5227t): Fixed typo after run git-po-helper
Merge branch 'daniel' of github.com:git-l10n-pt-PT/git-po
ci: run a pedantic build as part of the GitHub workflow
submodule--helper: rename compute_submodule_clone_url()
submodule--helper: remove resolve-relative-url subcommand
submodule--helper: remove add-config subcommand
submodule--helper: remove add-clone subcommand
submodule--helper: convert the bulk of cmd_add() to C
dir: libify and export helper functions from clone.c
submodule--helper: remove repeated code in sync_submodule()
submodule--helper: refactor resolve_relative_url() helper
submodule--helper: add options for compute_submodule_clone_url()
submodule--helper: introduce add-config subcommand
Revert 'diff-merges: let "-m" imply "-p"'
builtin/merge: avoid -Wformat-extra-args from ancient Xcode
object-store: avoid extra ';' from KHASH_INIT
oidtree: avoid nested struct oidtree_node
l10n: vi.po(5227t): Updated Vietnamese translation for v2.32.0
build: update detect-compiler for newer Xcode version
test: fix for COLUMNS and bash 5
Merge branch 'po-id' of github.com:bagasme/git-po
Update docs for change of default merge backend
Change default merge backend from recursive to ort
Makefile: normalize clobbering & xargs for tags targets
Makefile: remove "cscope.out", not "cscope*" in cscope.out target
upload-pack: document and rename --advertise-refs
serve.[ch]: remove "serve_options", split up --advertise-refs code
{upload,receive}-pack tests: add --advertise-refs tests
serve.c: move version line to advertise_capabilities()
serve: move transfer.advertiseSID check into session_id_advertise()
serve.[ch]: don't pass "struct strvec *keys" to commands
serve: use designated initializers
transport: use designated initializers
transport: rename "fetch" in transport_vtable to "fetch_refs"
serve: mark has_capability() as static
Update error message and code comment
merge-strategies.txt: add coverage of the `ort` merge strategy
git-rebase.txt: correct out-of-date and misleading text about renames
merge-strategies.txt: fix simple capitalization error
merge-strategies.txt: avoid giving special preference to patience algorithm
merge-strategies.txt: do not imply using copy detection is desired
merge-strategies.txt: update wording for the resolve strategy
Documentation: edit awkward references to `git merge-recursive`
directory-rename-detection.txt: small updates due to merge-ort optimizations
git-rebase.txt: correct antiquated claims about --rebase-merges
l10n: id: po-id for 2.33.0 (round 1)
Merge branch 'tr-loc-v2.33' of github.com:bitigchi/git-po
Merge branch 'fr_v2.33_rnd1' of github.com:jnavila/git
diff: --pickaxe-all typofix
merge-ort: remove compile-time ability to turn off usage of memory pools
l10n: git.pot: v2.33.0 round 1 (38 new, 15 removed)
Merge branch 'master' of github.com:git/git
mingw: align symlinks-related rmdir() behavior with Linux
t7508: avoid non POSIX BRE
bundle doc: replace "basis" with "prerequsite(s)"
bundle doc: elaborate on rev<->ref restriction
bundle doc: elaborate on object prerequisites
bundle doc: rewrite the "DESCRIPTION" section
http: rename CURLOPT_FILE to CURLOPT_WRITEDATA
http: drop support for curl < 7.19.3 and < 7.17.0 (again)
t0001: fix broken not-quite getcwd(3) test in bed67874e2
Documentation: render special characters correctly
merge-ort: reuse path strings in pool_alloc_filespec
merge-ort: store filepairs and filespecs in our mem_pool
diffcore-rename, merge-ort: add wrapper functions for filepair alloc/dealloc
merge-ort: switch our strmaps over to using memory pools
merge-ort: set up a memory pool
merge-ort: add pool_alloc, pool_calloc, and pool_strndup wrappers
diffcore-rename: use a mem_pool for exact rename detection's hashmap
merge-ort: rename str{map,intmap,set}_func()
ref-filter: add %(rest) atom
ref-filter: use non-const ref_format in *_atom_parser()
ref-filter: --format=%(raw) support --perl
ref-filter: add %(raw) atom
ref-filter: add obj-type check in grab contents
merge: apply autostash if merge strategy fails
merge: apply autostash if fast-forward fails
Documentation: define 'MERGE_AUTOSTASH'
merge: add missing word "strategy" to a message
bundle tests: use test_cmp instead of grep
bundle tests: use ">file" not ": >file"
SubmittingPatches: replace discussion of Travis with GitHub Actions
SubmittingPatches: move discussion of Signed-off-by above "send"
pull: fix handling of multiple heads
pull: update docs & code for option compatibility with rebasing
pull: abort by default when fast-forwarding is not possible
pull: make --rebase and --no-rebase override pull.ff=only
pull: since --ff-only overrides, handle it first
Makefile: don't use "FORCE" for tags targets
doc: pull: fix rebase=false documentation
test-lib tests: move "run_sub_test" to a new lib-subtest.sh
pull: abort if --ff-only is given and fast-forwarding is impossible
t7601: add tests of interactions with multiple merge heads and config
t7601: test interaction of merge/rebase/fast-forward flags and options
doc: clarify description of 'submodule.recurse'
merge-ort: restart merge with cached renames to reduce process entry cost
merge-ort: avoid recursing into directories when we don't need to
merge-ort: defer recursing into directories when merge base is matched
merge-ort: add a handle_deferred_entries() helper function
merge-ort: add data structures for allowable trivial directory resolves
merge-ort: add some more explanations in collect_merge_info_callback()
merge-ort: resolve paths early when we have sufficient information
test-lib-functions: use test-tool for [de]packetize()
parse-options: don't complete option aliases by default
rename: bump limit defaults yet again
diffcore-rename: treat a rename_limit of 0 as unlimited
doc: clarify documentation for rename/copy limits
diff: correct warning message when renameLimit exceeded
advice.h: add missing __attribute__((format)) & fix usage
*.h: add a few missing __attribute__((format))
*.c static functions: add missing __attribute__((format))
git-diff: fix missing --merge-base docs
sequencer.c: move static function to avoid forward decl
*.c static functions: don't forward-declare __attribute__
submodule--helper: introduce add-clone subcommand
submodule--helper: refactor module_clone()
submodule: prefix die messages with 'fatal'
pack-objects: fix segfault in --stdin-packs option
pkt-line: replace "stateless separator" with "response end"
Merge branch 'master' of github.com:Softcatala/git-po
fetch: fix segfault in --negotiate-only without --negotiation-tip=*
imap-send.c: use less verbose strbuf_fread() idiom
t7400: test failure to add submodule in tracked path
submodule--helper: remove redundant include
help: convert git_cmd to page in one place
t6402: preserve git exit status code
t6400: preserve git ls-files exit status code
test-lib-functions: introduce test_stdout_line_count
bundle: remove "ref_list" in favor of string-list.c API
bundle.c: use a temporary variable for OIDs and names
bundle cmd: stop leaking memory from parse_options_cmd_bundle()
l10n: id.po: fix mismatched variable names
string-list.h users: change to use *_{nodup,dup}()
string-list.[ch]: add a string_list_init_{nodup,dup}()
dir.[ch]: replace dir_init() with DIR_INIT
*.c *_init(): define in terms of corresponding *_INIT macro
*.h: move some *_INIT to designated initializers
fetch: document the --negotiate-only option
send-pack.c: move "no refs in common" abort earlier
merge-recursive: handle rename-to-self case
merge-ort: ensure we consult df_conflict and path_conflicts
t6423: test directory renames causing rename-to-self
test-lib.sh: set COLUMNS=80 for --verbose repeatability
Makefile: add QUIET_GEN to "cscope" target
Makefile: move ".PHONY: cscope" near its target
Makefile: add and use the ".DELETE_ON_ERROR" flag
submodule: remove unnecessary `prefix` based option logic
pack-objects tests: cover blindspots in stdin handling
config.mak.uname: PCRE1 cleanup
git-worktree.txt: fix typo in example path
t: fix typos in test messages
blame: correct name of config option in docs
show-branch tests: add missing tests
show-branch: don't <COLOR></RESET> for space characters
mktag tests: test fast-export
mktag tests: test for-each-ref
mktag tests: test update-ref and reachable fsck
mktag tests: test hash-object --literally and unreachable fsck
merge-ort: add prefetching for content merges
diffcore-rename: use a different prefetch for basename comparisons
diffcore-rename: allow different missing_object_cb functions
t6421: add tests checking for excessive object downloads during merge
l10n: fixed tripple-letter typos
pull: trivial whitespace style fix
pull: trivial cleanup
pull: cleanup autostash check
test: refactor to use "get_abbrev_oid" to get abbrev oid
test: refactor to use "test_commit" to create commits
test: compare raw output, not mangle tabs and spaces
sideband: don't lose clear-to-eol at packet boundary
t6020: fix incompatible parameter expansion
promisor-remote: output trace2 statistics for number of objects fetched
comments: avoid using the gender of our users
doc: avoid using the gender of other people
gc tests: add a test for the "pre-auto-gc" hook
pre-commit hook tests: don't leave "actual" nonexisting on failure
graph: improve grammar of "invalid color" error message
show-branch tests: modernize test code
show-branch tests: rename the one "show-branch" test file
mktag tests: invert --no-strict test
mktag tests: parse out options in helper
*: fix typos which duplicate a word
cmake: add warning for ignored MSGFMT_EXE
cmake: create compile_commands.json by default
cmake: add knob to disable vcpkg
merge-ort: miscellaneous touch-ups
Fix various issues found in comments
diffcore-rename: avoid unnecessary strdup'ing in break_idx
merge-ort: replace string_list_df_name_compare with faster alternative
mailinfo: use starts_with() when checking scissors
MyFirstContribution: link #git-devel to Libera Chat
builtins + test helpers: use return instead of exit() in cmd_*
t: use user-specified utf-8 locale for testing svn
doc: merge: mention default of defaulttoupstream
doc/log: correct default for --decorate
xdiff: use BUG(...), not xdl_bug(...)
read-cache.c: don't guard calls to progress.c API
protocol-caps.h: add newline at end of file
t: fix whitespace around &&
l10n: zh_CN: review for git v2.32.0 l10n round 1
l10n: es: 2.32.0 round 1
l10n: zh_CN: for git v2.32.0 l10n round 1
Merge branch 'fix_typo' of github.com:e-yes/git
Merge branch 'pt-PT' of github.com:git-l10n-pt-PT/git-po
cat-file: merge two block into one
cat-file: handle trivial --batch format with --batch-all-objects
l10n: de.po: Update German translation for Git v2.32.0
contrib/completion: fix zsh completion regression from 59d85a2a05
l10n: README: note on fuzzy translations
l10n: README: document l10n conventions
l10n: README: document "core translation"
l10n: README: document git-po-helper
l10n: README: add file extention ".md"
push: don't get a full remote object
push: only check same_remote when needed
push: remove trivial function
push: remove redundant check
push: factor out the typical case
push: get rid of all the setup_push_* functions
push: trivial simplifications
push: make setup_push_* return the dst
push: only get the branch when needed
push: factor out null branch check
push: split switch cases
push: return immediately in trivial switch case
push: create new get_upstream_ref() helper
doc: push: explain default=simple correctly
push: remove unused code in setup_push_upstream()
push: simplify setup_push_simple()
push: reorganize setup_push_simple()
push: copy code to setup_push_simple()
push: hedge code of default=simple
push: rename !triangular to same_remote
builtin/fsck.c: don't conflate "int" and "enum" in callback
Merge branch 'l10n/zh_TW/21-05-20' of github.com:l10n-tw/git-po
Merge branch 'master' of github.com:Softcatala/git-po
perl: nano-optimize by replacing Cwd::cwd() with Cwd::getcwd()
send-email: move trivial config handling to Perl
perl: lazily load some common Git.pm setup code
send-email: lazily load modules for a big speedup
send-email: get rid of indirect object syntax
send-email: use function syntax instead of barewords
send-email: lazily shell out to "git var"
send-email: lazily load config for a big speedup
send-email: copy "config_regxp" into git-send-email.perl
send-email: refactor sendemail.smtpencryption config parsing
send-email: remove non-working support for "sendemail.smtpssl"
send-email tests: test for boolean variables without a value
send-email tests: support GIT_TEST_PERL_FATAL_WARNINGS=true
dir: introduce readdir_skip_dot_and_dotdot() helper
dir: update stale description of treat_directory()
pack-objects: move static inline from a header to the sole consumer
Merge branch 'fr_next' of github.com:jnavila/git
send-email: move "hooks_path" invocation to git-send-email.perl
send-email: don't needlessly abs_path() the core.hooksPath
l10n: id: po-id for 2.32.0 (round 1)
send-email: fix missing error message regression
packfile-uri.txt: fix blobPackfileUri description
doc: avoid using rm directly
doc: simplify Makefile using .DELETE_ON_ERROR
doc: remove unnecessary rm instances
doc: improve asciidoc dependencies
doc: refactor common asciidoc dependencies
l10n: vi.po(5204t): Updated Vietnamese translation for v2.32.0
l10n: zh_TW.po: localized
t: use configured TAR instead of tar
stash show: use stash.showIncludeUntracked even when diff options given
l10n: zh_TW.po: v2.32.0 round 1 (11 untranslated)
diff-merges: let "-m" imply "-p"
diff-merges: rename "combined_imply_patch" to "merges_imply_patch"
stash list: stop passing "-m" to "git log"
git-svn: stop passing "-m" to "git rev-list"
diff-merges: move specific diff-index "-m" handling to diff-index
t4013: test "git diff-index -m"
t4013: test "git diff-tree -m"
t4013: test "git log -m --stat"
t4013: test "git log -m --raw"
t4013: test that "-m" alone has no effect in "git log"
trace2: refactor to avoid gcc warning under -O3
merge-ort, diffcore-rename: employ cached renames when possible
merge-ort: handle interactions of caching and rename/rename(1to1) cases
merge-ort: add helper functions for using cached renames
merge-ort: preserve cached renames for the appropriate side
merge-ort: avoid accidental API mis-use
merge-ort: add code to check for whether cached renames can be reused
merge-ort: populate caches of rename detection results
merge-ort: add data structures for in-memory caching of rename detection
t6429: testcases for remembering renames
fast-rebase: write conflict state to working tree, index, and HEAD
fast-rebase: change assert() to BUG()
Documentation/technical: describe remembering renames optimization
l10n: fix typos in po/TEAMS
setup: split "extensions found" messages into singular and plural
fetch: improve grammar of "shallow roots" message
xsize_t: avoid implementation defined behavior when len < 0
l10n: fr: fixed inconsistencies
l10n: git.pot: v2.32.0 round 1 (126 new, 26 removed)
submodule: use the imperative mood to describe the --files option
stash: don't translate literal commands
merge: don't translate literal commands
l10n: Update Catalan translation
ref-filter: introduce enum atom_type
ref-filter: add objectsize to used_atom
l10n: ru.po: fix typo in Russian translation
git-prompt: work under set -u
stash show: fix segfault with --{include,only}-untracked
t3905: correct test title
dir: introduce readdir_skip_dot_and_dotdot() helper
dir: update stale description of treat_directory()
dir: traverse into untracked directories if they may have ignored subfiles
dir: avoid unnecessary traversal into ignored directory
t3001, t7300: add testcase showcasing missed directory traversal
t7300: add testcase showing unnecessary traversal into ignored directory
ls-files: error out on -i unless -o or -c are specified
dir: report number of visited directories and paths with trace2
dir: convert trace calls to trace2 equivalents
pretty: fix a typo in the documentation for %(trailers)
Makefile: make PERL_DEFINES recursively expanded
ref-filter: fix read invalid union member bug
describe tests: support -C in "check_describe"
describe tests: fix nested "test_expect_success" call
describe tests: don't rely on err.actual from "check_describe"
describe tests: refactor away from glob matching
describe tests: improve test for --work-tree & --dirty
xdiff-interface: replace discard_hunk_line() with a flag
xdiff users: use designated initializers for out_line
pickaxe -G: don't special-case create/delete
pickaxe -G: terminate early on matching lines
xdiff-interface: allow early return from xdiff_emit_line_fn
xdiff-interface: prepare for allowing early return
pickaxe -S: slightly optimize contains()
pickaxe: rename variables in has_changes() for brevity
pickaxe -S: support content with NULs under --pickaxe-regex
pickaxe: assert that we must have a needle under -G or -S
pickaxe: refactor function selection in diffcore-pickaxe()
perf: add performance test for pickaxe
pickaxe/style: consolidate declarations and assignments
diff.h: move pickaxe fields together again
pickaxe: die when --find-object and --pickaxe-all are combined
pickaxe: die when -G and --pickaxe-regex are combined
pickaxe tests: add missing test for --no-pickaxe-regex being an error
pickaxe tests: test for -G, -S and --find-object incompatibility
pickaxe tests: add test for "log -S" not being a regex
pickaxe tests: add test for diffgrep_consume() internals
pickaxe tests: refactor to use test_commit --append --printf
grep/pcre2 tests: reword comments referring to kwset
test-lib: split up and deprecate test_create_repo()
test-lib: do not show advice about init.defaultBranch under --verbose
test-lib: reformat argument list in test_create_repo()
submodule tests: use symbolic-ref --short to discover branch name
test-lib functions: add --printf option to test_commit
describe tests: convert setup to use test_commit
test-lib functions: add an --annotated option to "test_commit"
test-lib-functions: document test_commit --no-tag
test-lib-functions: reword "test_commit --append" docs
test-lib tests: remove dead GIT_TEST_FRAMEWORK_SELFTEST variable
test-lib: bring $remove_trash out of retirement
merge-ort: split "distinct types" message into two translatable messages
am: learn to process quoted lines that ends with CRLF
mailinfo: allow stripping quoted CR without warning
mailinfo: allow squelching quoted CRLF warning
mailinfo: warn if CRLF found in decoded base64/QP email
pretty-formats.txt: add missing space
git-repack.txt: remove spurious ")"
mailinfo: stop parsing options manually
mailinfo: load default metainfo_charset lazily
add: die if both --dry-run and --interactive are given
perl: use mock i18n functions under NO_GETTEXT=Y
Makefile: regenerate *.pm on NO_PERL_CPAN_FALLBACKS change
Makefile: regenerate perl/build/* if GIT-PERL-DEFINES changes
Makefile: don't re-define PERL_DEFINES
streaming.c: move {open,close,read} from vtable to "struct git_istream"
streaming.c: stop passing around "object_info *" to open()
streaming.c: remove {open,close,read}_method_decl() macros
streaming.c: remove enum/function/vtbl indirection
streaming.c: avoid forward declarations
sparse-index.c: remove set_index_sparse_config()
git-p4: speed up search for branch parent
git-p4: ensure complex branches are cloned correctly
t6423: rename file within directory that other side renamed
work around zsh comment in __git_complete_worktree_paths
trailer: add new .cmd config option
docs: correct descript of trailer.<token>.command
merge: fix swapped "up to date" message components
repack: avoid loosening promisor objects in partial clones
pretty: provide human date format
pretty tests: give --date/format tests a better description
pretty tests: simplify %aI/%cI date format test
git-completion.bash: consolidate cases in _git_stash()
git-completion.bash: use $__git_cmd_idx in more places
git-completion.bash: rename to $__git_cmd_idx
git-completion.bash: separate some commands onto their own line
doc: clarify the filename encoding in git diff
ref-filter: reuse output buffer
ref-filter: get rid of show_ref_array_item
doc/diff-options: document new --diff-merges features
diff-merges: introduce log.diffMerges config variable
diff-merges: adapt -m to enable default diff format
diff-merges: refactor set_diff_merges()
diff-merges: introduce --diff-merges=on
transport: respect verbosity when setting upstream
api docs: document that BUG() emits a trace2 error event
api docs: document BUG() in api-error-handling.txt
usage.c: don't copy/paste the same comment three times
tests: remove all uses of test_i18cmp
svn tests: refactor away a "set -e" in test body
svn tests: remove legacy re-setup from init-clone test
docs: fix linting issues due to incorrect relative section order
doc lint: lint relative section order
doc lint: lint and fix missing "GIT" end sections
doc lint: fix bugs in, simplify and improve lint script
doc lint: Perl "strict" and "warnings" in lint-gitlink.perl
Documentation/Makefile: make doc.dep dependencies a variable again
Documentation/Makefile: make $(wildcard howto/*.txt) a var
rebase: don't override --no-reschedule-failed-exec with config
rebase tests: camel-case rebase.rescheduleFailedExec consistently
Makefile: add missing dependencies of 'config-list.h'
userdiff: add support for Scheme
blame tests: simplify userdiff driver test
blame tests: don't rely on t/t4018/ directory
userdiff: remove support for "broken" tests
userdiff tests: list builtin drivers via test-tool
userdiff tests: explicitly test "default" pattern
userdiff: add and use for_each_userdiff_driver()
userdiff style: normalize pascal regex declaration
userdiff style: declare patterns with consistent style
userdiff style: re-order drivers in alphabetical order
config.c: remove last remnant of GIT_TEST_GETTEXT_POISON
bash completion: complete CHERRY_PICK_HEAD
git-send-email: improve --validate error output
git-send-email: refactor duplicate $? checks into a function
git-send-email: test full --validate output
test-bloom: fix missing 'bloom' from usage string
user-manual.txt: assign preface an id and a title
git-send-email: replace "map" in void context with "for"
Makefile: add QUIET_GEN to "tags" and "TAGS" targets
sequencer: fix edit handling for cherry-pick and revert messages
column, range-diff: downcase option description
fetch-pack: use new fsck API to printing dangling submodules
fetch-pack: use file-scope static struct for fsck_options
fetch-pack: don't needlessly copy fsck_options
fsck.c: move gitmodules_{found,done} into fsck_options
fsck.c: add an fsck_set_msg_type() API that takes enums
fsck.c: pass along the fsck_msg_id in the fsck_error callback
fsck.[ch]: move FOREACH_FSCK_MSG_ID & fsck_msg_id from *.c to *.h
fsck.c: give "FOREACH_MSG_ID" a more specific name
fsck.c: undefine temporary STR macro after use
fsck.c: call parse_msg_type() early in fsck_set_msg_type()
fsck.h: re-order and re-assign "enum fsck_msg_type"
fsck.h: move FSCK_{FATAL,INFO,ERROR,WARN,IGNORE} into an enum
fsck.c: refactor fsck_msg_type() to limit scope of "int msg_type"
fsck.c: rename remaining fsck_msg_id "id" to "msg_id"
fsck.c: remove (mostly) redundant append_msg_id() function
fsck.c: rename variables in fsck_set_msg_type() for less confusion
fsck.h: use "enum object_type" instead of "int"
fsck.h: use designed initializers for FSCK_OPTIONS_{DEFAULT,STRICT}
git-completion.bash: use __gitcomp_builtin() in _git_stash()
git-completion.bash: extract from else in _git_stash()
git-completion.bash: pass $__git_subcommand_idx from __git_main()
mktag tests: fix broken "&&" chain
rebase: remove transitory rebase.useBuiltin setting & env
format-patch: allow a non-integral version numbers
commit: add --trailer option
diff --no-index tests: test mode normalization
diff --no-index tests: add test for --exit-code
tree.h API: simplify read_tree_recursive() signature
tree.h API: expose read_tree_1() as read_tree_at()
archive: stop passing "stage" through read_tree_recursive()
ls-files: refactor away read_tree()
ls-files: don't needlessly pass around stage variable
tree.c API: move read_tree() into builtin/ls-files.c
ls-files tests: add meaningful --with-tree tests
show tests: add test for "git show <tree>"
Add testing with merge-ort merge strategy
t6423: mark remaining expected failure under merge-ort as such
Revert "merge-ort: ignore the directory rename split conflict for now"
merge-recursive: add a bunch of FIXME comments documenting known bugs
merge-ort: write $GIT_DIR/AUTO_MERGE whenever we hit a conflict
t: mark several submodule merging tests as fixed under merge-ort
merge-ort: implement CE_SKIP_WORKTREE handling with conflicted entries
t6428: new test for SKIP_WORKTREE handling and conflicts
merge-ort: support subtree shifting
merge-ort: let renormalization change modify/delete into clean delete
merge-ort: have ll_merge() use a special attr_index for renormalization
merge-ort: add a special minimal index just for renormalization
merge-ort: use STABLE_QSORT instead of QSORT where required
INSTALL: note on using Asciidoctor to build doc
diffcore-rename: determine which relevant_sources are no longer relevant
merge-ort: record the reason that we want a rename for a file
diffcore-rename: add computation of number of unknown renames
diffcore-rename: check if we have enough renames for directories early on
diffcore-rename: only compute dir_rename_count for relevant directories
merge-ort: record the reason that we want a rename for a directory
merge-ort, diffcore-rename: tweak dirs_removed and relevant_source type
diffcore-rename: take advantage of "majority rules" to skip more renames
fsck.c: refactor and rename common config callback
doc/git-commit: add documentation for fixup=[amend|reword] options
t3437: use --fixup with options to create amend! commit
t7500: add tests for --fixup=[amend|reword] options
commit: add a reword suboption to --fixup
commit: add amend suboption to --fixup to create amend! commit
sequencer: export and rename subject_length()
l10n: zh_CN: for git v2.31.0 l10n round 1 and 2
Merge branch 'master' of github.com:vnwildman/git
Merge branch 'l10n/zh_TW/210301' of github.com:l10n-tw/git-po
Merge branch 'po-id' of github.com:bagasme/git-po
Merge branch 'master' of github.com:Softcatala/git-po
Merge branch 'russian-l10n' of github.com:DJm00n/git-po-ru
Merge branch 'pt-PT' of github.com:git-l10n-pt-PT/git-po
doc: describe mergetool configuration in git-mergetool(1)
mergetool: do not enable hideResolved by default
diffcore-rename: avoid doing basename comparisons for irrelevant sources
merge-ort: skip rename detection entirely if possible
merge-ort: use relevant_sources to filter possible rename sources
merge-ort: precompute whether directory rename detection is needed
merge-ort: introduce wrappers for alternate tree traversal
merge-ort: add data structures for an alternate tree traversal
merge-ort: precompute subset of sources for which we need rename detection
diffcore-rename: enable filtering possible rename sources
l10n: de.po: Update German translation for Git v2.31.0
l10n: vi.po(5104t): for git v2.31.0 l10n round 2
l10n: es: 2.31.0 round 2
l10n: Add translation team info
l10n: start Indonesian translation
stash show: learn stash.showIncludeUntracked
stash show: teach --include-untracked and --only-untracked
l10n: zh_TW.po: v2.31.0 round 2 (15 untranslated)
Merge branch 'fr_next' of github.com:jnavila/git
Merge branch 'master' of github.com:nafmo/git-l10n-sv
Documentation/RelNotes: improve release note for rename detection work
l10n: git.pot: v2.31.0 round 2 (9 new, 8 removed)
Merge branch 'master' of github.com:git/git
t9801: replace test -f with test_path_is_file
git-cat-file.txt: remove references to "sha1"
git-cat-file.txt: monospace args, placeholders and filenames
Merge branch 'master' of github.com:nafmo/git-l10n-sv
Merge branch 'pl' of github.com:Arusekk/git-po
diffcore-rename: compute dir_rename_guess from dir_rename_counts
diffcore-rename: limit dir_rename_counts computation to relevant dirs
diffcore-rename: compute dir_rename_counts in stages
diffcore-rename: extend cleanup_dir_rename_info()
diffcore-rename: move dir_rename_counts into dir_rename_info struct
diffcore-rename: add function for clearing dir_rename_count
Move computation of dir_rename_count from merge-ort to diffcore-rename
diffcore-rename: add a mapping of destination names to their indices
diffcore-rename: provide basic implementation of idx_possible_rename()
diffcore-rename: use directory rename guided basename comparisons
l10n: git.pot: v2.31.0 round 1 (155 new, 89 removed)
remote: write camel-cased *.pushRemote on rename
remote: add camel-cased *.tagOpt key, like clone
i18n.txt: camel case and monospace "i18n.commitEncoding"
rebase: add a config option for --no-fork-point
Makefile: add {program,xdiff,test,git,fuzz}-objs & objects targets
Makefile: split OBJECTS into OBJECTS and GIT_OBJS
Makefile: sort OBJECTS assignment for subsequent change
Makefile: split up long OBJECTS line
Makefile: guard against TEST_OBJS in the environment
difftool.c: learn a new way start at specified file
gitmailmap.txt: fix rendering of e-mail addresses
git.txt: fix monospace rendering
grep/pcre2: move definitions of pcre2_{malloc,free}
grep/pcre2: move back to thread-only PCREv2 structures
grep/pcre2: actually make pcre2 use custom allocator
grep/pcre2: use pcre2_maketables_free() function
grep/pcre2: use compile-time PCREv2 version test
grep/pcre2: add GREP_PCRE2_DEBUG_MALLOC debug mode
grep/pcre2: prepare to add debugging to pcre2_malloc()
grep/pcre2: correct reference to grep_init() in comment
grep/pcre2: drop needless assignment to NULL
grep/pcre2: drop needless assignment + assert() on opt->pcre2
rev-list-options.txt: fix rendering of bonus paragraph
blame: remove unnecessary use of get_commit_info()
merge-ort: call diffcore_rename() directly
gitdiffcore doc: mention new preliminary step for rename detection
diffcore-rename: guide inexact rename detection based on basenames
diffcore-rename: complete find_basename_matches()
diffcore-rename: compute basenames of source and dest candidates
t4001: add a test comparing basename similarity and content similarity
diffcore-rename: filter rename_src list when possible
ref-filter: use pretty.c logic for trailers
pretty.c: capture invalid trailer argument
pretty.c: refactor trailer logic to `format_set_trailers_options()`
t6300: use function to test trailer options
diffcore-rename: no point trying to find a match better than exact
test-lib-functions: assert correct parameter count
test-lib-functions: remove bug-inducing "diagnostics" helper param
test libs: rename "diff-lib" to "lib-diff"
config: improve error message for boolean config
t7001: use `test` rather than `[`
t7001: use here-docs instead of echo
t7001: put each command on a separate line
t7001: use '>' rather than 'touch'
t7001: avoid using `cd` outside of subshells
t7001: remove whitespace after redirect operators
t7001: modernize subshell formatting
t7001: remove unnecessary blank lines
t7001: indent with TABs instead of spaces
t7001: modernize test formatting
stash: declare ref_stash as an array
t3905: use test_cmp() to check file contents
t3905: replace test -s with test_file_not_empty
t3905: remove nested git in command substitution
t3905: move all commands into test cases
t3905: remove spaces after redirect operators
git-stash.txt: be explicit about subcommand options
diff: plug memory leak from regcomp() on {log,diff} -I
diff: add an API for deferred freeing
tests: remove most uses of test_i18ncmp
tests: remove last uses of C_LOCALE_OUTPUT
tests: remove most uses of C_LOCALE_OUTPUT
tests: remove last uses of GIT_TEST_GETTEXT_POISON=false
doc/rebase -i: fix typo in the documentation of 'fixup' command
t/t3437: fixup the test 'multiple fixup -c opens editor once'
t/t3437: use named commits in the tests
t/t3437: simplify and document the test helpers
t/t3437: check the author date of fixed up commit
t/t3437: remove the dependency of 'expected-message' file from tests
t/t3437: fixup here-docs in the 'setup' test
t/lib-rebase: update the documentation of FAKE_LINES
rebase -i: clarify and fix 'fixup -c' rebase-todo help
t/.gitattributes: sort lines
test-lib-functions: move function to lib-bitmap.sh
test libs: rename gitweb-lib.sh to lib-gitweb.sh
test libs: rename bundle helper to "lib-bundle.sh"
test-lib-functions: remove generate_zero_bytes() wrapper
test-lib-functions: move test_set_index_version() to its user
test lib: change "error" to "BUG" as appropriate
test-lib: remove check_var_migration
sequencer: rename a few functions
sequencer: fixup the datatype of the 'flag' argument
bisect--helper: retire `--check-and-set-terms` subcommand
bisect--helper: reimplement `bisect_skip` shell function in C
bisect--helper: retire `--bisect-auto-next` subcommand
bisect--helper: use `res` instead of return in BISECT_RESET case option
bisect--helper: retire `--bisect-write` subcommand
bisect--helper: reimplement `bisect_replay` shell function in C
bisect--helper: reimplement `bisect_log` shell function in C
git-gui: fix typo in russian locale
pager: properly log pager exit code when signalled
run-command: add braces for "if" block in wait_or_whine()
pager: test for exit code with and without SIGPIPE
pager: refactor wait_for_pager() function
worktree: teach `list` verbose mode
worktree: teach `list` to annotate prunable worktree
worktree: teach `list --porcelain` to annotate locked worktree
t2402: ensure locked worktree is properly cleaned up
worktree: teach worktree_lock_reason() to gently handle main worktree
worktree: teach worktree to lazy-load "prunable" reason
worktree: libify should_prune_worktree()
doc/git-rebase: add documentation for fixup [-C|-c] options
rebase -i: teach --autosquash to work with amend!
t3437: test script for fixup [-C|-c] options in interactive rebase
rebase -i: add fixup [-C | -c] command
sequencer: use const variable for commit message comments
sequencer: pass todo_item to do_pick_commit()
l10n: ru.po: update Russian translation
ci: do not cancel all jobs of a matrix if one fails
test-lib: prevent '--stress-jobs=X' from being ignored
grep/log: remove hidden --debug and --grep-debug options
grep/pcre2: better support invalid UTF-8 haystacks
grep/pcre2 tests: don't rely on invalid UTF-8 data test
merge-ort: begin performance work; instrument with trace2_region_* calls
merge-ort: ignore the directory rename split conflict for now
merge-ort: fix massive leak
Remove support for v1 of the PCRE library
config.mak.uname: remove redundant NO_LIBPCRE1_JIT flag
test-lib: test_region looks for trace2 regions
rm tests: actually test for SIGPIPE in SIGPIPE test
archive tests: use a cheaper "zipinfo -h" invocation to get header
upload-pack tests: avoid a non-zero "grep" exit status
git svn mergeinfo tests: refactor "test -z" to use test_must_be_empty
git svn mergeinfo tests: modernize redirection & quoting style
cache-tree tests: explicitly test HEAD and index differences
cache-tree tests: use a sub-shell with less indirection
cache-tree tests: remove unused $2 parameter
cache-tree tests: refactor for modern test style
ls-files.c: add --deduplicate option
ls_files.c: consolidate two for loops into one
ls_files.c: bugfix for --deleted and --modified
use delete_refs when deleting tags or branches
tests: remove uses of GIT_TEST_GETTEXT_POISON=false
tests: remove support for GIT_TEST_GETTEXT_POISON
ci: remove GETTEXT_POISON jobs
merge-ort: fix a directory rename detection bug
merge-ort: process_renames() now needs more defensiveness
merge-ort: implement apply_directory_rename_modifications()
merge-ort: add a new toplevel_dir field
merge-ort: implement handle_path_level_conflicts()
merge-ort: implement check_for_directory_rename()
merge-ort: implement apply_dir_rename() and check_dir_renamed()
merge-ort: implement compute_collisions()
merge-ort: modify collect_renames() for directory rename handling
merge-ort: implement handle_directory_level_conflicts()
merge-ort: implement compute_rename_counts()
merge-ort: copy get_renamed_dir_portion() from merge-recursive.c
merge-ort: add outline of get_provisional_directory_renames()
merge-ort: add outline for computing directory renames
fsck doc: remove ancient out-of-date diagnostics
doc: add corrected commit date info
commit-reach: use corrected commit dates in paint_down_to_common()
commit-graph: use generation v2 only if entire chain does
commit-graph: implement generation data chunk
commit-graph: implement corrected commit date
commit-graph: return 64-bit generation number
commit-graph: add a slab to store topological levels
t6600-test-reach: generalize *_three_modes
commit-graph: consolidate fill_commit_graph_info
revision: parse parent in indegree_walk_step()
commit-graph: fix regression when computing Bloom filters
mailmap doc: use correct environment variable 'GIT_WORK_TREE'
t4203: stop losing return codes of git commands
test-lib-functions.sh: fix usage for test_commit()
pack-write: die on error in write_promisor_file()
CoC: update to version 2.0 + local changes
fetch-pack: refactor writing promisor file
fetch-pack: rename helper to create_promisor_file()
shortlog: remove unused(?) "repo-abbrev" feature
mailmap doc + tests: document and test for case-insensitivity
mailmap tests: add tests for empty "<>" syntax
mailmap tests: add tests for whitespace syntax
mailmap tests: add a test for comment syntax
mailmap doc + tests: add better examples & test them
tests: refactor a few tests to use "test_commit --append"
test-lib functions: add an --append option to test_commit
test-lib functions: add --author support to test_commit
test-lib functions: document arguments to test_commit
test-lib functions: expand "test_commit" comment template
mailmap: test for silent exiting on missing file/blob
mailmap tests: get rid of overly complex blame fuzzing
mailmap tests: add a test for "not a blob" error
mailmap tests: remove redundant entry in test
mailmap tests: improve --stdin tests
mailmap tests: modernize syntax & test idioms
mailmap tests: use our preferred whitespace syntax
mailmap doc: start by mentioning the comment syntax
check-mailmap doc: note config options
mailmap doc: quote config variables `like.this`
mailmap doc: create a new "gitmailmap(5)" man page
refs: allow @{n} to work with n-sized reflog
gettext.c: remove/reword a mostly-useless comment
Makefile: remove a warning about old GETTEXT_POISON flag
refs: factor out set_read_ref_cutoffs()
doc: remove "directory cache" from man pages
t7800-difftool: don't accidentally match tmp dirs
git-send-email.txt: mention less secure app access with Gmail
merge-ort: collect which directories are removed in dirs_removed
merge-ort: initialize and free new directory rename data structures
merge-ort: add new data structures for directory rename detection
branch: show "HEAD detached" first under reverse sort
branch: sort detached HEAD based on a flag
ref-filter: move ref_sorting flags to a bitfield
ref-filter: move "cmp_fn" assignment into "else if" arm
ref-filter: add braces to if/else if/else chain
mergetool--lib: fix '--tool-help' to correctly show available tools
branch tests: add to --sort tests
branch: change "--local" to "--list" in comment
builtin/*: update usage format
mktag: add a --[no-]strict option
read-cache: try not to peek into `struct {lock_,temp}file`
refs/files-backend: don't peek into `struct lock_file`
midx: don't peek into `struct lock_file`
commit-graph: don't peek into `struct lock_file`
builtin/gc: don't peek into `struct lock_file`
mktag: mark strings for translation
mktag: convert to parse-options
mktag: allow omitting the header/body \n separator
mktag: allow turning off fsck.extraHeaderEntry
fsck: make fsck_config() re-usable
mktag: use fsck instead of custom verify_tag()
mktag: use puts(str) instead of printf("%s\n", str)
mktag: remove redundant braces in one-line body "if"
mktag: use default strbuf_read() hint
mktag tests: test verify_object() with replaced objects
mktag tests: improve verify_object() test coverage
mktag tests: test "hash-object" compatibility
mktag tests: stress test whitespace handling
mktag tests: run "fsck" after creating "mytag"
mktag tests: don't create "mytag" twice
mktag tests: don't redirect stderr to a file needlessly
mktag tests: remove needless SHA-1 hardcoding
mktag tests: use "test_commit" helper
mktag tests: don't needlessly use a subshell
mktag doc: update to explain why to use this
completion: add proper public __git_complete
test: completion: add tests for __git_complete
completion: bash: improve function detection
completion: bash: add __git_have_func helper
hash-lookup: rename from sha1-lookup
sha1-lookup: rename `sha1_pos()` as `hash_pos()`
object-file.c: rename from sha1-file.c
object-name.c: rename from sha1-name.c
pack-format.txt: document sizes at start of delta data
diffcore-rename: remove unnecessary duplicate entry checks
t1300: don't needlessly work with `core.foo` configs
t1300: remove duplicate test for `--file no-such-file`
t1300: remove duplicate test for `--file ../foo`
gitmodules.txt: fix 'GIT_WORK_TREE' variable name
merge-ort: add handling for different types of files at same path
merge-ort: copy find_first_merges() implementation from merge-recursive.c
merge-ort: implement format_commit()
merge-ort: copy and adapt merge_submodule() from merge-recursive.c
merge-ort: copy and adapt merge_3way() from merge-recursive.c
merge-ort: flesh out implementation of handle_content_merge()
merge-ort: handle book-keeping around two- and three-way content merge
merge-ort: implement unique_path() helper
merge-ort: handle directory/file conflicts that remain
merge-ort: handle D/F conflict where directory disappears due to merge
CoC: Update word-wrapping to match upstream
l10n: zh_CN: for git v2.30.0 l10n round 1 and 2
Merge branch 'l10n/zh_TW/201223' of github.com:l10n-tw/git-po
l10n: zh_TW.po: v2.30.0 round 2 (1 untranslated)
git-p4: fix syncing file types with pattern
l10n: de.po: Update German translation for Git 2.30.0
mktag doc: grammar fix, when exists -> when it exists
mktag doc: say <hash> not <sha1>
Merge branch 'master' of github.com:Softcatala/git-po
git.txt: fix typos in 'linkgit' macro invocation
Merge branch 'fr_2.30_rnd2' of github.com:jnavila/git
t7900-maintenance: test for magic markers
gc: fix handling of crontab magic markers
git-maintenance.txt: add missing word
t4013: add tests for --diff-merges=first-parent
doc/git-show: include --diff-merges description
doc/rev-list-options: document --first-parent changes merges format
doc/diff-generate-patch: mention new --diff-merges option
doc/git-log: describe new --diff-merges options
diff-merges: add '--diff-merges=1' as synonym for 'first-parent'
diff-merges: add old mnemonic counterparts to --diff-merges
diff-merges: let new options enable diff without -p
diff-merges: do not imply -p for new options
diff-merges: implement new values for --diff-merges
diff-merges: make -m/-c/--cc explicitly mutually exclusive
diff-merges: refactor opt settings into separate functions
diff-merges: get rid of now empty diff_merges_init_revs()
diff-merges: group diff-merge flags next to each other inside 'rev_info'
diff-merges: split 'ignore_merges' field
diff-merges: fix -m to properly override -c/--cc
t4013: add tests for -m failing to override -c/--cc
t4013: support test_expect_failure through ':failure' magic
diff-merges: revise revs->diff flag handling
diff-merges: handle imply -p on -c/--cc logic for log.c
diff-merges: introduce revs->first_parent_merges flag
diff-merges: new function diff_merges_set_dense_combined_if_unset()
diff-merges: new function diff_merges_suppress()
diff-merges: re-arrange functions to match the order they are called in
diff-merges: rename diff_merges_default_to_enable() to match semantics
diff-merges: move checks for first_parent_only out of the module
diff-merges: rename all functions to have common prefix
revision: move diff merges functions to its own diff-merges.c
revision: provide implementation for diff merges tweaks
revision: factor out initialization of diff-merge related settings
revision: factor out setup of diff-merge related settings
revision: factor out parsing of diff-merge related options
test: bisect-porcelain: fix location of files
l10n: vi.po(5037t): v2.30.0 rnd 2
l10n: git.pot: v2.30.0 round 2 (1 new, 2 removed)
Merge remote-tracking branch 'github/master' into git-po-master
git-gui: Fix selected text colors
merge-ort: implement merge_incore_recursive()
merge-ort: make clear_internal_opts() aware of partial clearing
merge-ort: copy a few small helper functions from merge-recursive.c
commit: move reverse_commit_list() from merge-recursive
Merge branch 'fr_next' of github.com:jnavila/git into git-po-master
Merge branch '2.30-rc1' of github.com:bitigchi/git-po
pull: display default warning only when non-ff
merge-ort: add implementation of type-changed rename handling
merge-ort: add implementation of normal rename handling
merge-ort: add implementation of rename collisions
merge-ort: add implementation of rename/delete conflicts
merge-ort: add implementation of both sides renaming differently
merge-ort: add implementation of both sides renaming identically
style: do not "break" in switch() after "return"
l10n: git.pot: v2.30.0 round 1 (70 new, 45 removed)
doc: mention Python 3.x supports
diffcore-rename: accelerate rename_dst setup
diffcore-rename: simplify and accelerate register_rename_src()
t4058: explore duplicate tree entry handling in a bit more detail
t4058: add more tests and documentation for duplicate tree entry handling
diffcore-rename: reduce jumpiness in progress counters
diffcore-rename: simplify limit check
diffcore-rename: avoid usage of global in too_many_rename_candidates()
diffcore-rename: rename num_create to num_destinations
pull: give the advice for choosing rebase/merge much later
pull: refactor fast-forward check
merge-ort: add basic outline for process_renames()
merge-ort: implement compare_pairs() and collect_renames()
merge-ort: implement detect_regular_renames()
merge-ort: add initial outline for basic rename detection
merge-ort: add basic data structures for handling renames
merge-ort: add modify/delete handling and delayed output processing
merge-ort: add die-not-implemented stub handle_content_merge() function
merge-ort: add function grouping comments
merge-ort: add a paths_to_free field to merge_options_internal
merge-ort: add a path_conflict field to merge_options_internal
merge-ort: add a clear_internal_opts helper
merge-ort: add a few includes
merge-ort: free data structures in merge_finalize()
merge-ort: add implementation of record_conflicted_index_entries()
tree: enable cmp_cache_name_compare() to be used elsewhere
merge-ort: add implementation of checkout()
merge-ort: basic outline for merge_switch_to_result()
merge-ort: step 3 of tree writing -- handling subdirectories as we go
merge-ort: step 2 of tree writing -- function to create tree object
merge-ort: step 1 of tree writing -- record basenames, modes, and oids
merge-ort: have process_entries operate in a defined order
merge-ort: add a preliminary simple process_entries() implementation
merge-ort: avoid recursing into identical trees
merge-ort: record stage and auxiliary info for every path
merge-ort: compute a few more useful fields for collect_merge_info
merge-ort: avoid repeating fill_tree_descriptor() on the same tree
merge-ort: implement a very basic collect_merge_info()
merge-ort: add an err() function similar to one from merge-recursive
merge-ort: use histogram diff
merge-ort: port merge_start() from merge-recursive
merge-ort: add some high-level algorithm structure
merge-ort: setup basic internal data structures
pretty format %(trailers): add a "key_value_separator"
pretty format %(trailers): add a "keyonly"
pretty-format %(trailers): fix broken standalone "valueonly"
pretty format %(trailers) doc: avoid repetition
diff: do not show submodule with untracked files as "-dirty"
completion: bash: fix gitk alias regression
pretty format %(trailers) test: split a long line
glossary: improve "branch" definition
stash: fix stash application in sparse-checkouts
stash: remove unnecessary process forking
t7012: add a testcase demonstrating stash apply bugs in sparse checkouts
config.txt: fix a typo (backslash != backquote)
git-gui: ssh-askpass: add a checkbox to show the input text
git-gui: update Russian translation
completion: zsh: fix file completion regression
tests: lib-functions: trivial style cleanups
test: completion: fix typos
.gitignore: remove dangling file
refspec: trivial cleanup
refspec: make @ a synonym of HEAD
tests: push: trivial cleanup
tests: push: improve cleanup of HEAD tests
MyFirstObjectWalk: drop `init_walken_defaults()`
grep: copy struct in one fell swoop
maintenance: fix SEGFAULT when no repository
grep: use designated initializers for `grep_defaults`
grep: don't set up a "default" repo for grep
gc: rename keep_base_pack variable for --keep-largest-pack
gc docs: change --keep-base-pack to --keep-largest-pack
tests: fix description of 'test_set_prereq'
tests: make sure nested lazy prereqs work reliably
completion: bash: improve alias loop detection
pull: check for local submodule modifications with the right range
t5572: describe '--rebase' tests a little more
t5572: add notes on a peculiar test
pull --rebase: compute rebase arguments in separate function
list-objects-filter-options: fix function name in BUG
parse-remote: remove this now-unused library
submodule: remove sh function in favor of helper
submodule: use "fetch" logic instead of custom remote discovery
t5310-pack-bitmaps: skip JGit tests with SHA256
bisect: loosen halfway() check for a large number of commits
shortlog: use strset from strmap.h
Use new HASHMAP_INIT macro to simplify hashmap initialization
strmap: take advantage of FLEXPTR_ALLOC_STR when relevant
strmap: enable allocations to come from a mem_pool
receive-pack: use default version 0 for proc-receive
receive-pack: gently write messages to proc-receive
t5411: new helper filter_out_user_friendly_and_stable_output
config.mak.uname: remove unused NEEDS_SSL_WITH_CURL flag
config.mak.uname: remove unused the NO_R_TO_GCC_LINKER flag
compat/bswap.h: don't assume MSVC is little-endian
completion: bash: check for alias loop
completion: bash: support recursive aliases
compat/bswap.h: simplify MSVC endianness detection
strmap: add a strset sub-type
strmap: split create_entry() out of strmap_put()
doc: fixing two trivial typos in Documentation/
strmap: add functions facilitating use as a string->int map
strmap: enable faster clearing and reusing of strmaps
strmap: add more utility functions
merge,rebase,revert: select ort or recursive by config or environment
strmap: new utility functions
hashmap: provide deallocation function names
hashmap: introduce a new hashmap_partial_clear()
hashmap: allow re-use after hashmap_free()
hashmap: adjust spacing to fix argument alignment
blame: simplify 'setup_blame_bloom_data' interface
blame: simplify 'setup_scoreboard' interface
blame: enable funcname blaming with userdiff driver
line-log: mention both modes in 'blame' and 'log' short help
doc: add more pointers to gitattributes(5) for userdiff
blame-options.txt: also mention 'funcname' in '-L' description
doc: line-range: improve formatting
doc: log, gitk: move '-L' description to 'line-range-options.txt'
doc/diff-options: fix out of place mentions of '--patch/-p'
fast-rebase: demonstrate merge-ort's API via new test-tool command
log, show: add tests for messages containing CRLF
ref-filter: handle CRLF at end-of-line more gracefully
zsh: update copyright notices
completion: bash: remove old compat wrappers
completion: bash: cleanup cygwin check
completion: bash: trivial cleanup
completion: zsh: add simple version check
completion: zsh: trivial simplification
completion: zsh: add alias descriptions
completion: zsh: improve command tags
completion: zsh: refactor command completion
completion: zsh: shuffle functions around
completion: zsh: simplify file_direct
completion: zsh: simplify nl_append
completion: zsh: trivial cleanup
completion: zsh: simplify direct compadd
completion: zsh: simplify compadd functions
completion: zsh: fix splitting of words
completion: zsh: add missing direct_append
completion: fix conflict with bashcomp
completion: zsh: fix completion for --no-.. options
completion: bash: remove zsh wrapper
completion: bash: synchronize zsh wrapper
completion: zsh: fix for command aliasing
completion: prompt: fix color for Zsh
completion: zsh: update slave script locations
remote: add meaningful exit code on missing/existing
merge-ort-wrappers: new convience wrappers to mimic the old merge API
merge-ort: barebones API of new merge strategy with empty implementation
completion: zsh: fix for directories with spaces
completion: zsh: reorganize install instructions
completion: zsh: fix bash script extension
completion: zsh: fix name due to broken autoloading
completion: zsh: fix __gitcomp_direct()
t6423: add more details about direct resolution of directories
t6423: note improved ort handling with untracked files
t6423, t6436: note improved ort handling with dirty files
merge tests: expect slight differences in output for recursive vs. ort
t6423: expect improved conflict markers labels in the ort backend
t6404, t6423: expect improved rename/delete handling in ort backend
t6416: correct expectation for rename/rename(1to2) + directory/file
merge tests: expect improved directory/file conflict handling in ort
t/: new helper for tests that pass with ort but fail with recursive
t7201: put each command on a separate line
t7201: use 'git -C' to avoid subshell
t7102,t7201: remove whitespace after redirect operator
sequencer: remove duplicate rollback_lock_file() call
t7102,t7201: remove unnecessary blank spaces in test body
t7101,t7102,t7201: modernize test formatting
filter-branch doc: fix filter-repo typo
t2200,t9832: avoid using 'git' upstream in a pipe
test-lib: reduce verbosity of skipped tests
t6006, t6012: adjust tests to use 'setup' instead of synonyms
test-lib: allow selecting tests by substring/glob with --run
t7518: fix flaky grep invocation
t0000: use test_path_is_file instead of "test -f"
Merge branch 'master' of github.com:Softcatala/git-po
l10n: zh_CN: for git v2.29.0 l10n round 1 and 2
t6423: more involved rules for renaming directories into each other
t6423: update directory rename detection tests with new rule
t6423: more involved directory rename test
directory-rename-detection.txt: update references to regression tests
bisect--helper: retire `--bisect-autostart` subcommand
bisect--helper: retire `--write-terms` subcommand
bisect--helper: retire `--check-expected-revs` subcommand
bisect--helper: reimplement `bisect_state` & `bisect_head` shell functions in C
bisect--helper: retire `--next-all` subcommand
bisect--helper: retire `--bisect-clean-state` subcommand
bisect--helper: finish porting `bisect_start()` to C
completion: fix zsh installation instructions
l10n: de.po: Update German translation for Git 2.29.0
Merge branch 'pt-PT' of github.com:git-l10n-pt-PT/git-po
hashmap: add usage documentation explaining hashmap_free[_entries]()
l10n: vi(5013t): Updated translation for v2.29.0 rd2
worktree: teach `list` to annotate locked worktree
Merge branch 'master' of github.com:alshopov/git-po
Merge branch 'master' of github.com:nafmo/git-l10n-sv
Merge branch 'update-italian-translation' of github.com:AlessandroMenti/git-po
Merge branch 'l10n/zh_TW/201010' of github.com:l10n-tw/git-po
Merge branch '2.29-r2' of github.com:bitigchi/git-po
l10n: zh_TW.po: v2.29.0 round 2 (2 untranslated)
l10n: git.pot: v2.29.0 round 2 (1 new, 1 removed)
Merge tag 'v2.29.0-rc1' of github.com:git/git
contrib/git-resurrect.sh: use hash-agnostic OID pattern
contrib/git-resurrect.sh: indent with tabs
Makefile: ASCII-sort += lists
checkout: learn to respect checkout.guess
Merge branch 'fr_2.29.0_rnd_1' of github.com:jnavila/git
compat/mingw.h: drop extern from function declaration
t2016: add a NEEDSWORK about the PERL prerequisite
add-patch: add NEEDSWORK about comparing commits
Doc: document "A...B" form for <tree-ish> in checkout and switch
builtin/checkout: fix `git checkout -p HEAD...` bug
Documentation/config/checkout: replace sq with backticks
userdiff: PHP: catch "abstract" and "final" functions
git-gui: improve dark mode support
t5534: split stdout and stderr redirection
l10n: git.pot: v2.29.0 round 1 (124 new, 42 removed)
gitsubmodules doc: invoke 'ls-files' with '--recurse-submodules'
credential: treat CR/LF as line endings in the credential protocol
t, doc: update tests, reference for "--force-if-includes"
push: parse and set flag for "--force-if-includes"
push: add reflog check for "--force-if-includes"
gitk: replace tabs with spaces
format-patch: teach format.useAutoBase "whenAble" option
refspec: add support for negative refspecs
diff: get rid of redundant 'dense' argument
Doc: show example scissors line
config/uploadpack.txt: fix typo in `--filter=tree:<n>`
config/fmt-merge-msg.txt: drop space in quote
worktree: use skip_prefix to parse target
worktree: rename copy-pasted variable
worktree: update renamed variable in comment
worktree: inline `worktree_ref()` into its only caller
wt-status: introduce wt_status_state_free_buffers()
wt-status: print to s->fp, not stdout
wt-status: replace sha1 mentions with oid
completion: complete refs after 'git restore -s'
completion: use "prev" variable instead of introducing "prevword"
bisect: don't use invalid oid as rev when starting
pull: don't warn if pull.ff has been set
diff: fix modified lines stats with --stat and --numstat
bisect--helper: reimplement `bisect_next` and `bisect_auto_next` shell functions in C
bisect: call 'clear_commit_marks_all()' in 'bisect_next_all()'
bisect--helper: reimplement `bisect_autostart` shell function in C
hooks--update.sample: use hash-agnostic zero OID
hooks--pre-push.sample: use hash-agnostic zero OID
hooks--pre-push.sample: modernize script
git-gui: fix mixed tabs and spaces; prefer tabs
contrib/completion: complete `git diff --merge-base`
builtin/diff-tree: learn --merge-base
remote-mediawiki: use "sh" to eliminate unquoted commands
remote-mediawiki: annotate unquoted uses of run_git()
remote-mediawiki: convert to quoted run_git() invocation
remote-mediawiki: provide a list form of run_git()
remote-mediawiki tests: annotate failing tests
remote-mediawiki: fix duplicate revisions being imported
remote-mediawiki tests: use CLI installer
remote-mediawiki tests: use inline PerlIO for readability
remote-mediawiki tests: replace deprecated Perl construct
remote-mediawiki tests: use a more idiomatic dispatch table
remote-mediawiki tests: use "$dir/" instead of "$dir."
remote-mediawiki tests: change `[]` to `test`
remote-mediawiki tests: use test_cmp in tests
remote-mediawiki tests: use a 10 character password
remote-mediawiki tests: use the login/password variables
remote-mediawiki doc: don't hardcode Debian PHP versions
builtin/diff-index: learn --merge-base
t4068: add --merge-base tests
diff-lib: define diff_get_merge_base()
diff-lib: accept option flags in run_diff_index()
Doc: prefer more specific file name
ref-filter: make internal reachable-filter API more precise
contrib/completion: complete options that take refs for format-patch
contrib/completion: extract common diff/difftool options
git-diff.txt: backtick quote command text
git-diff-index.txt: make --cached description a proper sentence
t4068: remove unnecessary >tmp
remote-mediawiki doc: link to MediaWiki's current version
remote-mediawiki doc: correct link to GitHub project
ref-filter: allow merged and no-merged filters
Doc: cover multiple contains/no-contains filters
t3201: test multiple branch filter combinations
blame.c: replace instance of !oidcmp for oideq
t3200: clean side effect of git checkout --orphan
contrib/buildsystems: fix expat library name for generated vcxproj
submodule: suppress checking for file name and ref ambiguity for object ids
Makefile: add support for generating JSON compilation database
log_tree_diff: get rid of extra check for NULL
log_tree_diff: get rid of code duplication for first_parent_only
fetch: do not look for submodule changes in unchanged refs
vcbuild: fix batch file name in README
vcbuild: fix library name for expat with make MSVC=1
git.txt: correct stale 'GIT_EXTERNAL_DIFF' description
revision: add separate field for "-m" of "diff-index -m"
doc: mention GIT_SEQUENCE_EDITOR and 'sequence.editor' more
git-imap-send.txt: add note about localized Gmail folders
git-imap-send.txt: do verify SSL certificate for gmail.com
git-imap-send.txt: don't duplicate 'Examples' sections
bisect--helper: introduce new `write_in_file()` function
bisect--helper: use '-res' in 'cmd_bisect__helper' return
bisect--helper: BUG() in cmd_*() on invalid subcommand
ref-filter: add `sanitize` option for 'subject' atom
pretty: refactor `format_sanitized_subject()`
ref-filter: add `short` modifier to 'parent' atom
ref-filter: add `short` modifier to 'tree' atom
ref-filter: rename `objectname` related functions and fields
ref-filter: modify error messages in `grab_objectname()`
ref-filter: refactor `grab_objectname()`
ref-filter: support different email formats
t7421: eliminate 'grep' check in t7421.4 for mingw compatibility
pretty-options.txt: fix --no-abbrev-commit description
submodule: fix style in function definition
submodule: eliminate unused parameters from print_submodule_summary()
bisect: add first-parent option to documentation
ref-filter: 'contents:trailers' show error if `:` is missing
diff: index-line: respect --abbrev in object's name
t6300: unify %(trailers) and %(contents:trailers) tests
t7401: add a NEEDSWORK
t7401: change indentation for enhanced readability
t7401: change syntax of test_i18ncmp calls for clarity
t7401: use 'short' instead of 'verify' and cut in rev-parse calls
t7401: modernize style
diff: teach --stat to ignore uninteresting modifications
rebase: add --reset-author-date
dir: fix problematic API to avoid memory leaks
dir: make clear_directory() free all relevant memory
mem-pool: use consistent pool variable name
mem-pool: use more standard initialization and finalization
mem-pool: add convenience functions for strdup and strndup
contrib/subtree: document 'push' does not take '--squash'
contrib/subtree: fix "unsure" for --message in the document
Documentation: mark `--object-format=sha256` as experimental
refspec: make sure stack refspec_item variables are zeroed
refspec: fix documentation referring to refspec_item
shallow.txt: document SHA-256 shallow format
protocol-capabilities.txt: clarify "allow-x-sha1-in-want" re SHA-256
index-format.txt: document SHA-256 index format
http-protocol.txt: document SHA-256 "want"/"have" format
sequencer: avoid garbled merge machinery messages due to commit labels
userdiff: improve Fortran xfuncname regex
userdiff: add tests for Fortran xfuncname regex
fetch, pull doc: correct description of '--set-upstream'
submodule: port submodule subcommand 'summary' from shell to C
t7421: introduce a test script for verifying 'summary' output
submodule: rename helper functions to avoid ambiguity
submodule: remove extra line feeds between callback struct and macro
dir: avoid prematurely marking nonbare repositories as matches
t3000: fix some test description typos
t/t4013: add test for --diff-merges=off
doc/git-log: describe --diff-merges=off
revision: change "--diff-merges" option to require parameter
t6425: be more flexible with rename/delete conflict messages
t642[23]: be more flexible for add/add conflicts involving pair renames
t6422, t6426: be more flexible for add/add conflicts involving renames
t6423: add an explanation about why one of the tests does not pass
t6416, t6423: clarify some comments and fix some typos
t6422: fix multiple errors with the mod6 test expectations
t6423: fix test setup for a couple tests
t6416, t6422: fix incorrect untracked file count
t6422: fix bad check against missing file
t6418: tighten delete/normalize conflict testcase
Collect merge-related tests to t64xx
progress: don't dereference before checking for NULL
bisect: combine args passed to find_bisection()
bisect: introduce first-parent flag
cmd_bisect__helper: defer parsing no-checkout flag
rev-list: allow bisect and first-parent flags
t6030: modernize "git bisect run" tests
t4104: modernize and simplify quoting
t: don't spuriously close and reopen quotes
git.txt: add list of guides
help: drop usage of 'common' and 'useful' for guides
command-list.txt: add missing 'gitcredentials' and 'gitremote-helpers'
revision: fix die() message for "--unpacked="
docs: improve the example that illustrates git-notes path names
checkout: support renormalization with checkout -m <paths>
merge: make merge.renormalize work for all uses of merge machinery
t6038: remove problematic test
t6038: make tests fail for the right reason
merge-recursive: fix unclear and outright wrong comments
t1450: fix quoting of NUL byte when corrupting pack
t6300: fix issues related to %(contents:size)
git-help.txt: fix mentions of option --guides
hashmap: fix typo in usage docs
Remove doubled words in various comments
Merge branch 'master' of github.com:Softcatala/git-po
l10n: es: 2.28.0 round 1
l10n: de.po: Update German translation for Git v2.28.0
l10n: de.po: fix grammar
ci: use absolute PYTHON_PATH in the Linux jobs
l10n: zh_CN: for git v2.28.0 l10n round 1
Merge branch 'l10n/zh_TW/200716' of github.com:l10n-tw/git-po
git-mv: improve error message for conflicted file
dir: check pathspecs before returning `path_excluded`
l10n: zh_TW.po: v2.28.0 round 1 (0 untranslated)
l10n: vi.po: correct "ident line" translation
l10n: vi.po(4931t): Updated translation for v2.28.0
t3200: don't grep for `strerror()` string
gitworkflows.txt: fix broken subsection underline
ref-filter: add support for %(contents:size)
repository: allow repository format upgrade with extensions
Revert "check_repository_format_gently(): refuse extensions for old repositories"
commit-graph: fix "Collecting commits from input" progress line
git-diff.txt: reorder possible usages
git-diff.txt: don't mark required argument as optional
rebase -i: add --ignore-whitespace flag
Merge branch 'fr_v2.28.0_rnd1' of github.com:jnavila/git
Merge branch 'master' of github.com:nafmo/git-l10n-sv
t6300: test refs pointing to tree and blob
Documentation: clarify %(contents:XXXX) doc
l10n: git.pot: v2.28.0 round 1 (70 new, 14 removed)
git-rebase.txt: fix description list separator
commit-graph: fix "Writing out commit graph" progress counter
commit-graph: fix progress of reachable commits
git-log.txt: include rev-list-description.txt
git-rev-list.txt: move description to separate file
git-rev-list.txt: tweak wording in set operations
git-rev-list.txt: fix Asciidoc syntax
revisions.txt: describe 'rev1 rev2 ...' meaning for ranges
git-log.txt: add links to 'rev-list' and 'diff' docs
experimental: default to fetch.writeCommitGraph=false
test-lib-functions: restrict test_must_fail usage
t9400: don't use test_must_fail with cvs
Wait for child on signal death for aliases to externals
Wait for child on signal death for aliases to builtins
t9834: remove use of `test_might_fail p4`
t7107: don't use test_must_fail()
t5324: reorder `run_with_limited_open_files test_might_fail`
t3701: stop using `env` in force_color()
cat-file: add missing [=<format>] to usage/synopsis
commit-graph: check all leading directories in changed path Bloom filters
commit-graph: check chunk sizes after writing
commit-graph: simplify chunk writes into loop
commit-graph: unify the signatures of all write_graph_chunk_*() functions
contrib: subtree: adjust test to change in fmt-merge-msg
ci: modification of main.yml to use cmake for vs-build job
cmake: support for building git on windows with msvc and clang.
cmake: support for building git on windows with mingw
cmake: support for testing git when building out of the source tree
cmake: support for testing git with ctest
cmake: installation support for git
cmake: generate the shell/perl/python scripts and templates, translations
lib-submodule-update: pass 'test_must_fail' as an argument
builtin/diff: fix botched update of usage comment
commit-reach: avoid is_descendant_of() shim
bash-completion: add git-prune into bash completion
diff-files: treat "i-t-a" files as "not-in-index"
git-prompt: include sparsity state as well
git-prompt: document how in-progress operations affect the prompt
builtin/diff: update usage comment
wt-status: show sparse checkout status as well
commit-graph: minimize commit_graph_data_slab access
commit: move members graph_pos, generation to a slab
commit-graph: introduce commit_graph_data_slab
object: drop parsed_object_pool->commit_count
branch: don't mix --edit-description
t3200: test for specific errors
t3200: rename "expected" to "expect"
clean: optimize and document cases where we recurse into subdirectories
clean: consolidate handling of ignored parameters
dir, clean: avoid disallowed behavior
dir: fix a few confusing comments
git-sparse-checkout: clarify interactions with submodules
Introduce CMake support for configuring Git
lib-submodule-update: prepend "git" to $command
Documentation: usage for diff combined commits
git diff: improve range handling
upload-pack: refactor common code into do_got_oid()
upload-pack: move oldest_have to upload_pack_data
upload-pack: pass upload_pack_data to got_oid()
upload-pack: pass upload_pack_data to ok_to_give_up()
upload-pack: pass upload_pack_data to send_acks()
upload-pack: pass upload_pack_data to process_haves()
upload-pack: change allow_unadvertised_object_request to an enum
upload-pack: move allow_unadvertised_object_request to upload_pack_data
upload-pack: move extra_edge_obj to upload_pack_data
upload-pack: move shallow_nr to upload_pack_data
upload-pack: pass upload_pack_data to send_unshallow()
upload-pack: pass upload_pack_data to deepen_by_rev_list()
upload-pack: pass upload_pack_data to deepen()
upload-pack: pass upload_pack_data to send_shallow_list()
t/t3430: avoid undefined git diff behavior
reftable: file format documentation
commit-graph: simplify write_commit_graph_file() #2
commit-graph: simplify write_commit_graph_file() #1
commit-graph: simplify parse_commit_graph() #2
commit-graph: simplify parse_commit_graph() #1
commit-graph: clean up #includes
diff.h: drop diff_tree_oid() & friends' return value
commit-slab: add a function to deep free entries on the slab
commit-graph-format.txt: all multi-byte numbers are in network byte order
commit-graph: fix parsing the Chunk Lookup table
tree-walk.c: don't match submodule entries for 'submod/anything'
CodingGuidelines: specify Python 2.7 is the oldest version
t/README: avoid poor-man's small caps GIT
git-gui: allow opening work trees from the startup dialog
dir: fix treatment of negated pathspecs
sparse-checkout: avoid staging deletions of all files
upload-pack: move pack_objects_hook to upload_pack_data
upload-pack: move allow_sideband_all to upload_pack_data
upload-pack: move allow_ref_in_want to upload_pack_data
upload-pack: move allow_filter to upload_pack_data
upload-pack: move keepalive to upload_pack_data
upload-pack: pass upload_pack_data to upload_pack_config()
upload-pack: change multi_ack to an enum
upload-pack: move multi_ack to upload_pack_data
upload-pack: move filter_capability_requested to upload_pack_data
upload-pack: move use_sideband to upload_pack_data
upload-pack: move static vars to upload_pack_data
upload-pack: annotate upload_pack_data fields
submodule: port subcommand 'set-branch' from shell to C
fast-import: add new --date-format=raw-permissive format
Merge branch 'master' of github.com:ruester/git-po-de
Merge branch of github.com:AlessandroMenti/git-po
t: avoid alternation (not POSIX) in grep's BRE
l10n: zh_TW.po: v2.27.0 round 2 (0 untranslated)
l10n: zh_TW.po: v2.27.0 round 1 (0 untranslated)
l10n: de.po: Update German translation for Git 2.27.0
completion: improve handling of --orphan option of switch/checkout
completion: improve handling of -c/-C and -b/-B in switch/checkout
completion: improve handling of --track in switch/checkout
completion: improve handling of --detach in checkout
completion: improve completion for git switch with no options
completion: improve handling of DWIM mode for switch/checkout
completion: perform DWIM logic directly in __git_complete_refs
completion: extract function __git_dwim_remote_heads
completion: replace overloaded track term for __git_complete_refs
completion: add tests showing subpar switch/checkout --orphan logic
completion: add tests showing subpar -c/C argument completion
completion: add tests showing subpar -c/-C startpoint completion
completion: add tests showing subpar switch/checkout --track logic
completion: add tests showing subar checkout --detach logic
completion: add tests showing subpar DWIM logic for switch/checkout
completion: add test showing subpar git switch completion
Merge branch 'fr_2.27.0rnd2' of github.com:jnavila/git
Merge branch 'master' of github.com:bitigchi/git-po
Merge branch 'master' of github.com:alshopov/git-po
Merge branch 'master' of github.com:Softcatala/git-po
l10n: vi(4875t): Updated Vietnamses translation for 2.27.0rd2
l10n: zh_CN: for git v2.27.0 l10n round 1~2
l10n: git.pot: v2.27.0 round 2 (+1)
Merge branch 'master' of github.com:git-l10n/git-po
rev-list-options.txt: start a list for `show-pulls`
sparse: allow '{ 0 }' to be used without warnings
stateless-connect: send response end packet
pkt-line: define PACKET_READ_RESPONSE_END
remote-curl: error on incomplete packet
t5608: avoid say() and use "skip_all" instead for consistency
bisect--helper: avoid segfault with bad syntax in `start --term-*`
doc: fix wrong 4-byte length of pkt-line message
config: let feature.experimental imply protocol.version=2
l10n: vi(4874t): Updated Vietnamses translation for 2.27.0
bisect: avoid tailing CR characters from revision in replay
command-list.txt: add gitfaq to the list of guides
t5520: avoid alternation in grep's BRE (not POSIX)
t4216: avoid unnecessary subshell in test_bloom_filters_not_used
Merge branch 'next' of github.com:ChrisADR/git-po
pkt-line: extern packet_length()
transport: extract common fetch_pack() call
t5703: replace "grep -a" usage by perl
git-sparse-checkout.txt: add missing '
git-credential.txt: use list continuation
git-commit-graph.txt: fix list rendering
git-commit-graph.txt: fix grammo
date-formats.txt: fix list continuation
t4210: detect REG_ILLSEQ dynamically and skip affected tests
t/helper: teach test-regex to report pattern errors (like REG_ILLSEQ)
upload-pack: use upload_pack_data fields in receive_needs()
upload-pack: pass upload_pack_data to create_pack_file()
upload-pack: remove static variable 'stateless_rpc'
upload-pack: pass upload_pack_data to check_non_tip()
upload-pack: pass upload_pack_data to send_ref()
upload-pack: move symref to upload_pack_data
upload-pack: use upload_pack_data writer in receive_needs()
upload-pack: pass upload_pack_data to receive_needs()
upload-pack: pass upload_pack_data to get_common_commits()
upload-pack: use 'struct upload_pack_data' in upload_pack()
upload-pack: move 'struct upload_pack_data' around
upload-pack: move {want,have}_obj to upload_pack_data
upload-pack: remove unused 'wants' from upload_pack_data
remote-curl: remove label indentation
remote-curl: fix typo
commit-slab-decl.h: update include guard
ci/config: correct instruction for CI preferences
tests: skip small-stack tests on hppa architecture
Merge branch 'master' of github.com:Softcatala/git-po
l10n: es: 2.27.0 round 1
Merge branch 'master' of github.com:alshopov/git-po into git-po-master
Merge branch 'fr_2.27.0_rnd1' of github.com:jnavila/git
Merge branch 'git-2.27-round-1' of github.com:bitigchi/git-po
Merge branch 'master' of github.com:nafmo/git-l10n-sv
unpack-trees: also allow get_progress() to work on a different index
l10n: git.pot: v2.27.0 round 1 (72 new, 37 removed)
compat: remove gmtime
merge-recursive: fix rename/rename(1to2) for working tree with a binary
t1509: correct i18n test
git-p4.py: fix --prepare-p4-only error with multiple commits
line-log: try to use generation number-based topo-ordering
line-log: more responsive, incremental 'git log -L'
t4211-line-log: add tests for parent oids
line-log: remove unused fields from 'struct line_log_data'
completion: offer '--(no-)patch' among 'git log' options
midx: teach "git multi-pack-index repack" honor "git repack" configurations
upload-pack: clear filter_options for each v2 fetch command
submodule: port subcommand 'set-url' from shell to C
bloom: fix `make sparse` warning
credential: document protocol updates
credential: update gitcredentials documentation
t/test_lib: avoid naked bash arrays in file_lineno
t/t0000-basic: make sure subtests also use TEST_SHELL_PATH
gitfaq: fetching and pulling a repository
gitfaq: files in .gitignore are tracked
Doc: reference the "stash list" in autostash docs
builtin/receive-pack: avoid generic function name hmac()
credential: correct order of parameters for credential_match
credential: update description for credential_from_url_gently
credential-store: ignore bogus lines from store file
switch: fix errors and comments related to -c and -C
lib-submodule-update: consolidate --recurse-submodules
lib-submodule-update: add space after function name
rebase: save autostash entry into stash reflog on --quit
push: unset PARSE_OPT_OPTARG for --recurse-submodules
Use OPT_CALLBACK and OPT_CALLBACK_F
rebase: display an error if --root and --fork-point are both provided
progress.c: silence cgcc suggestion about internal linkage
graph.c: limit linkage of internal variable
compat/regex: move stdlib.h up in inclusion chain
test-parse-pathspec-file.c: s/0/NULL/ for pointer type
date.c: allow compact version of ISO-8601 datetime
date.c: skip fractional second part of ISO-8601
date.c: validate and set time in a helper function
multi-pack-index: close file descriptor after mmap
date.c: s/is_date/set_date/
mailinfo: disallow NUL character in mail's header
mailinfo.c: avoid strlen on strings that can contains NUL
t4254: merge 2 steps of a single test
Revert "fetch: default to protocol version 2"
t9819: don't use test_must_fail with p4
t9164: use test_must_fail only on git commands
t9160: use test_path_is_missing()
t9141: use test_path_is_missing()
t7508: don't use `test_must_fail test_cmp`
t7408: replace incorrect uses of test_must_fail
t6030: use test_path_is_missing()
Git 2.26.2
Git 2.25.4
Git 2.24.3
Git 2.23.3
Git 2.22.4
Git 2.21.3
Git 2.20.4
Git 2.19.5
Git 2.18.4
fsck: reject URL with empty host in .gitmodules
credential: treat URL with empty scheme as invalid
credential: treat URL without scheme as invalid
fsck: convert gitmodules url to URL passed to curl
complete: zsh: add missing sub cmd completion candidates
merge: use skip_prefix to parse config key
rebase: fix an incompatible-options error message
rebase: reinstate --no-keep-empty
rebase -i: mark commits that begin empty in todo editor
mingw: cope with the Isilon network file system
ci: configure GitHub Actions for CI/PR
ci: explicit install all required packages
pull: pass --autostash to merge
t5520: make test_pull_autostash() accept expect_parent_num
merge: teach --autostash option
sequencer: implement apply_autostash_oid()
sequencer: implement save_autostash()
sequencer: unlink autostash in apply_autostash()
sequencer: extract perform_autostash() from rebase
rebase: generify create_autostash()
rebase: extract create_autostash()
reset: extract reset_head() from rebase
rebase: generify reset_head()
rebase: use apply_autostash() from sequencer.c
sequencer: rename stash_sha1 to stash_oid
sequencer: make apply_autostash() accept a path
rebase: use read_oneliner()
config.txt: move closing "----" to cover entire listing
ci/lib: set TERM environment variable if not exist
sequencer: make read_oneliner() extern
sequencer: configurably warn on non-existent files
sequencer: make read_oneliner() accept flags
sequencer: make file exists check more efficient
sequencer: honor GIT_REFLOG_ACTION
travis: build and test on Linux with musl libc and busybox
ci/linux32: libify install-dependencies step
ci: refactor docker runner script
ci/linux32: parameterise command to switch arch
ci/lib-docker: preserve required environment variables
doc: --recurse-submodules mostly applies to active submodules
doc: be more precise on (fetch|push).recurseSubmodules
doc: explain how to deactivate submodule.recurse completely
doc: document --recurse-submodules for reset and restore
doc: list all commands affected by submodule.recurse
pull doc: correct outdated description of an example
pull doc: refer to a specific section in 'fetch' doc
git-rebase.txt: add another hook to the hooks section, and explain more
sequencer: stop leaking buf
Documentation: document merge option --no-gpg-sign
Documentation: merge commit-tree --[no-]gpg-sign
Documentation: reword commit --no-gpg-sign
Documentation: document am --no-gpg-sign
cherry-pick/revert: honour --no-gpg-sign in all case
rebase.c: honour --no-gpg-sign
ci: make MAKEFLAGS available inside the Docker container in the Linux32 job
completion: fix 'git add' on paths under an untracked directory
Fix error-prone fill_directory() API; make it only return matches
dir: replace double pathspec matching with single in treat_directory()
dir: include DIR_KEEP_UNTRACKED_CONTENTS handling in treat_directory()
dir: replace exponential algorithm with a linear one
dir: fix confusion based on variable tense
dir: fix broken comment
dir: consolidate treat_path() and treat_one_path()
dir: fix simple typo in comment
t3000: add more testcases testing a variety of ls-files issues
t7063: more thorough status checking
user-manual.conf: don't specify [listingblock]
t3432: test `--merge' with `rebase.abbreviateCommands = true', too
sequencer: don't abbreviate a command if it doesn't have a short form
INSTALL: drop support for docbook-xsl before 1.74
manpage-normal.xsl: fold in manpage-base.xsl
manpage-bold-literal.xsl: stop using git.docbook.backslash
Doc: drop support for docbook-xsl before 1.73.0
Doc: drop support for docbook-xsl before 1.72.0
Doc: drop support for docbook-xsl before 1.71.1
git-rebase.txt: fix typo
sequencer: mark messages for translation
wrapper: indent with tabs
midx.c: fix an integer underflow
pull: avoid running both merge and rebase
sparse-checkout: provide a new reapply subcommand
unpack-trees: failure to set SKIP_WORKTREE bits always just a warning
unpack-trees: provide warnings on sparse updates for unmerged paths too
unpack-trees: make sparse path messages sound like warnings
unpack-trees: split display_error_msgs() into two
unpack-trees: rename ERROR_* fields meant for warnings to WARNING_*
unpack-trees: move ERROR_WOULD_LOSE_SUBMODULE earlier
sparse-checkout: use improved unpack_trees porcelain messages
sparse-checkout: use new update_sparsity() function
unpack-trees: add a new update_sparsity() function
unpack-trees: pull sparse-checkout pattern reading into a new function
unpack-trees: do not mark a dirty path with SKIP_WORKTREE
unpack-trees: allow check_updates() to work on a different index
t1091: make some tests a little more defensive against failures
unpack-trees: simplify pattern_list freeing
unpack-trees: simplify verify_absent_sparse()
unpack-trees: remove unused error type
unpack-trees: fix minor typo in comment
run-command: trigger PATH lookup properly on Cygwin
t5801: teach compare_refs() to accept !
t5612: stop losing return codes of git commands
t5612: don't use `test_must_fail test_cmp`
t5607: reorder `nongit test_must_fail`
t5550: simplify no matching line check
t5512: stop losing return codes of git commands
t5512: stop losing git exit code in here-docs
t5703: feed raw data into test-tool unpack-sideband
t4124: tweak test so that non-compliant diff(1) can also be used
t7063: drop non-POSIX argument "-ls" from find(1)
t5616: use rev-parse instead to get HEAD's object_id
t5003: skip conversion test if unzip -a is unavailable
t5003: drop the subshell in test_lazy_prereq
test-lib-functions: test_cmp: eval $GIT_TEST_CMP
t4061: use POSIX compliant regex(7)
t5512: don't use `test_must_fail test_cmp`
Lib-ify prune-packed
Lib-ify fmt-merge-msg
t7600: use test_write_lines()
Makefile: ASCII-sort += lists
t: fix whitespace around &&
t9500: remove spaces after redirect operators
l10n: tr.po: change file mode to 644
l10n: de.po: Update German translation for Git 2.26.0
l10n: de.po: add missing space
RelNotes/2.26.0: fix various typos
submodule--helper.c: Rename 'cb_foreach' to 'foreach_cb'
l10n: zh_CN: for git v2.26.0 l10n round 1 and 2
l10n: vi(4839t): Updated Vietnamese translation for v2.26.0
l10n: vi: fix translation + grammar
oidset: remove unnecessary include
l10n: zh_TW.po: v2.26.0 round 2 (0 untranslated)
l10n: zh_TW.po: v2.26.0 round 1 (11 untranslated)
git-gui--askpass: coerce answers to UTF-8 on Windows
t6022, t6046: fix flaky files-are-updated checks
Merge branch of github.com:ChrisADR/git-po into master
l10n: es: 2.26.0 round#2
Merge branch of github.com:alshopov/git-po into master
Merge branch of github.com:bitigchi/git-po into master
git-rebase.txt: highlight backend differences with commit rewording
sequencer: clear state upon dropping a become-empty commit
i18n: unmark a message in rebase.c
l10n: git.pot: v2.26.0 round 2 (7 new, 2 removed)
Merge branch 'master' of github.com:git/git into git-po-master
pull: warn if the user didn't say whether to rebase or to merge
commit-slab: clarify slabname##_peek()'s return value
ci: use python3 in linux-gcc and osx-gcc and python2 elsewhere
Merge branch 'master' of github.com:nafmo/git-l10n-sv
Merge branch 'fr_2.26.0' of github.com:jnavila/git
t1091: don't grep for `strerror()` string
Merge branch of github.com:alshopov/git-po into master
l10n: git.pot: v2.26.0 round 1 (73 new, 38 removed)
Merge branch 'master' of github.com:git-l10n/git-po
stash: remove the stash.useBuiltin setting
http: add environment variable support for HTTPS proxies
http: add client cert support for HTTPS proxies
tag: use new advice API to check visibility
advice: revamp advise API
t2402: test worktree path when called in .git directory
stash: get git_stash_config at the top level
advice: change "setupStreamFailure" to "setUpstreamFailure"
advice: extract vadvise() from advise()
rebase-interactive.c: silence format-zero-length warnings
t6020: new test with interleaved lexicographic ordering of directories
t6022, t6046: test expected behavior instead of testing a proxy for it
t3035: prefer test_must_fail to bash negation for git commands
t6020, t6022, t6035: update merge tests to use test helper functions
t602[1236], t6034: modernize test formatting
merge-recursive: apply collision handling unification to recursive case
builtin/rebase: remove a call to get_oid() on `options.switch_to'
lib-log-graph: consolidate colored graph cmp logic
lib-log-graph: consolidate test_cmp_graph logic
t: drop debug `cat` calls
t9810: drop debug `cat` call
t4117: check for files using `test_path_is_file`
receive.denyCurrentBranch: respect all worktrees
t5509: use a bare repository for test push target
get_main_worktree(): allow it to be called in the Git directory
completion: add diff --color-moved[-ws]
t/lib-submodule-update: add test removing nested submodules
unpack-trees: check for missing submodule directory in merged_entry
unpack-trees: remove outdated description for verify_clean_submodule
t/lib-submodule-update: move a test to the right section
t/lib-submodule-update: remove outdated test description
t7112: remove mention of KNOWN_FAILURE_SUBMODULE_RECURSIVE_NESTED
merge-recursive: fix the refresh logic in update_file_flags
t3433: new rebase testcase documenting a stat-dirty-like failure
bisect: libify `bisect_next_all`
bisect: libify `handle_bad_merge_base` and its dependents
bisect: libify `check_good_are_ancestors_of_bad` and its dependents
bisect: libify `check_merge_bases` and its dependents
bisect: libify `bisect_checkout`
bisect: libify `exit_if_skipped_commits` to `error_if_skipped*` and its dependents
bisect--helper: return error codes from `cmd_bisect__helper()`
bisect: add enum to represent bisect returning codes
bisect--helper: introduce new `decide_next()` function
bisect: use the standard 'if (!var)' way to check for 0
bisect--helper: change `retval` to `res`
bisect--helper: convert `vocab_*` char pointers to char arrays
check-ignore: fix documentation and implementation to match
rebase: rename the two primary rebase backends
rebase: change the default backend from "am" to "merge"
rebase: make the backend configurable via config setting
rebase tests: repeat some tests using the merge backend instead of am
rebase tests: mark tests specific to the am-backend with --am
rebase: drop '-i' from the reflog for interactive-based rebases
git-prompt: change the prompt for interactive-based rebases
rebase: add an --am option
rebase: move incompatibility checks between backend options a bit earlier
git-rebase.txt: add more details about behavioral differences of backends
rebase: allow more types of rebases to fast-forward
t3432: make these tests work with either am or merge backends
rebase: fix handling of restrict_revision
rebase: make sure to pass along the quiet flag to the sequencer
rebase, sequencer: remove the broken GIT_QUIET handling
t3406: simplify an already simple test
rebase (interactive-backend): fix handling of commits that become empty
rebase (interactive-backend): make --keep-empty the default
git-p4: add RCS keyword status message
git-p4: add p4 submit hooks
git-p4: restructure code in submit
git-p4: add --no-verify option
git-p4: add p4-pre-submit exit text
git-p4: create new function run_git_hook
git-p4: rewrite prompt to be Windows compatible
color.c: alias RGB colors 8-15 to aixterm colors
color.c: support bright aixterm colors
color.c: refactor color_output arguments
config: add '--show-scope' to print the scope of a config value
submodule-config: add subomdule config scope
config: teach git_config_source to remember its scope
config: preserve scope in do_git_config_sequence
config: clarify meaning of command line scoping
config: split repo scope to local and worktree
config: make scope_name non-static and rename it
diff-options.txt: avoid "regex" overload in example
add: change advice config variables used by the add API
name-rev: rewrite create_or_update_name()
git-filter-branch.txt: wrap "maths" notation in backticks
git: update documentation for --git-dir
.mailmap: map Yi-Jyun Pan's email
grep: ignore --recurse-submodules if --no-index is given
rebase-interactive: warn if commit is dropped with `rebase --edit-todo'
sequencer: move check_todo_list_from_file() to rebase-interactive.c
t4124: only mark git command with test_must_fail
t3507: use test_path_is_missing()
t3507: fix indentation
t3419: stop losing return code of git command
t3415: increase granularity of test_auto_{fixup,squash}()
t3415: stop losing return codes of git commands
t3310: extract common notes_merge_files_gone()
t3030: use test_path_is_missing()
t2018: replace "sha" with "oid"
t2018: don't lose return code of git commands
t2018: teach do_checkout() to accept `!` arg
t2018: be more discerning when checking for expected exit codes
.mailmap: fix erroneous authorship for Johannes Schindelin
t1300: create custom config file without special characters
t1300: fix over-indented HERE-DOCs
config: fix typo in variable name
rebase -i: stop checking out the tip of the branch to rebase
submodule.c: use get_git_dir() instead of get_git_common_dir()
t2405: clarify test descriptions and simplify test
t2405: use git -C and test_commit -C instead of subshells
t7410: rename to t2405-worktree-submodule.sh
templates: fix deprecated type option `--bool`
t6025: use helpers to replace test -f <path>
t6025: modernize style
t3404: directly test the behavior of interest
git-rebase.txt: update description of --allow-empty-message
submodule.c: mark more strings for translation
dir: treat_leading_path() and read_directory_recursive(), round 2
completion: list paths and refs for 'git worktree add'
completion: list existing working trees for 'git worktree' subcommands
completion: simplify completing 'git worktree' subcommands and options
completion: return the index of found word from __git_find_on_cmdline()
completion: clean up the __git_find_on_cmdline() helper function
t9902-completion: add tests for the __git_find_on_cmdline() helper
fetch: default to protocol version 2
protocol test: let protocol.version override GIT_TEST_PROTOCOL_VERSION
test: request GIT_TEST_PROTOCOL_VERSION=0 when appropriate
config doc: protocol.version is not experimental
fetch test: use more robust test for filtered objects
fetch test: mark test of "skipping" haves as v0-only
t/check-non-portable-shell: detect "FOO= shell_func", too
fetch test: avoid use of "VAR= cmd" with a shell function
git-p4: change the expansion test from basestring to list
add: use advise function to display hints
l10n: zh_CN: for git v2.25.0 l10n round 1
Merge branch 'master' of github.com:Softcatala/git-po into git-po-master
mingw: safeguard better against backslashes in file names
unpack-trees: correctly compute result count
l10n: de.po: Update German translation v2.25.0 round 1
config/advice.txt: fix description list separator
doc/gitcore-tutorial: fix prose to match example command
t2018: improve style of if-statement
t2018: add space between function name and ()
string-list: note in docs that callers can specify sorting function
unpack-trees: exit check_updates() early if updates are not wanted
sha1-file: document how to use pretend_object_file
l10n: es: 2.25.0 round #1
Merge branch 'fr_v2.25.0_rnd1' of github.com:jnavila/git into master
l10n: vi(4800t): Updated Vietnamese translation v2.25.0
merge-recursive: remove unnecessary oid_eq function
Merge branch 'translation_191231' of github.com:l10n-tw/git-po into git-po-master
l10n: zh_TW.po: update translation for v2.25.0 round 1
git-gui: allow opening currently selected file in default app
l10n: git.pot: v2.25.0 round 1 (119 new, 13 removed)
t2018: remove trailing space from test description
doc: log, gitk: line-log arguments must exist in starting revision
doc: log, gitk: document accepted line-log diff formats
contrib/credential/netrc: work outside a repo
contrib/credential/netrc: make PERL_PATH configurable
t1507: inline full_name()
t1507: run commands within test_expect_success
t1507: stop losing return codes of git commands
t1501: remove use of `test_might_fail cp`
t1409: use test_path_is_missing()
t1409: let sed open its own input file
t1307: reorder `nongit test_must_fail`
t1306: convert `test_might_fail rm` to `rm -f`
t0020: use ! check_packed_refs_marked
t0020: don't use `test_must_fail has_cr`
t0003: don't use `test_must_fail attr_check`
t0003: use test_must_be_empty()
t0003: use named parameters in attr_check()
t0000: replace test_must_fail with run_sub_test_lib_test_err()
t/lib-git-p4: use test_path_is_missing()
rebase: fix saving of --signoff state for am-based rebases
dir: consolidate similar code in treat_directory()
dir: synchronize treat_leading_path() and read_directory_recursive()
dir: fix checks on common prefix directory
commit: honor advice.statusHints when rejecting an empty commit
t3434: mark successful test as such
notes.h: fix typos in comment
bisect--helper: convert `*_warning` char pointers to char arrays.
git-p4: show detailed help when parsing options fail
git-p4: yes/no prompts should sanitize user text
fix-typo: consecutive-word duplications
notes: break set_display_notes() into smaller functions
config/format.txt: clarify behavior of multiple format.notes
gitmodules: link to gitsubmodules guide
dir: break part of read_directory_recursive() out for reuse
dir: exit before wildcard fall-through if there is no wildcard
dir: remove stray quote character in comment
Revert "dir.c: make 'git-status --ignored' work within leading directories"
t3011: demonstrate directory traversal failures
git-p4: honor lfs.storage configuration variable
bisect--helper: avoid use-after-free
format-patch: move git_config() before repo_init_revisions()
format-patch: use --notes behavior for format.notes
notes: extract logic into set_display_notes()
notes: create init_display_notes() helper
notes: rename to load_display_notes()
name-rev: cleanup name_ref()
name-rev: eliminate recursion in name_rev()
name-rev: use 'name->tip_name' instead of 'tip_name'
l10n: minor case fix in 'git branch' '--unset-upstream' description
name-rev: drop name_rev()'s 'generation' and 'distance' parameters
name-rev: restructure creating/updating 'struct rev_name' instances
name-rev: restructure parsing commits and applying date cutoff
name-rev: pull out deref handling from the recursion
name-rev: extract creating/updating a 'struct name_rev' into a helper
t6120: add a test to cover inner conditions in 'git name-rev's name_rev()
name-rev: use sizeof(*ptr) instead of sizeof(type) in allocation
name-rev: avoid unnecessary cast in name_ref()
t6120-describe: modernize the 'check_describe' helper
range-diff: clear `other_arg` at end of function
range-diff: mark pointers as const
t3206: fix incorrect test name
t9300-fast-import: don't hang if background fast-import exits too early
t9300-fast-import: store the PID in a variable instead of pidfile
submodule: defend against submodule.update = !command in .gitmodules
fsck: reject submodule.update = !command in .gitmodules
submodule: reject submodule.update = !command in .gitmodules
rebase: fix format.useAutoBase breakage
format-patch: teach --no-base
t4014: use test_config()
format-patch: fix indentation
t3400: demonstrate failure with format.useAutoBase
t7700: stop losing return codes of git commands
t7700: make references to SHA-1 generic
t7700: replace egrep with grep
t7700: consolidate code into test_has_duplicate_object()
t7700: consolidate code into test_no_missing_in_packs()
doc: replace LKML link with lore.kernel.org
RelNotes: replace Gmane with real Message-IDs
doc: replace MARC links with lore.kernel.org
mingw: use {gm,local}time_s as backend for {gm,local}time_r
archive-zip.c: switch to reentrant localtime_r
date.c: switch to reentrant {gm,local}time_r
sequencer: fix a memory leak in sequencer_continue()
t7700: s/test -f/test_path_is_file/
t7700: move keywords onto their own line
t7700: remove spaces after redirect operators
t7700: drop redirections to /dev/null
t7501: stop losing return codes of git commands
t7501: remove spaces after redirect operators
t5703: stop losing return codes of git commands
t5703: simplify one-time-sed generation logic
t5317: use ! grep to check for no matching lines
t5317: stop losing return codes of git commands
t4138: stop losing return codes of git commands
t4015: use test_write_lines()
t4015: stop losing return codes of git commands
t3600: comment on inducing SIGPIPE in `git rm`
t3600: stop losing return codes of git commands
t3600: use test_line_count() where possible
t3301: stop losing return codes of git commands
t0090: stop losing return codes of git commands
t0014: remove git command upstream of pipe
apply-one-time-sed.sh: modernize style
ci: build Git with GCC 9 in the 'osx-gcc' build job
test-lib-functions: suppress a 'git rev-parse' error in 'test_commit_bulk'
submodule: fix 'submodule status' when called from a subdirectory
sequencer: directly call pick_commits() from complete_action()
rebase: fill `squash_onto' in get_replay_opts()
sequencer: move the code writing total_nr on the disk to a new function
sequencer: update `done_nr' when skipping commands in a todo list
sequencer: update `total_nr' when adding an item to a todo list
git-compat-util.h: drop the `PRIuMAX` and other fallback definitions
l10n: zh_TW: add translation for v2.24.0
doc: mention that 'git submodule update' fetches missing commits
doc: document 'git submodule status --cached'
sequencer: don't re-read todo for revert and cherry-pick
t5608-clone-2gb.sh: turn GIT_TEST_CLONE_2GB into a bool
tests: add 'test_bool_env' to catch non-bool GIT_TEST_* values
lib-bash.sh: move `then` onto its own line
t5520: replace `! git` with `test_must_fail git`
t5520: remove redundant lines in test cases
t5520: replace $(cat ...) comparison with test_cmp
t5520: don't put git in upstream of pipe
t5520: test single-line files by git with test_cmp
t5520: use test_cmp_rev where possible
t5520: replace test -{n,z} with test-lib functions
t5520: use test_line_count where possible
t5520: remove spaces after redirect operator
t5520: replace test -f with test-lib functions
t5520: let sed open its own input
t5520: use sq for test case names
t5520: improve test style
t: teach test_cmp_rev to accept ! for not-equals
t0000: test multiple local assignment
format-patch: pass notes configuration to range-diff
range-diff: pass through --notes to `git log`
range-diff: output `## Notes ##` header
t3206: range-diff compares logs with commit notes
t3206: s/expected/expect/
t3206: disable parameter substitution in heredoc
t3206: remove spaces after redirect operators
pretty-options.txt: --notes accepts a ref instead of treeish
userdiff: support Python async functions
SubmittingPatches: use `--pretty=reference`
pretty: implement 'reference' format
pretty: add struct cmt_fmt_map::default_date_mode_type
t4205: cover `git log --reflog -z` blindspot
pretty.c: inline initalize format_context
revision: make get_revision_mark() return const pointer
completion: complete `tformat:` pretty format
SubmittingPatches: remove dq from commit reference
pretty-formats.txt: use generic terms for hash
SubmittingPatches: use generic terms for hash
rev-list-options.txt: remove reference to --show-notes
argv-array: add space after `while`
sequencer: handle rebase-merges for "onto" message
builtin/unpack-objects.c: show throughput progress
trace2: move doc to trace2.h
submodule-config: move doc to submodule-config.h
tree-walk: move doc to tree-walk.h
trace: move doc to trace.h
run-command: move doc to run-command.h
parse-options: add link to doc file in parse-options.h
credential: move doc to credential.h
argv-array: move doc to argv-array.h
cache: move doc to cache.h
sigchain: move doc to sigchain.h
pathspec: move doc to pathspec.h
revision: move doc to revision.h
attr: move doc to attr.h
refs: move doc to refs.h
remote: move doc to remote.h and refspec.h
sha1-array: move doc to sha1-array.h
merge: move doc to ll-merge.h
graph: move doc to graph.h and graph.c
dir: move doc to dir.h
diff: move doc to diff.h and diffcore.h
rebase -r: let `label` generate safer labels
INSTALL: use existing shell scripts as example
t7004: check existence of correct tag
built-in add -i: implement the `status` command
diff: export diffstat interface
stash: make sure we have a valid index before writing it
t6120-describe: correct test repo history graph in comment
test-lib: don't check prereqs of test cases that won't be run anyway
t4215: use helper function to check output
completion: learn to complete `git rebase --onto=`
sequencer: reencode commit message for am/rebase --show-current-patch
sequencer: reencode old merge-commit message
merge-strategies: fix typo "reflected to" to "reflected in"
sequencer: reencode squashing commit's message
sequencer: reencode revert/cherry-pick's todo list
sequencer: reencode to utf-8 before arrange rebase's todo list
t3900: demonstrate git-rebase problem with multi encoding
configure.ac: define ICONV_OMITS_BOM if necessary
Fix spelling errors in no-longer-updated-from-upstream modules
multimail: fix a few simple spelling errors
sha1dc: fix trivial comment spelling error
Fix spelling errors in test commands
Fix spelling errors in messages shown to users
Fix spelling errors in names of tests
Fix spelling errors in comments of testcases
Fix spelling errors in code comments
kset.h, tar.h: add missing header guard to prevent multiple inclusion
t0028: eliminate non-standard usage of printf
t6024: modernize style
name-hash.c: remove duplicate word in comment
hashmap: fix documentation misuses of -> versus .
git-filter-branch.txt: correct argument name typo
Fix spelling errors in documentation outside of Documentation/
Documentation: fix a bunch of typos, both old and new
l10n: zh_CN: for git v2.24.0 l10n round 1~2
rebase: add --reset-author-date
rebase -i: support --ignore-date
sequencer: rename amend_author to author_to_rename
rebase -i: support --committer-date-is-author-date
sequencer: allow callers of read_author_script() to ignore fields
rebase -i: add --ignore-whitespace flag
RelNotes/2.24.0: fix self-contradictory note
fetch.c: fix typo in a warning message
manpage-bold-literal.xsl: match for namespaced "d:literal" in template
RelNotes/2.24.0: typofix
git-diff.txt: document return code of `--no-index`
l10n: de.po: Update German translation
Merge branch 'master' of github.com:vnwildman/git
Merge branch 'next' of github.com:ChrisADR/git-po
submodule: teach set-url subcommand
worktree: teach "add" to ignore submodule.recurse config
l10n: vi(4694t): Updated translation for v2.24.0
help: add gitsubmodules to the list of guides
builtin/blame.c: remove '--indent-heuristic' from usage string
clone: rename static function `dir_exists()`.
Documentation/git-bisect.txt: add --no-ff to merge command
l10n: es: 2.24.0 round 2
Merge branch 'l10n/it/update-italian-translation'
l10n: git.pot: v2.24.0 round 2 (1 new)
Merge tag 'v2.24.0-rc1' of github.com:git/git into master
builtin/commit-graph.c: remove subcommand-less usage string
documentation: remove empty doc files
apply: respect merge.conflictStyle in --3way
t4108: demonstrate bug in apply
t4108: use `test_config` instead of `git config`
t4108: remove git command upstream of pipe
t4108: replace create_file with test_write_lines
ci: fix GCC install in the Travis CI GCC OSX job
config: move documentation to config.h
path.c: don't call the match function without value in trie_find()
path.c: clarify two field names in 'struct common_dir'
path.c: mark 'logs/HEAD' in 'common_list' as file
path.c: clarify trie_find()'s in-code comment
Documentation: mention more worktree-specific exceptions
t604[236]: do not run setup in separate tests
merge-recursive: fix merging a subdirectory into the root directory
merge-recursive: clean up get_renamed_dir_portion()
t7419: change test_must_fail to ! for grep
builtin/blame.c: constants into bit shift format
rebase: hide --preserve-merges option
test-progress: fix test failures on big-endian systems
completion: clarify installation instruction for zsh
grep: avoid leak of chartables in PCRE2
grep: make PCRE2 aware of custom allocator
grep: make PCRE1 aware of custom allocator
notes: fix minimum number of parameters to "copy" subcommand
t3301: test diagnose messages for too few/many paramters
graph: fix coloring of octopus dashes
graph: flatten edges that fuse with their right neighbor
graph: smooth appearance of collapsing edges on commit lines
graph: rename `new_mapping` to `old_mapping`
graph: commit and post-merge lines for left-skewed merges
graph: tidy up display of left-skewed merges
graph: example of graph output that can be simplified
graph: extract logic for moving to GRAPH_PRE_COMMIT state
graph: remove `mapping_idx` and `graph_update_width()`
graph: reduce duplication in `graph_insert_into_new_columns()`
graph: reuse `find_new_column_by_commit()`
graph: handle line padding in `graph_next_line()`
graph: automatically track display width of graph lines
format-patch: teach --cover-from-description option
format-patch: use enum variables
format-patch: replace erroneous and condition
stash: avoid recursive hard reset on submodules
git-gui: improve Japanese translation
Makefile: respect $(V) in %.cocci.patch target
pthread.h: manually align parameter lists
t1308-config-set: fix a test that has a typo
t0000: cover GIT_SKIP_TESTS blindspots
t4014: treat rev-list output as the expected value
range-diff: don't segfault with mode-only changes
merge-recursive: fix the fix to the diff3 common ancestor label
git-rev-list.txt: prune options in synopsis
t4214: demonstrate octopus graph coloring failure
t4214: explicitly list tags in log
t4214: generate expect in their own test cases
t4214: use test_merge
test-lib: let test_merge() perform octopus merges
fast-export: handle nested tags
t9350: add tests for tags of things other than a commit
fast-export: allow user to request tags be marked with --mark-tags
fast-export: add support for --import-marks-if-exists
fast-import: add support for new 'alias' command
fast-import: allow tags to be identified by mark labels
fast-import: fix handling of deleted tags
wrapper: use a loop instead of repetitive statements
diffcore-break: use a goto instead of a redundant if statement
commit-graph: remove a duplicate assignment
shallow.c: don't free unallocated slabs
merge-recursive: fix the diff3 common ancestor label for virtual commits
dir: special case check for the possibility that pathspec is NULL
git-gui (Windows): use git-bash.exe if it is available
fast-export: fix exporting a tag and nothing else
user-manual.txt: render ASCII art correctly under Asciidoctor
asciidoctor-extensions.rb: handle "book" doctype in linkgit
user-manual.txt: change header notation
user-manual.txt: add missing section label
Makefile: emulate compile in $(HCO) target better
pack-bitmap.h: remove magic number
promisor-remote.h: include missing header
apply.h: include missing header
name-rev: avoid cutoff timestamp underflow
promisor-remote.h: drop extern from function declaration
doc: MyFirstContribution: fix cmd placement instructions
travis-ci: do not skip successfully tested trees in debug mode
treewide: correct several "up-to-date" to "up to date"
t/helper: ignore only executable files
stash: make sure to write refreshed cache
merge: use refresh_and_write_cache
factor out refresh_and_write_cache function
hg-to-git: make it compatible with both python3 and python2
doc: fix reference to --ignore-submodules
gitk: rename zh_CN.po to zh_cn.po
Makefile: run coccicheck on more source files
Makefile: strip leading ./ in $(FIND_SOURCE_FILES)
Makefile: define THIRD_PARTY_SOURCES
clean: fix theoretical path corruption
clean: rewrap overly long line
clean: avoid removing untracked files in a nested git repository
clean: disambiguate the definition of -d
git-clean.txt: do not claim we will delete files with -n/--dry-run
dir: add commentary explaining match_pathspec_item's return value
dir: if our pathspec might match files under a dir, recurse into it
dir: make the DO_MATCH_SUBMODULE code reusable for a non-submodule case
dir: also check directories for matching pathspecs
dir: fix off-by-one error in match_pathspec_item
dir: fix typo in comment
t7300: add testcases showing failure to clean specified pathspecs
Test the progress display
Revert "progress: use term_clear_line()"
Makefile: strip leading ./ in $(LIB_H)
doc-diff: replace --cut-header-footer with --cut-footer
asciidoctor-extensions: provide `<refmiscinfo/>`
Doc/Makefile: give mansource/-version/-manual attributes
git-submodule.txt: fix AsciiDoc formatting error
git-gui: add hotkey to toggle "Amend Last Commit"
gitk: Do not mistake unchanged lines for submodule changes
completion: teach archive to use __gitcomp_builtin
completion: teach rebase to use __gitcomp_builtin
completion: add missing completions for log, diff, show
doc: minor formatting fix
git-gui: add hotkeys to set widget focus
grep: skip UTF8 checks explicitly
gitweb.conf.txt: switch pluses to backticks to help Asciidoctor
git-merge-index.txt: wrap shell listing in "----"
git-receive-pack.txt: wrap shell [script] listing in "----"
git-ls-remote.txt: wrap shell listing in "----"
Documentation: wrap config listings in "----"
git-merge-base.txt: render indentations correctly under Asciidoctor
Documentation: wrap blocks with "--"
commit-graph: don't show progress percentages while expanding reachable commits
t: use common $SQ variable
ci: restore running httpd tests
t/lib-git-svn.sh: check GIT_TEST_SVN_HTTPD when running SVN HTTP tests
t9902: use a non-deprecated command for testing
Recommend git-filter-repo instead of git-filter-branch
t6006: simplify, fix, and optimize empty message test
config/format.txt: specify default value of format.coverLetter
Doc: add more detail for git-format-patch
t4014: stop losing return codes of git commands
t4014: remove confusing pipe in check_threading()
t4014: use test_line_count() where possible
t4014: let sed open its own files
t4014: drop redirections to /dev/null
t4014: use indentable here-docs
t4014: remove spaces after redirect operators
t4014: use sq for test case names
t4014: move closing sq onto its own line
t4014: s/expected/expect/
compat/*.[ch]: remove extern from function declarations using spatch
mingw: apply array.cocci rule
t3427: accelerate this test by using fast-export and fast-import
push: disallow --all and refspecs when remote.<name>.mirror is set
merge-options.txt: clarify meaning of various ff-related options
rebase: teach rebase --keep-base
rebase tests: test linear branch topology
rebase: fast-forward --fork-point in more cases
rebase: fast-forward --onto in more cases
rebase: refactor can_fast_forward into goto tower
t3432: test for --no-ff's interaction with fast-forward
status: mention --skip for revert and cherry-pick
completion: add --skip for cherry-pick and revert
completion: merge options for cherry-pick and revert
t3432: distinguish "noop-same" v.s. "work-same" in "same head" tests
t3432: test rebase fast-forward behavior
t3431: add rebase --fork-point tests
t7300-clean: demonstrate deleting nested repo with an ignored file breakage
grep: refactor and simplify PCRE1 support
grep: make sure NO_LIBPCRE1_JIT disable JIT in PCRE1
t0021: make sure clean filter runs
t4014: drop unnecessary blank lines from test cases
line-log: avoid unnecessary full tree diffs
line-log: extract pathspec parsing from line ranges into a helper function
packfile.h: drop extern from function declaration
repository-layout.txt: correct pluralization of 'object'
merge-recursive: alphabetize include list
merge-recursive: add sanity checks for relevant merge_options
merge-recursive: rename MERGE_RECURSIVE_* to MERGE_VARIANT_*
merge-recursive: split internal fields into a separate struct
merge-recursive: avoid losing output and leaking memory holding that output
merge-recursive: comment and reorder the merge_options fields
merge-recursive: consolidate unnecessary fields in merge_options
merge-recursive: move some definitions around to clean up the header
merge-recursive: rename merge_options argument to opt in header
merge-recursive: rename 'mrtree' to 'result_tree', for clarity
merge-recursive: use common name for ancestors/common/base_list
merge-recursive: fix some overly long lines
cache-tree: share code between functions writing an index as a tree
merge-recursive: don't force external callers to do our logging
merge-recursive: remove useless parameter in merge_trees()
merge-recursive: exit early if index != head
Ensure index matches head before invoking merge machinery, round N
merge-recursive: remove another implicit dependency on the_repository
merge-recursive: future-proof update_file_flags() against memory leaks
merge-recursive: provide a better label for diff3 common ancestor
merge-recursive: enforce opt->ancestor != NULL when calling merge_trees()
checkout: provide better conflict hunk description with detached HEAD
merge-recursive: be consistent with assert
checkout: remove duplicate code
l10n: zh_CN: for git v2.23.0 l10n round 1~2
http: use xmalloc with cURL
diff: 'diff.indentHeuristic' is no longer experimental
worktree remove: clarify error message on dirty worktree
completion: complete config variables and values for 'git clone --config='
completion: complete config variables names and values for 'git clone -c'
completion: complete values of configuration variables after 'git -c var='
completion: complete configuration sections and variable names for 'git -c'
completion: split _git_config()
completion: simplify inner 'case' pattern in __gitcomp()
completion: use 'sort -u' to deduplicate config variable names
completion: deduplicate configuration sections
completion: add tests for 'git config' completion
completion: complete more values of more 'color.*' configuration variables
completion: fix a typo in a comment
git-fast-import.txt: clarify that multiple merge commits are allowed
l10n: de.po: Update German translation
Merge branch 'master' of https://github.com/vnwildman/git
Merge branch 'update-italian-translation' of github.com:AlessandroMenti/git-po
Merge branch 'next' of https://github.com/ChrisADR/git-po
doc: fix repeated words
l10n: vi(4674t): Updated translation for Vietnamese
l10n: git.pot: v2.23.0 round 2 (4 new, 6 removed)
Merge tag 'v2.23.0-rc2' of git://git.kernel.org/pub/scm/git/git
t: decrease nesting in test_oid_to_path
merge-recursive: avoid directory rename detection in recursive case
l10n: vi.po (4676t): Updated Vietnamese translation
tests: show the test name and number at the start of verbose output
t0000-basic: use realistic test script names in the verbose tests
commit-graph: error out on invalid commit oids in 'write --stdin-commits'
commit-graph: turn a group of write-related macro flags into an enum
t5318-commit-graph: use 'test_expect_code'
restore: fix typo in docs
doc: typo: s/can not/cannot/ and s/is does/does/
Merge branch 'master' of https://github.com/Softcatala/git-po
Merge branch 'update-italian-translation' of github.com:AlessandroMenti/git-po
restore: add test for deleted ita files
checkout.c: unstage empty deleted ita files
t: warn against adding non-httpd-specific tests after sourcing 'lib-httpd'
t5703: run all non-httpd-specific tests before sourcing 'lib-httpd.sh'
t5510-fetch: run non-httpd-specific test before sourcing 'lib-httpd.sh'
RelNotes/2.23.0: fix a few typos and other minor issues
RelNotes/2.21.1: typofix
t5510-fetch: fix negated 'test_i18ngrep' invocation
l10n: git.pot: v2.23.0 round 1 (130 new, 35 removed)
Merge tag 'v2.23.0-rc0' of git://git.kernel.org/pub/scm/git/git
Documentation/git-fsck.txt: include fsck.* config variables
xdiff: remove duplicate headers from xpatience.c
xdiff: remove duplicate headers from xhistogram.c
xdiff: drop system includes in xutils.c
grep: do not enter PCRE2_UTF mode on fixed matching
grep: stess test PCRE v2 on invalid UTF-8 data
grep: create a "is_fixed" member in "grep_pat"
grep: consistently use "p->fixed" in compile_regexp()
grep: stop using a custom JIT stack with PCRE v1
grep: stop "using" a custom JIT stack with PCRE v2
grep: remove overly paranoid BUG(...) code
travis-ci: build with GCC 4.8 as well
README: fix rendering of text in angle brackets
stash: fix handling removed files with --keep-index
gpg-interface: do not scan past the end of buffer
read-cache.c: do not die if mmap fails
gpg(docs): use correct --verify syntax
range-diff: add headers to the outer hunk header
range-diff: add filename to inner diff
range-diff: add section header instead of diff header
range-diff: suppress line count in outer diff
range-diff: don't remove funcname from inner diff
range-diff: split lines manually
range-diff: fix function parameter indentation
apply: make parse_git_diff_header public
apply: only pass required data to gitdiff_* functions
dir-iterator: add tests for dir-iterator API
clone: test for our behavior on odd objects/* content
ref-filter: fix memory leak in `free_array_item()`
builtin/merge.c - cleanup of code in for-cycle that tests strategies
apply: only pass required data to find_name_*
apply: only pass required data to check_header_line
apply: only pass required data to git_header_name
apply: only pass required data to skip_tree_prefix
apply: replace marc.info link with public-inbox
ci/lib.sh: update a comment about installed P4 and Git-LFS versions
ci: disable Homebrew's auto cleanup
ci: don't update Homebrew
l10n: localizable upload progress messages
cherry-pick/revert: advise using --skip
cherry-pick/revert: add --skip option
sequencer: use argv_array in reset_merge
sequencer: rename reset_for_rollback to reset_merge
sequencer: add advice for revert
grep: use PCRE v2 for optimized fixed-string search
grep: remove the kwset optimization
grep: drop support for \0 in --fixed-strings <pattern>
grep: make the behavior for NUL-byte in patterns sane
grep tests: move binary pattern tests into their own file
grep tests: move "grep binary" alongside the rest
grep: inline the return value of a function call used only once
t4210: skip more command-line encoding tests on MinGW
Document that 'git -C ""' works and doesn't change directory
t0016: add 'remove' subcommand test
test-oidmap: remove 'add' subcommand
t7814: do not generate same commits in different repos
grep: don't use PCRE2?_UTF8 with "log --encoding=<non-utf8>"
log tests: test regex backends in "--encode=<enc>" tests
progress: use term_clear_line()
rebase: fix garbled progress display with '-x'
Use the right 'struct repository' instead of the_repository
match-trees.c: remove the_repo from shift_tree*()
tree-walk.c: remove the_repo from get_tree_entry_follow_symlinks()
tree-walk.c: remove the_repo from get_tree_entry()
tree-walk.c: remove the_repo from fill_tree_descriptor()
sha1-file.c: remove the_repo from read_object_with_reference()
trace2: correct typo in technical documentation
Move core_partial_clone_filter_default to promisor-remote.c
Move repository_format_partial_clone to promisor-remote.c
Remove fetch-object.{c,h} in favor of promisor-remote.{c,h}
remote: add promisor and partial clone config to the doc
partial-clone: add multiple remotes in the doc
t0410: test fetching from many promisor remotes
builtin/fetch: remove unique promisor remote limitation
promisor-remote: parse remote.*.partialclonefilter
Use promisor_remote_get_direct() and has_promisor_remote()
promisor-remote: use repository_format_partial_clone
promisor-remote: add promisor_remote_reinit()
promisor-remote: implement promisor_remote_get_direct()
Add initial support for many promisor remotes
fetch-object: make functions return an error code
t0410: remove pipes after git commands
t5551: use 'test_i18ngrep' to check translated output
submodule foreach: fix recursion of options
pager: add a helper function to clear the last line in the terminal
t3404: make the 'rebase.missingCommitsCheck=ignore' test more focused
t3404: modernize here doc style
doc: improve usage string in MyFirstContribution
tests: mark two failing tests under FAIL_PREREQS
l10n: ru.po: update Russian translation
tests: make GIT_TEST_FAIL_PREREQS a boolean
tests: replace test_tristate with "git env--helper"
tests README: re-flow a previously changed paragraph
tests: make GIT_TEST_GETTEXT_POISON a boolean
t6040 test: stop using global "script" variable
config.c: refactor die_bad_number() to not call gettext() early
env--helper: new undocumented builtin wrapping git_env_*()
status: remove the empty line after hints
config tests: simplify include cycle test
fetch-pack: print server version at the top in -v -v
fetch-pack: print all relevant supported capabilities with -v -v
fetch-pack: move capability names out of i18n strings
completion: disable dwim on "git switch -d"
switch: allow to switch in the middle of bisect
t2027: use test_must_be_empty
fetch: only run 'gc' once when fetching multiple remotes
stash: fix show referencing stash index
wrapper: avoid undefined behaviour in macOS
fsmonitor: avoid signed integer overflow / infinite loop
test-hashmap: remove 'hash' command
oidmap: use sha1hash() instead of static hash() function
t: add t0016-oidmap.sh
t/helper: add test-oidmap.c
Revert "test-lib: whitelist GIT_TR2_* in the environment"
completion: do not cache if --git-completion-helper fails
Merge branch 'master' of https://github.com/Softcatala/git-po
Merge branch 'fr_review' of git://github.com/jnavila/git
Merge branch 'master' of git://github.com/alshopov/git-po
config/alias.txt: document alias accepting non-command first word
config/alias.txt: change " and ' to `
l10n: de.po: Update German translation
l10n: de.po: improve description of 'git reset --quiet'
config: learn the "onbranch:" includeIf condition
l10n: TEAMS: Change German translation team leader
merge-recursive: restore accidentally dropped setting of path
l10n: zh_CN: for git v2.22.0 l10n round 1~3
Merge branch '2.22' of https://github.com/ChrisADR/git-po
Merge branch 'it-l10n-wip' of github.com:AlessandroMenti/git-po
clang-format: use git grep to generate the ForEachMacros list
fetch: fix regression with transport helpers
fetch: make the code more understandable
fetch: trivial cleanup
t5801 (remote-helpers): add test to fetch tags
t5801 (remote-helpers): cleanup refspec stuff
l10n: vi.po(4581t): Updated Vietnamese translation for v2.22.0 round 3
l10n: git.pot: v2.22.0 round 3 (3 new, 2 removed)
Merge branch 'master' of git://git.kernel.org/pub/scm/git/git
i18n: fix typos found during l10n for git 2.22.0
Merge branch 'master' of https://github.com/vnwildman/git
Merge branch 'master' of git://github.com/alshopov/git-po
l10n: vi.po(4580t): Updated Vietnamese translation for v2.22.0 round 2
send-email: update documentation of required Perl modules
l10n: git.pot: v2.22.0 round 2 (6 new, 3 removed)
Merge branch 'master' of git://git.kernel.org/pub/scm/git/git
Merge branch 'master' of https://github.com/Softcatala/git-po
list-objects-filter: disable 'sparse:path' filters
parse-options: check empty value in OPT_INTEGER and OPT_ABBREV
diff-parseopt: restore -U (no argument) behavior
diff-parseopt: correct variable types that are used by parseopt
send-email: fix regression in sendemail.identity parsing
Merge branch 'master' of git://github.com/alshopov/git-po
hash-object doc: stop mentioning git-cvsimport
revision: keep topo-walk free of unintersting commits
revision: use generation for A..B --topo-order queries
progress: avoid empty line when breaking the progress line
trace2: document the supported values of GIT_TRACE2* env variables
trace2: rename environment variables to GIT_TRACE2*
Merge branch 'master' of https://github.com/vnwildman/git
merge: add --quit
l10n: vi.po(4577t): Updated Vietnamese translation for v2.22.0 round 1
send-email: document --no-[to|cc|bcc]
send-email: fix broken transferEncoding tests
send-email: remove cargo-culted multi-patch pattern in tests
Makefile: remove the NO_R_TO_GCC_LINKER flag
format-patch: teach format.notes config option
worktree add: be tolerant of corrupt worktrees
worktree add: sanitize worktree names
http-push: prevent format overflow warning with gcc >= 9
l10n: git.pot: v2.22.0 round 1 (270 new, 56 removed)
fast-export: do automatic reencoding of commit messages only if requested
fast-export: differentiate between explicitly UTF-8 and implicitly UTF-8
fast-export: avoid stripping encoding header if we cannot reencode
fast-import: support 'encoding' commit header
t9350: fix encoding test to actually test reencoding
tests: add a special setup where prerequisites fail
sha1dc: update from upstream
difftool: fallback on merge.guitool
difftool: make --gui, --tool and --extcmd mutually exclusive
mergetool: fallback to tool when guitool unavailable
mergetool--lib: create gui_mode function
mergetool: use get_merge_tool function
send-email: do defaults -> config -> getopt in that order
send-email: rename the @bcclist variable for consistency
send-email: move the read_config() function above getopts
trace2: fix up a missing "leave" entry point
init: make --template path relative to $CWD
merge: remove drop_save() in favor of remove_merge_branch_state()
git-format-patch.txt: document --no-notes option
trace2: fix up a missing "leave" entry point
tag: fix typo in nested tagging hint
submodule--helper: add a missing \n
perf-lib.sh: forbid the use of GIT_TEST_INSTALLED
perf tests: add "bindir" prefix to git tree test results
perf-lib.sh: remove GIT_TEST_INSTALLED from perf-lib.sh
perf-lib.sh: make "./run <revisions>" use the correct gits
perf aggregate: remove GIT_TEST_INSTALLED from --codespeed
perf README: correct docs for 3c8f12c96c regression
revisions.txt: remove ambibuity between <rev>:<path> and :<path>
revisions.txt: mention <rev>~ form
revisions.txt: mark optional rev arguments with []
revisions.txt: change "rev" to "<rev>"
notes: correct documentation of format_display_notes()
mingw: remove obsolete IPv6-related code
ci: install 'libsvn-perl' instead of 'git-svn'
branch: add worktree info on verbose output
branch: update output to include worktree info
ref-filter: add worktreepath atom
branch: make create_branch accept a merge base rev
t2018: cleanup in current test
Declare both git-switch and git-restore experimental
help: move git-diff and git-reset to different groups
doc: promote "git restore"
user-manual.txt: prefer 'merge --abort' over 'reset --hard'
completion: support restore
t: add tests for restore
restore: support --patch
restore: replace --force with --ignore-unmerged
restore: default to --source=HEAD when only --staged is specified
restore: reject invalid combinations with --staged
restore: add --worktree and --staged
checkout: factor out worktree checkout code
restore: disable overlay mode by default
restore: make pathspec mandatory
restore: take tree-ish from --source option instead
checkout: split part of it to new command 'restore'
parse-options: don't emit "ambiguous option" for aliases
*.[ch]: manually align parameter lists
*.[ch]: remove extern from function declarations using sed
*.[ch]: remove extern from function declarations using spatch
Honor core.precomposeUnicode in more places
t7610: add mergetool --gui tests
t7610: unsuppress output
autoconf: #include <libintl.h> when checking for gettext()
cherry-pick/revert: add scissors line on merge conflict
merge: add scissors line on merge conflict
merge: cleanup messages like commit
parse-options.h: extract common --cleanup option
commit: extract cleanup_mode functions to sequencer
t7502: clean up style
t7604: clean up style
t3507: clean up style
t7600: clean up style
ref-filter: use correct branch for %(push:track)
sha1-name.c: remove the_repo from get_oid_mb()
sha1-name.c: remove the_repo from other get_oid_*
sha1-name.c: remove the_repo from maybe_die_on_misspelt_object_name
submodule-config.c: use repo_get_oid for reading .gitmodules
sha1-name.c: add repo_get_oid()
sha1-name.c: remove the_repo from get_oid_with_context_1()
sha1-name.c: remove the_repo from resolve_relative_path()
sha1-name.c: remove the_repo from diagnose_invalid_index_path()
sha1-name.c: remove the_repo from handle_one_ref()
sha1-name.c: remove the_repo from get_oid_1()
sha1-name.c: remove the_repo from get_oid_basic()
sha1-name.c: remove the_repo from get_describe_name()
sha1-name.c: remove the_repo from get_oid_oneline()
sha1-name.c: add repo_interpret_branch_name()
sha1-name.c: remove the_repo from interpret_branch_mark()
sha1-name.c: remove the_repo from interpret_nth_prior_checkout()
sha1-name.c: remove the_repo from get_short_oid()
sha1-name.c: add repo_for_each_abbrev()
sha1-name.c: store and use repo in struct disambiguate_state
sha1-name.c: add repo_find_unique_abbrev_r()
sha1-name.c: remove the_repo from find_abbrev_len_packed()
sha1-name.c: remove the_repo from sort_ambiguous()
commit.c: add repo_get_commit_tree()
commit.cocci: refactor code, avoid double rewrite
progress: break too long progress bar lines
progress: clear previous progress update dynamically
submodule foreach: fix "<command> --quiet" not being respected
replace: peel tag when passing a tag first to --graft
replace: peel tag when passing a tag as parent to --graft
tag: advise on nested tags
submodule: teach set-branch subcommand
refs.c: remove the_repo from read_ref_at()
refs.c: add repo_dwim_log()
refs.c: add repo_dwim_ref()
refs.c: remove the_repo from expand_ref()
refs.c: remove the_repo from substitute_branch_name()
refs.c: add refs_shorten_unambiguous_ref()
refs.c: add refs_ref_exists()
packfile.c: add repo_approximate_object_count()
builtin rebase: use oideq()
builtin rebase: use FREE_AND_NULL
blame: default to HEAD in a bare repo when no start commit is given
ls-files: use correct format string
gc docs: remove incorrect reference to gc.auto=0
gc docs: clarify that "gc" doesn't throw away referenced objects
gc docs: note "gc --aggressive" in "fast-import"
gc docs: downplay the usefulness of --aggressive
gc docs: note how --aggressive impacts --window & --depth
gc docs: fix formatting for "gc.writeCommitGraph"
gc docs: re-flow the "gc.*" section in "config"
gc docs: include the "gc.*" section from "config" in "gc"
merge-recursive: switch directory rename detection default
merge-recursive: give callers of handle_content_merge() access to contents
merge-recursive: track information associated with directory renames
t6043: fix copied test description to match its purpose
merge-recursive: switch from (oid,mode) pairs to a diff_filespec
merge-recursive: cleanup handle_rename_* function signatures
merge-recursive: track branch where rename occurred in rename struct
merge-recursive: remove ren[12]_other fields from rename_conflict_info
merge-recursive: shrink rename_conflict_info
merge-recursive: move some struct declarations together
merge-recursive: use 'ci' for rename_conflict_info variable name
merge-recursive: rename locals 'o' and 'a' to 'obuf' and 'abuf'
merge-recursive: rename diff_filespec 'one' to 'o'
merge-recursive: rename merge_options argument from 'o' to 'opt'
Use 'unsigned short' for mode, like diff_filespec does
progress: assemble percentage and counters in a strbuf before printing
progress: make display_progress() return void
tag: fix formatting
ci: fix AsciiDoc/Asciidoctor stderr check in the documentation build job
ci: stick with Asciidoctor v1.5.8 for now
cocci: FLEX_ALLOC_MEM to FLEX_ALLOC_STR
midx.c: convert FLEX_ALLOC_MEM to FLEX_ALLOC_STR
contrib/completion: add smerge to the mergetool completion candidates
mergetools: add support for smerge (Sublime Merge)
doc: promote "git switch"
completion: support switch
t: add tests for switch
switch: make --orphan switch to an empty tree
switch: reject if some operation is in progress
switch: no worktree status unless real branch switch happens
switch: implicit dwim, use --no-guess to disable it
switch: add short option for --detach
switch: only allow explicit detached HEAD
switch: reject "do nothing" case
switch: stop accepting pathspec
switch: remove -l
switch: add --discard-changes
switch: better names for -b and -B
checkout: split part of it to new command 'switch'
checkout: split options[] array in three pieces
checkout: move 'confict_style' and 'dwim_..' to checkout_opts
checkout: make "opts" in cmd_checkout() a pointer
checkout: factor out some code in parse_branchname_arg()
checkout: keep most #include sorted
checkout: inform the user when removing branch state
checkout: advice how to get out of detached HEAD mode
t: rename t2014-switch.sh to t2014-checkout-switch.sh
git-checkout.txt: fix monospace typeset
doc: document --overwrite-ignore
git-checkout.txt: fix one syntax line
git-checkout.txt: spell out --no-option
read-tree.txt: clarify --reset and worktree changes
index-pack: show progress while checking objects
t6050: redirect expected error output to a file
t6050: use test_line_count instead of wc -l
test-lib: whitelist GIT_TR2_* in the environment
interpret-trailers.txt: start the desc line with a capital letter
ci: install Asciidoctor in 'ci/install-dependencies.sh'
Documentation/technical/protocol-v2.txt: fix formatting
Documentation/technical/api-config.txt: fix formatting
Documentation/git-diff-tree.txt: fix formatting
config: correct '**' matching in includeIf patterns
gc: handle & check gc.reflogExpire config
reflog tests: assert lack of early exit with expiry="never"
commit-graph: improve & i18n error messages
commit-graph write: don't die if the existing graph is corrupt
commit-graph verify: detect inability to read the graph
commit-graph: don't pass filename to load_commit_graph_one_fd_st()
commit-graph: don't early exit(1) on e.g. "git status"
commit-graph: fix segfault on e.g. "git status"
fast-import: fix erroneous handling of get-mark with empty orphan commits
fast-import: only allow cat-blob requests where it makes sense
fast-import: check most prominent commands first
git-fast-import.txt: fix wording about where ls command can appear
t9300: demonstrate bug with get-mark and empty orphan commits
am: avoid diff_opt_parse()
diff --no-index: use parse_options() instead of diff_opt_parse()
range-diff: use parse_options() instead of diff_opt_parse()
diff.c: allow --no-color-moved-ws
diff-parseopt: convert --color-moved-ws
diff-parseopt: convert --[no-]color-moved
diff-parseopt: convert --inter-hunk-context
diff-parseopt: convert --no-prefix
diff-parseopt: convert --line-prefix
diff-parseopt: convert --[src|dst]-prefix
diff-parseopt: convert --[no-]abbrev
diff-parseopt: convert --diff-filter
diff-parseopt: convert --find-object
diff-parseopt: convert -O
diff-parseopt: convert --pickaxe-all|--pickaxe-regex
diff-parseopt: convert -S|-G
diff-parseopt: convert -l
diff-parseopt: convert -z
diff-parseopt: convert --ita-[in]visible-in-index
diff-parseopt: convert --ws-error-highlight
t5318-commit-graph: remove unused variable
checkout: prevent losing staged changes with --merge
read-tree: add --quiet
unpack-trees: rename "gently" flag to "quiet"
unpack-trees: keep gently check inside add_rejected_path
gc docs: clean grammar for "gc.bigPackThreshold"
gc docs: stop noting "repack" flags
gc docs: modernize the advice for manually running "gc"
commit: improve error message in "-a <paths>" case
checkout.txt: note about losing staged changes with --merge
unpack-trees: fix oneway_merge accidentally carry over stage index
stash: setup default diff output format if necessary
rebase: remove the rebase.useBuiltin setting
doc-diff: add `--cut-header-footer`
doc-diff: support diffing from/to AsciiDoc(tor)
doc-diff: let `render_tree()` take an explicit directory name
Doc: auto-detect changed build flags
reflog tests: test for the "points nowhere" warning
reflog tests: make use of "test_config" idiom
gc: refactor a "call me once" pattern
gc: convert to using the_hash_algo
glossary: add definition for overlay
gc: remove redundant check for gc_auto_threshold
t9811-git-p4-label-import: fix pipeline negation
git p4 test: disable '-x' tracing in the p4d watchdog loop
git p4 test: simplify timeout handling
git p4 test: clean up the p4d cleanup functions
t0301-credential-cache: use 'test_atexit' to stop the credentials helper
tests: use 'test_atexit' to stop httpd
t/lib-git-daemon: make sure to kill the 'git-daemon' process
test-lib: fix interrupt handling with 'dash' and '--verbose-log -x'
t4150: remove unused variable
contrib/subtree: ensure only one rev is provided
stash: pass pathspec as pointer
asciidoctor-extensions: fix spurious space after linkgit
Documentation/Makefile: add missing dependency on asciidoctor-extensions
Documentation/Makefile: add missing xsl dependencies for manpages
stash: drop unused parameter
t3600: use helpers to replace test -d/f/e/s <path>
t3600: modernize style
test functions: add function `test_file_not_empty`
Make sure refs/rewritten/ is per-worktree
files-backend.c: reduce duplication in add_per_worktree_entries_to_dir()
files-backend.c: factor out per-worktree code in loose_fill_ref_dir()
commit-tree: utilize parse-options api
docs: move core.excludesFile from git-add to gitignore
git-clean.txt: clarify ignore pattern files
stash: convert `stash--helper.c` into `stash.c`
stash: replace all `write-tree` child processes with API calls
stash: optimize `get_untracked_files()` and `check_changes()`
stash: convert save to builtin
stash: make push -q quiet
stash: convert push to builtin
stash: convert create to builtin
stash: convert store to builtin
stash: convert show to builtin
stash: convert list to builtin
stash: mention options in `show` synopsis
stash: add tests for `git stash show` config
stash: rename test cases to be more descriptive
t3903: modernize style
ident: don't require calling prepare_fallback_ident first
Documentation: turn middle-of-line tabs into spaces
git-svn.txt: drop escaping '\' that ends up being rendered
git.txt: remove empty line before list continuation
config/fsck.txt: avoid starting line with dash
config/diff.txt: drop spurious backtick
gitattributes.txt: fix typo
rebase--interactive: move transform_todo_file()
sequencer: use edit_todo_list() in complete_action()
rebase-interactive: rewrite edit_todo_list() to handle the initial edit
rebase-interactive: append_todo_help() changes
rebase-interactive: use todo_list_write_to_file() in edit_todo_list()
sequencer: refactor skip_unnecessary_picks() to work on a todo_list
rebase--interactive: move rearrange_squash_in_todo_file()
rebase--interactive: move sequencer_add_exec_commands()
sequencer: change complete_action() to use the refactored functions
sequencer: make sequencer_make_script() write its script to a strbuf
sequencer: refactor rearrange_squash() to work on a todo_list
sequencer: refactor sequencer_add_exec_commands() to work on a todo_list
diff-parseopt: convert --submodule
diff-parseopt: convert --ignore-submodules
diff-parseopt: convert --textconv
diff-parseopt: convert --ext-diff
diff-parseopt: convert --quiet
diff-parseopt: convert --exit-code
diff-parseopt: convert --color-words
diff-parseopt: convert --word-diff-regex
diff-parseopt: convert --word-diff
diff-parseopt: convert --[no-]color
diff-parseopt: convert --[no-]follow
diff-parseopt: convert -R
diff-parseopt: convert -a|--text
diff-parseopt: convert --full-index
diff-parseopt: convert --binary
diff-parseopt: convert --anchored
diff-parseopt: convert --diff-algorithm
diff-parseopt: convert --histogram
diff-parseopt: convert --patience
diff-parseopt: convert --[no-]indent-heuristic
git-reset.txt: clarify documentation
l10n: Updated Vietnamese translation for v2.21 rd2
setup: fix memory leaks with `struct repository_format`
strbuf.c: add `strbuf_insertf()` and `strbuf_vinsertf()`
strbuf.c: add `strbuf_join_argv()`
sha1-name.c: add `get_oidf()` which acts like `get_oid()`
Makefile: allow for combining DEVELOPER=1 and CFLAGS="..."
Makefile: move the setting of *FLAGS closer to "include"
Makefile: Move *_LIBS assignment into its own section
Makefile: add/remove comments at top and tweak whitespace
Makefile: move "strip" assignment down from flags
Makefile: remove an out-of-date comment
checkout doc: fix an unmatched double-quote pair
Delete check-racy.c
commit-graph tests: test a graph that's too small
commit-graph tests: split up corrupt_graph_and_verify()
commit-graph tests: fix unportable "dd" invocation
Merge branch 'master' of https://github.com/ralfth/git-po-de
l10n: update German translation
tests: fix unportable "\?" and "\+" regex syntax
diff-parseopt: convert --ignore-some-changes
diff-parseopt: convert --[no-]minimal
diff-parseopt: convert --relative
diff-parseopt: convert --no-renames|--[no--rename-empty
diff-parseopt: convert --find-copies-harder
diff-parseopt: convert -C|--find-copies
diff-parseopt: convert -D|--irreversible-delete
diff-parseopt: convert -M|--find-renames
diff-parseopt: convert -B|--break-rewrites
diff-parseopt: convert --output-*
diff-parseopt: convert --[no-]compact-summary
diff-parseopt: convert --stat*
diff-parseopt: convert -s|--no-patch
diff-parseopt: convert --name-status
diff-parseopt: convert --name-only
diff-parseopt: convert --patch-with-stat
diff-parseopt: convert --summary
diff-parseopt: convert --check
diff-parseopt: convert --dirstat and friends
merge-options.txt: correct wording of --no-commit option
receive-pack: fix use-after-free bug
diff-parseopt: convert --numstat and --shortstat
diff-parseopt: convert --patch-with-raw
completion: add more parameter value completion
Merge branch 'bg-submodule-helper-typo' of github.com:pclouds/git-po
l10n: zh_CN: for git v2.21.0 l10n round 1~2
l10n: bg.po: correct typo
l10n: de.po: fix grammar in message for tag.c
l10n: de.po: fix a message for index-pack.c
l10n: de.po: consistent translation of 'root commit'
Merge branch 'master' of https://github.com/Softcatala/git-po
Merge branch 'fr_2.21.0_rnd2' of git://github.com/jnavila/git
submodule: document default behavior
l10n: git.pot: v2.21.0 round 2 (3 new, 3 removed)
Merge branch 'master' of git://git.kernel.org/pub/scm/git/git
git-rebase.txt: update to reflect merge now implemented on sequencer
rebase: fix regression in rebase.useBuiltin=false test mode
tests: avoid syntax triggering old dash bug
read-cache.c: fix writing "link" index ext with null base oid
get_oid_with_context(): match prototype and implementation
git-compat-util: work around fileno(fp) that is a macro
imap-send.c: add a missing space in error message
test-lib: fix non-portable pattern bracket expressions
l10n: git.pot: v2.21.0 round 1 (214 new, 38 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
submodule--helper: teach config subcommand --unset
test-lib: make '--stress' more bisect-friendly
log,diff-tree: add --combined-all-paths option
ci: make sure we build Git parallel
git-submodule.txt: "--branch <branch>" option defaults to 'master'
completion: complete git submodule absorbgitdirs
checkout: count and print -m paths separately
checkout: update count-checkouts messages
git-submodule.sh: shorten submodule SHA-1s using rev-parse
revert "checkout: introduce checkout.overlayMode config"
doc-diff: don't `cd_to_toplevel`
diff-tree doc: correct & remove wrong documentation
t6120: test for describe with a bare repository
describe: setup working tree for --dirty
travis-ci: make the OSX build jobs' 'brew update' more quiet
git-commit.txt: better description what it does
various: tighten constness of some local variables
help: align the longest command in the command listing
sequencer: refactor check_todo_list() to work on a todo_list
sequencer: introduce todo_list_write_to_file()
sequencer: refactor transform_todos() to work on a todo_list
sequencer: remove the 'arg' field from todo_item
git-instaweb: add Python builtin http.server support
object_as_type: initialize commit-graph-related fields of 'struct commit'
diff.c: convert --raw
diff.c: convert -W|--[no-]function-context
diff.c: convert -U|--unified
diff.c: convert -u|-p|--patch
diff.c: prepare to use parse_options() for parsing
diff.h: avoid bit fields in struct diff_flags
diff.h: keep forward struct declarations sorted
parse-options: allow ll_callback with OPTION_CALLBACK
parse-options: avoid magic return codes
parse-options: stop abusing 'callback' for lowlevel callbacks
parse-options: add OPT_BITOP()
parse-options: disable option abbreviation with PARSE_OPT_KEEP_UNKNOWN
parse-options: add one-shot mode
strbuf.cocci: suggest strbuf_addbuf() to add one strbuf to an other
fetch: prefer suffix substitution in compact fetch.output
cache.h: flip NO_THE_INDEX_COMPATIBILITY_MACROS switch
setup: free old value before setting `work_tree`
commit-graph write: emit a percentage for all progress
commit-graph write: add itermediate progress
commit-graph write: remove empty line for readability
commit-graph write: add more descriptive progress output
commit-graph write: show progress for object search
commit-graph write: more descriptive "writing out" output
commit-graph write: add "Writing out" progress output
commit-graph: don't call write_graph_chunk_extra_edges() unnecessarily
commit-graph: rename "large edges" to "extra edges"
commit-graph write: use pack order when finding commits
commit-tree: add missing --gpg-sign flag
t7510: invoke git as part of &&-chain
parse-options.h: remove extern on function prototypes
travis-ci: build with the right compiler
travis-ci: switch to Xcode 10.1 macOS image
travis-ci: don't be '--quiet' when running the tests
.gitignore: ignore external debug symbols from GCC on macOS
compat/obstack: fix -Wcast-function-type warnings
helper/test-ref-store: fix "new-sha1" vs "old-sha1" typo
read-cache.c: remove the_* from index_has_changes()
merge-recursive.c: remove implicit dependency on the_repository
merge-recursive.c: remove implicit dependency on the_index
sha1-name.c: remove implicit dependency on the_index
read-cache.c: replace update_index_if_able with repo_&
read-cache.c: kill read_index()
checkout: avoid the_index when possible
repository.c: replace hold_locked_index() with repo_hold_locked_index()
notes-utils.c: remove the_repository references
grep: use grep_opt->repo instead of explict repo argument
partial-clone: add missing 'is' in doc
fetch: fix extensions.partialclone name in error message
git-show-ref.txt: fix order of flags
checkout: introduce checkout.overlayMode config
checkout: introduce --{,no-}overlay option
sequencer: make the todo_list structure public
sequencer: changes in parse_insn_buffer()
git-p4: fix problem when p4 login is not necessary
rebase: implement --merge via the interactive machinery
worktree: allow to (re)move worktrees with uninitialized submodules
test-lib: add the '--stress' option to run a test repeatedly under load
test-lib-functions: introduce the 'test_set_port' helper function
test-lib: set $TRASH_DIRECTORY earlier
test-lib: consolidate naming of test-results paths
test-lib: parse command line options earlier
test-lib: parse options in a for loop to keep $@ intact
test-lib: extract Bash version check for '-x' tracing
config.mak.dev: add -Wall, primarily for -Wformat, to help autoconf users
t3506: validate '-m 1 -ff' is now accepted for non-merge commits
t3502: validate '-m 1' argument is now accepted for non-merge commits
Revert "t/lib-git-daemon: record daemon log"
test-lib: translate SIGTERM and SIGHUP to an exit
completion: fix typo in git-completion.bash
test-lib: check Bash version for '-x' without using shell arrays
completion: treat results of git ls-tree as file paths
zsh: complete unquoted paths with spaces correctly
Simplify handling of setup_git_directory_gently() failure cases.
checkout: factor out mark_cache_entry_for_checkout function
checkout: clarify comment
read-cache: add invalidate parameter to remove_marked_cache_entries
entry: support CE_WT_REMOVE flag in checkout_entry
entry: factor out unlink_entry function
move worktree tests to t24*
rebase: run post-checkout hook on checkout
t5403: simplify by using a single repository
bisect--helper: `bisect_start` shell function partially in C
bisect--helper: `get_terms` & `bisect_terms` shell function in C
bisect--helper: `bisect_next_check` shell function in C
bisect--helper: `check_and_set_terms` shell function in C
wrapper: move is_empty_file() and rename it as is_empty_or_missing_file()
bisect--helper: `bisect_write` shell function in C
bisect--helper: `bisect_reset` shell function in C
rebase: define linearization ordering and enforce it
git-legacy-rebase: simplify unnecessary triply-nested if
git-rebase, sequencer: extend --quiet option for the interactive machinery
am, rebase--merge: do not overlook --skip'ed commits with post-rewrite
t5407: add a test demonstrating how interactive handles --skip differently
rebase: fix incompatible options error message
rebase: make builtin and legacy script error messages the same
t5570: drop racy test
ref-filter: add docs for new options
ref-filter: add tests for deltabase
ref-filter: add deltabase option
ref-filter: add tests for objectsize:disk
ref-filter: add check for negative file size
ref-filter: add objectsize:disk option
stripspace: allow -s/-c outside git repository
git-status.txt: render tables correctly under Asciidoctor
Documentation: do not nest open blocks
git-column.txt: fix section header
cherry-pick: do not error on non-merge commits when '-m 1' is specified
t3510: stop using '-m 1' to force failure mid-sequence of cherry-picks
Merge branch 'master' of github.com:linusboyle/git
Merge branch 'master' of https://github.com/Softcatala/git-po
l10n: zh_CN: fix typo of submodule init message
parse-options: fix SunCC compiler warning
style: the opening '{' of a function is in a separate line
Indent code with TABs
docs/gitweb.conf: config variable typo
mailmap: update brandon williams's email address
git-rebase.txt: update note about directory rename detection and am
l10n: de.po: fix two messages
l10n: zh_CN: for git v2.20.0 l10n round 1 to 3
l10n: update German translation
RelNotes 2.20: drop spurious double quote
RelNotes 2.20: clarify sentence
RelNotes 2.20: move some items between sections
range-diff: always pass at least minimal diff options
Merge branch 'master' of git://github.com/alshopov/git-po
config.mak.uname: OpenBSD uses BSD semantics with fread for directories
t5004: avoid using tar for empty packages
tests: add lint for non portable cp -a
Merge branch 'fr_2.20_round3' of git://github.com/jnavila/git
Merge branch 'master' of https://github.com/vnwildman/git
l10n: vi(4187t): Updated Vietnamese translation for v2.20.0 rd3
l10n: git.pot: v2.20.0 round 3 (5 new, 3 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
Merge branch 'master' of https://github.com/vnwildman/git
l10n: vi(4185t): Updated Vietnamese translation for v2.20.0
t6036: avoid non-portable "cp -a"
builtin/rebase.c: remove superfluous space in messages
l10n: git.pot: v2.20.0 round 2 (2 new, 2 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
Merge branch 'master' of git://github.com/alshopov/git-po
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
Merge branch 'fr_2.20_rnd1' of git://github.com/jnavila/git
git-reset.txt: render literal examples as monospace
git-reset.txt: render tables correctly under Asciidoctor
transport-helper.c: do not translate a string twice
advice: don't pointlessly suggest --convert-graft-file
t/lib-git-daemon: fix signal checking
files-backend.c: fix build error on Solaris
index: make index.threads=true enable ieot and eoie
clone: fix colliding file detection on APFS
ieot: default to not writing IEOT section
eoie: default to not writing EOIE section
commit-graph: split up close_reachable() progress output
test-lib-functions: make 'test_cmp_rev' more informative on failure
tests: send "bug in the test script" errors to the script's stderr
Merge branch 'master' of git://github.com/git-l10n/git-po
l10n: git.pot: v2.20.0 round 1 (254 new, 27 removed)
tree-walk: support :(attr) matching
dir.c: move, rename and export match_attrs()
pathspec.h: clean up "extern" in function declarations
tree-walk.c: make tree_entry_interesting() take an index
tree.c: make read_tree*() take 'struct repository *'
read-cache: make the split index obey umask settings
stash: tolerate missing user identity
Merge branch 'master' of https://github.com/Softcatala/git-po
fast-export: add a --show-original-ids option to show original names
fast-import: remove unmaintained duplicate documentation
fast-export: add --reference-excluded-parents option
fast-export: ensure we export requested refs
fast-export: when using paths, avoid corrupt stream with non-existent mark
fast-export: move commit rewriting logic into a function for reuse
fast-export: avoid dying when filtering by paths and old tags exist
fast-export: use value from correct enum
git-fast-export.txt: clarify misleading documentation about rev-list args
git-fast-import.txt: fix documentation for --quiet option
fast-export: convert sha1 to oid
tests: add a special setup where rebase.useBuiltin is off
rebase doc: document rebase.useBuiltin
doc: move extensions.worktreeConfig to the right place
ref-filter: don't look for objects when outside of a repository
Documentation/clone: document ignored configuration variables
clone: respect additional configured fetch refspecs during initial fetch
clone: use a more appropriate variable name for the default refspec
push: change needlessly ambiguous example in error
git-compat-util: prefer poll.h to sys/poll.h
push doc: document the DWYM behavior pushing to unqualified <dst>
push: test that <src> doesn't DWYM if <dst> is unqualified
push: add an advice on unqualified <dst> push
push: move unqualified refname error into a function
push: improve the error shown on unqualified <dst> push
i18n: remote.c: mark error(...) messages for translation
remote.c: add braces in anticipation of a follow-up change
range-diff: make diff option behavior (e.g. --stat) consistent
win32: replace pthread_cond_*() with much simpler code
checkout: print something when checking out paths
checkout: disambiguate dwim tracking branches and local files
coccicheck: introduce 'pending' semantic patches
format-patch: respect --stat in cover letter's diffstat
refs: fix some exclude patterns being ignored
refs: show --exclude failure with --branches/tags/remotes=glob
builtin/notes: remove unnecessary free
p3400: replace calls to `git checkout -b' by `git checkout -B'
build: fix broken command-list.h generation with core.autocrlf
rebase-interactive.c: remove the_repository references
rerere.c: remove the_repository references
pack-*.c: remove the_repository references
pack-check.c: remove the_repository references
notes-cache.c: remove the_repository references
line-log.c: remove the_repository reference
diff-lib.c: remove the_repository references
delta-islands.c: remove the_repository references
cache-tree.c: remove the_repository references
bundle.c: remove the_repository references
branch.c: remove the_repository reference
bisect.c: remove the_repository reference
blame.c: remove implicit dependency the_repository
sequencer.c: remove implicit dependency on the_repository
sequencer.c: remove implicit dependency on the_index
transport.c: remove implicit dependency on the_index
notes-merge.c: remove implicit dependency the_repository
notes-merge.c: remove implicit dependency on the_index
list-objects.c: reduce the_repository references
list-objects-filter.c: remove implicit dependency on the_index
wt-status.c: remove implicit dependency the_repository
wt-status.c: remove implicit dependency on the_index
fsck: mark strings for translation
fsck: reduce word legos to help i18n
parse-options.c: mark more strings for translation
parse-options.c: turn some die() to BUG()
parse-options: replace opterror() with optname()
repack: mark more strings for translation
remote.c: mark messages for translation
remote.c: turn some error() or die() to BUG()
reflog: mark strings for translation
read-cache.c: add missing colon separators
read-cache.c: mark more strings for translation
read-cache.c: turn die("internal error") to BUG()
attr.c: mark more string for translation
archive.c: mark more strings for translation
alias.c: mark split_cmdline_strerror() strings for translation
git.c: mark more strings for translation
range-diff: fix regression in passing along diff options
range-diff doc: add a section about output stability
i18n: make GETTEXT_POISON a runtime option
merge-recursive: combine error handling
t6036, t6043: increase code coverage for file collision handling
merge-recursive: improve rename/rename(1to2)/add[/add] handling
merge-recursive: use handle_file_collision for add/add conflicts
merge-recursive: improve handling for rename/rename(2to1) conflicts
merge-recursive: fix rename/add conflict handling
merge-recursive: new function for better colliding conflict resolutions
merge-recursive: increase marker length with depth of recursion
t6036, t6042: testcases for rename collision of already conflicting files
t6042: add tests for consistency in file collision conflict handling
completion: use __gitcomp_builtin for format-patch
Clean up pthread_create() error handling
read-cache.c: initialize copy_len to shut up gcc 8
read-cache.c: reduce branching based on HAVE_THREADS
read-cache.c: remove #ifdef NO_PTHREADS
pack-objects: remove #ifdef NO_PTHREADS
preload-index.c: remove #ifdef NO_PTHREADS
grep: clean up num_threads handling
grep: remove #ifdef NO_PTHREADS
attr.c: remove #ifdef NO_PTHREADS
name-hash.c: remove #ifdef NO_PTHREADS
index-pack: remove #ifdef NO_PTHREADS
send-pack.c: move async's #ifdef NO_PTHREADS back to run-command.c
run-command.h: include thread-utils.h instead of pthread.h
poll: use GetTickCount64() to avoid wrap-around issues
tree-walk.c: fix overoptimistic inclusion in :(exclude) matching
sequencer.c: remove a stray semicolon
git-worktree.txt: correct linkgit command name
t6012: make rev-list tests more interesting
revision.c: generation-based topo-order algorithm
commit/revisions: bookkeeping before refactoring
revision.c: begin refactoring --topo-order logic
test-reach: add rev-list tests
test-reach: add run_three_modes method
prio-queue: add 'peek' operation
travis-ci: install packages in 'ci/install-dependencies.sh'
worktree: rename is_worktree_locked to worktree_lock_reason
worktree: update documentation for lock_reason and lock_reason_valid
index-pack tests: don't leave test repo dirty at end
pack-objects tests: don't leave test .git corrupt at end
pack-objects test: modernize style
sequencer: break out of loop explicitly
test-lib: introduce the '-V' short option for '--verbose-log'
wildmatch: change behavior of "foo**bar" in WM_PATHNAME mode
thread-utils: macros to unconditionally compile pthreads API
config.txt: remove config/dummy.txt
config.txt: move worktree.* to a separate file
config.txt: move web.* to a separate file
config.txt: move versionsort.* to a separate file
config.txt: move user.* to a separate file
config.txt: move url.* to a separate file
config.txt: move uploadpack.* to a separate file
config.txt: move uploadarchive.* to a separate file
config.txt: move transfer.* to a separate file
config.txt: move tag.* to a separate file
config.txt: move submodule.* to a separate file
config.txt: move stash.* to a separate file
config.txt: move status.* to a separate file
config.txt: move splitIndex.* to a separate file
config.txt: move showBranch.* to a separate file
config.txt: move sequencer.* to a separate file
config.txt: move sendemail-config.txt to config/
config.txt: move reset.* to a separate file
config.txt: move rerere.* to a separate file
config.txt: move repack.* to a separate file
config.txt: move remotes.* to a separate file
config.txt: move remote.* to a separate file
config.txt: move receive-config.txt to config/
config.txt: move rebase-config.txt to config/
config.txt: move push-config.txt to config/
config.txt: move pull-config.txt to config/
config.txt: move protocol.* to a separate file
config.txt: move pretty.* to a separate file
config.txt: move pager.* to a separate file
config.txt: move pack.* to a separate file
config.txt: move notes.* to a separate file
config.txt: move mergetool.* to a separate file
config.txt: move merge-config.txt to config/
config.txt: move man.* to a separate file
config.txt: move mailmap.* to a separate file
config.txt: move mailinfo.* to a separate file
config.txt: move log.* to a separate file
config.txt: move interactive.* to a separate file
config.txt: move instaweb.* to a separate file
config.txt: move init.* to a separate file
config.txt: move index.* to a separate file
git-imap-send.txt: move imap.* to a separate file
config.txt: move i18n.* to a separate file
config.txt: move http.* to a separate file
config.txt: move ssh.* to a separate file
config.txt: move help.* to a separate file
config.txt: move guitool.* to a separate file
config.txt: move gui-config.txt to config/
config.txt: move gpg.* to a separate file
config.txt: move grep.* to a separate file
config.txt: move gitweb.* to a separate file
config.txt: move gitcvs-config.txt to config/
config.txt: move gc.* to a separate file
config.txt: move fsck.* to a separate file
config.txt: move fmt-merge-msg-config.txt to config/
config.txt: move format-config.txt to config/
config.txt: move filter.* to a separate file
config.txt: move fetch-config.txt to config/
config.txt: move fastimport.* to a separate file
config.txt: move difftool.* to a separate file
config.txt: move diff-config.txt to config/
config.txt: move completion.* to a separate file
config.txt: move credential.* to a separate file
config.txt: move commit.* to a separate file
config.txt: move column.* to a separate file
config.txt: move color.* to a separate file
config.txt: move clean.* to a separate file
config.txt: move checkout.* to a separate file
config.txt: move browser.* to a separate file
config.txt: move branch.* to a separate file
config.txt: move blame.* to a separate file
config.txt: move apply.* to a separate file
config.txt: move am.* to a separate file
config.txt: move alias.* to a separate file
config.txt: move add.* to a separate file
config.txt: move core.* to a separate file
config.txt: move advice.* to a separate file
Update makefile in preparation for Documentation/config/*.txt
sequencer: cleanup for gcc warning in non developer mode
travis-ci: no longer use containers
packfile: close multi-pack-index in close_all_packs
compat: make sure git_mmap is not expected to write
doc: document diff/merge.guitool config keys
completion: support `git mergetool --[no-]gui`
mergetool: accept -g/--[no-]gui as arguments
khash: silence -Wunused-function for delta-islands
commit-slabs: move MAYBE_UNUSED out
send-email: explicitly disable authentication
doc: fix formatting in git-update-ref
doc: fix indentation of listing blocks in gitweb.conf.txt
doc: fix descripion for 'git tag --format'
doc: fix inappropriate monospace formatting
doc: fix ASCII art tab spacing
doc: clarify boundaries of 'git worktree list --porcelain'
reflog expire: cover reflog from all worktrees
fsck: check HEAD and reflog from other worktrees
fsck: move fsck_head_link() to get_default_heads() to avoid some globals
revision.c: better error reporting on ref from different worktrees
revision.c: correct a parameter name
refs: new ref types to make per-worktree refs visible to all worktrees
worktree: add per-worktree config files
t1300: extract and use test_cmp_config()
completion: fix __gitcomp_builtin no longer consider extra options
read-cache: use of memory after it is freed
submodule.c: remove some of the_repository references
l10n: update German translation
ref-filter: free item->value and item->value->s
ls-remote: release memory instead of UNLEAK
ref-filter: free memory from used_atom
multi-pack-index: avoid dead store for struct progress
unpack-trees: avoid dead store for struct progress
merge-recursive: avoid showing conflicts with merge branch before HEAD
merge-recursive: improve auto-merging messages with path collisions
doc: fix small typo in git show-branch
object_id.cocci: match only expressions of type 'struct object_id'
split-index: BUG() when cache entry refers to non-existing shared entry
split-index: smudge and add racily clean cache entries to split index
split-index: don't compare cached data of entries already marked for split index
split-index: count the number of deleted entries
t1700-split-index: date back files to avoid racy situations
split-index: add tests to demonstrate the racy split index problem
gc doc: mention the commit-graph in the intro
rebase: default to using the builtin rebase
builtin rebase: error out on incompatible option/mode combinations
builtin rebase: use no-op editor when interactive is "implied"
builtin rebase: show progress when connected to a terminal
builtin rebase: fast-forward to onto if it is a proper descendant
builtin rebase: optionally pass custom reflogs to reset_head()
builtin rebase: optionally auto-detect the upstream
builtin rebase: support --root
builtin rebase: add support for custom merge strategies
builtin rebase: support `fork-point` option
merge-base --fork-point: extract libified function
builtin rebase: support --rebase-merges[=[no-]rebase-cousins]
builtin rebase: support `--allow-empty-message` option
builtin rebase: support `--exec`
builtin rebase: support `--autostash` option
builtin rebase: support `-C` and `--whitespace=<type>`
builtin rebase: support `--gpg-sign` option
rebase -i: move rebase--helper modes to rebase--interactive
rebase -i: remove git-rebase--interactive.sh
rebase--interactive2: rewrite the submodes of interactive rebase in C
rebase -i: implement the main part of interactive rebase as a builtin
docs: typo: s/isimilar/similar/
docs: graph: remove unnecessary `graph_update()' call
docs: typo: s/go/to/
builtin/commit-graph.c: UNLEAK variables
Add a place for (not) sharing stuff between worktrees
refs.c: indent with tabs, not spaces
help -a: improve and make --verbose default
config.txt: correct the note about uploadpack.packObjectsHook
git doc: direct bug reporters to mailing list archive
git-rebase.sh: fix typos in error messages
t7005-editor: quote filename to fix whitespace-issue
rev-parse: --show-superproject-working-tree should work during a merge
t1400: drop debug `echo` to actually execute `test`
t1700-split-index: document why FSMONITOR is disabled in this test script
Doc: refer to the "commit-graph file" with dash
git-commit-graph.txt: refer to "*commit*-graph file"
git-commit-graph.txt: typeset more in monospace
git-commit-graph.txt: fix bullet lists
commit: fix erroneous BUG, 'multiple renames on the same target? how?'
read-cache.c: optimize reading index format v4
mailmap: consistently normalize brian m. carlson's name
t5551: compare sorted cookies files
t5551: move setup code inside test_expect blocks
revision.c: reduce implicit dependency the_repository
revision.c: remove implicit dependency on the_index
ws.c: remove implicit dependency on the_index
tree-diff.c: remove implicit dependency on the_index
submodule.c: remove implicit dependency on the_index
line-range.c: remove implicit dependency on the_index
userdiff.c: remove implicit dependency on the_index
rerere.c: remove implicit dependency on the_index
sha1-file.c: remove implicit dependency on the_index
patch-ids.c: remove implicit dependency on the_index
merge.c: remove implicit dependency on the_index
merge-blobs.c: remove implicit dependency on the_index
ll-merge.c: remove implicit dependency on the_index
diff-lib.c: remove implicit dependency on the_index
read-cache.c: remove implicit dependency on the_index
diff.c: remove implicit dependency on the_index
grep.c: remove implicit dependency on the_index
diff.c: remove the_index dependency in textconv() functions
blame.c: rename "repo" argument to "r"
combine-diff.c: remove implicit dependency on the_index
diff.c: reduce implicit dependency on the_index
read-cache.c: remove 'const' from index_has_changes()
completion: support "git fetch --multiple"
add: do not accept pathspec magic 'attr'
merge-recursive: rename merge_file_1() and merge_content()
merge-recursive: remove final remaining caller of merge_file_one()
merge-recursive: avoid wrapper function when unnecessary and wasteful
merge-recursive: set paths correctly when three-way merging content
gc: fix regression in 7b0f229222 impacting --quiet
git-config.txt: fix 'see: above' note
Doc: use `--type=bool` instead of `--bool`
fetch doc: correct grammar in --force docs
push doc: add spacing between two words
config doc: add missing list separator for checkout.optimizeNewBranch
commit-graph verify: add progress output
commit-graph write: add progress output
status: show progress bar if refreshing the index takes too long
archive.c: remove implicit dependency the_repository
t5318: use test_oid for HASH_LEN
builtin/remote: quote remote name on error to display empty name
linear-assignment: fix potential out of bounds memory access
sequencer: fix --allow-empty-message behavior, make it smarter
fsck: support comments & empty lines in skipList
fsck: add a performance test
fsck: document that skipList input must be unabbreviated
fsck: document and test commented & empty line skipList input
fsck: document and test sorted skipList input
fsck tests: add a test for no skipList input
fsck tests: setup of bogus commit object
update-ref: allow --no-deref with --stdin
update-ref: fix type of update_flags variable to match its usage
t0090: disable GIT_TEST_SPLIT_INDEX for the test checking split index
t1700-split-index: drop unnecessary 'grep'
config.txt: move submodule part out to a separate file
config.txt: move sequence.editor out of "core" part
config.txt: move sendemail part out to a separate file
config.txt: move receive part out to a separate file
config.txt: move push part out to a separate file
config.txt: move pull part out to a separate file
config.txt: move gui part out to a separate file
config.txt: move gitcvs part out to a separate file
config.txt: move format part out to a separate file
config.txt: move fetch part out to a separate file
config.txt: follow camelCase naming
l10n: zh_CN: review for git v2.19.0 l10n
rerere: avoid buffer overrun
t4200: demonstrate rerere segfault on specially crafted merge
t3701-add-interactive: tighten the check of trace output
Makefile: add a hint about TEST_BUILTINS_OBJS
t/helper: merge test-dump-fsmonitor into test-tool
t/helper: merge test-parse-options into test-tool
t/helper: merge test-pkt-line into test-tool
t/helper: merge test-dump-untracked-cache into test-tool
t/helper: keep test-tool command list sorted
l10n: zh_CN: for git v2.19.0 l10n round 1 to 2
Merge branch 'master' of git://github.com/alshopov/git-po
Revert "Merge branch 'sb/submodule-core-worktree'"
l10n: vi.po(3958t): updated Vietnamese translation v2.19.0 round 2
builtin rebase: support `--autosquash`
builtin rebase: support `keep-empty` option
builtin rebase: support `ignore-date` option
builtin rebase: support `ignore-whitespace` option
builtin rebase: support --committer-date-is-author-date
builtin rebase: support --rerere-autoupdate
builtin rebase: support --signoff
builtin rebase: allow selecting the rebase "backend"
builtin rebase: stop if `git am` is in progress
builtin rebase: actions require a rebase in progress
builtin rebase: support --edit-todo and --show-current-patch
builtin rebase: support --quit
builtin rebase: support --abort
builtin rebase: support --skip
builtin rebase: support --continue
builtin rebase: support `git rebase <upstream> <switch-to>`
builtin rebase: only store fully-qualified refs in `options.head_name`
builtin rebase: start a new rebase only if none is in progress
builtin rebase: support --force-rebase
builtin rebase: try to fast forward when possible
builtin rebase: require a clean worktree
builtin rebase: support the `verbose` and `diffstat` options
builtin rebase: support --quiet
builtin rebase: handle the pre-rebase hook and --no-verify
builtin rebase: support `git rebase --onto A...B`
builtin rebase: support --onto
Merge branch 'fr_2.19.0_rnd1' of git://github.com/jnavila/git
Remove superfluous trailing semicolons
Documentation/git.txt: clarify that GIT_TRACE=/path appends
bisect.c: make show_list() build again
l10n: git.pot: v2.19.0 round 2 (3 new, 5 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
fetch: stop clobbering existing tags without --force
fetch: document local ref updates with/without --force
push doc: correct lies about how push refspecs work
push doc: move mention of "tag <tag>" later in the prose
push doc: remove confusing mention of remote merger
fetch tests: add a test for clobbering tag behavior
push tests: use spaces in interpolated string
push tests: make use of unused $1 in test description
fetch: change "branch" to "reference" in --force -h output
am: avoid directory rename detection when calling recursive merge machinery
merge-recursive: add ability to turn off directory rename detection
t3401: add another directory rename testcase for rebase and am
rebase -i: rewrite init_basic_state() in C
rebase -i: rewrite write_basic_state() in C
rebase -i: rewrite the rest of init_revisions_and_shortrevisions() in C
rebase -i: implement the logic to initialize $revisions in C
rebase -i: remove unused modes and functions
rebase -i: rewrite complete_action() in C
.gitattributes: add conflict-marker-size for relevant files
tests: fix non-portable iconv invocation
tests: fix non-portable "${var:-"str"}" construct
rerere: add note about files with existing conflict markers
rerere: mention caveat about unmatched conflict markers
commit-reach: correct accidental #include of C file
l10n: ru.po: update Russian translation
tests: fix and add lint for non-portable grep --file
tests: fix version-specific portability issue in Perl JSON
tests: use shorter labels in chainlint.sed for AIX sed
Document update for nd/unpack-trees-with-cache-tree
tests: fix comment syntax in chainlint.sed for AIX sed
tests: fix and add lint for non-portable seq
tests: fix and add lint for non-portable head -c N
t/lib-rebase.sh: support explicit 'pick' commands in 'fake_editor.sh'
t3420-rebase-autostash: don't try to grep non-existing files
t3903-stash: don't try to grep non-existing file
t6018-rev-list-glob: fix 'empty stdin' test
t4051-diff-function-context: read the right file
t0020-crlf: check the right file
t7501-commit: drop silly command substitution
tests: use 'test_must_be_empty' instead of 'test_cmp <empty> <out>'
tests: use 'test_must_be_empty' instead of 'test_cmp /dev/null <out>'
tests: use 'test_must_be_empty' instead of 'test ! -s'
tests: use 'test_must_be_empty' instead of '! test -s'
generate-cmdlist.sh: collect config from all config.txt files
l10n: git.pot: v2.19.0 round 1 (382 new, 30 removed)
Merge branch 'maint' of git://github.com/git-l10n/git-po
cache-tree: verify valid cache-tree in the test suite
unpack-trees: add missing cache invalidation
unpack-trees: reuse (still valid) cache-tree from src_index
unpack-trees: reduce malloc in cache-tree walk
unpack-trees: optimize walking same trees with cache-tree
unpack-trees: add performance tracing
trace.h: support nested performance tracing
t2024: mark test using "checkout -p" with PERL prerequisite
worktree: add --quiet option
clone: report duplicate entries on case-insensitive filesystems
refactor various if (x) FREE_AND_NULL(x) to just FREE_AND_NULL(x)
branch: support configuring --sort via .gitconfig
pack-objects: move 'layer' into 'struct packing_data'
pack-objects: move tree_depth into 'struct packing_data'
pack-objects: refactor code into compute_layer_order()
cherry-pick: fix --quit not deleting CHERRY_PICK_HEAD
Remove forward declaration of an enum
compat/precompose_utf8.h: use more common include guard style
urlmatch.h: fix include guard
Move definition of enum branch_track from cache.h to branch.h
alloc: make allocate_alloc_state and clear_alloc_state more consistent
Add missing includes and forward declarations
partial-clone: render design doc using asciidoc
submodule: add more exhaustive up-path testing
t5310-pack-bitmaps: fix bogus 'pack-objects to file can use bitmap' test
blame.c: remove implicit dependency on the_index
apply.c: remove implicit dependency on the_index
apply.c: make init_apply_state() take a struct repository
apply.c: pass struct apply_state to more functions
resolve-undo.c: use the right index instead of the_index
archive-*.c: use the right repository
archive.c: avoid access to the_index
grep: use the right index instead of the_index
attr: remove index from git_attr_set_direction()
entry.c: use the right index instead of the_index
submodule.c: use the right index instead of the_index
pathspec.c: use the right index instead of the_index
unpack-trees: avoid the_index in verify_absent()
unpack-trees: convert clear_ce_flags* to avoid the_index
unpack-trees: don't shadow global var the_index
unpack-trees: add a note about path invalidation
unpack-trees: remove 'extern' on function declaration
ls-files: correct index argument to get_convert_attr_ascii()
preload-index.c: use the right index instead of the_index
dir.c: remove an implicit dependency on the_index in pathspec code
convert.c: remove an implicit dependency on the_index
attr: remove an implicit dependency on the_index
cache-tree: wrap the_index based wrappers with #ifdef
diff.c: move read_index() code back to the caller
pull doc: fix a long-standing grammar error
fetch tests: correct a comment "remove it" -> "remove them"
t5318: avoid unnecessary command substitutions
t5318: use 'test_cmp_bin' to compare commit-graph files
t3404: todo list with commented-out commands only aborts
sequencer: change the way skip_unnecessary_picks() returns its result
sequencer: refactor append_todo_help() to write its message to a buffer
rebase -i: rewrite checkout_onto() in C
rebase -i: rewrite setup_reflog_action() in C
sequencer: add a new function to silence a command, except if it fails
rebase -i: rewrite the edit-todo functionality in C
editor: add a function to launch the sequence editor
rebase -i: rewrite append_todo_help() in C
sequencer: make three functions and an enum from sequencer.c public
git-update-index.txt: reword possibly confusing example
t7406: avoid using test_must_fail for commands other than git
t7406: prefer test_* helper functions to test -[feds]
t7406: avoid having git commands upstream of a pipe
t7406: simplify by using diff --name-only instead of diff --raw
t7406: fix call that was failing for the wrong reason
doc hash-function-transition: pick SHA-256 as NewHash
t: factor out FUNNYNAMES as shared lazy prereq
Makefile: add missing dependency for command-list.h
rerere: recalculate conflict ID when unresolved conflict is committed
rerere: teach rerere to handle nested conflicts
rerere: return strbuf from handle path
rerere: factor out handle_conflict function
rerere: only return whether a path has conflicts or not
rerere: fix crash with files rerere can't handle
rerere: add documentation for conflict normalization
rerere: mark strings for translation
t4150: fix broken test for am --scissors
builtin/rebase: support running "git rebase <upstream>"
rebase: refactor common shell functions into their own file
rebase: start implementing it as a builtin
config.txt: reorder blame stuff to keep config keys sorted
t3031: update test description to mention desired behavior
submodule.h: drop extern from function declaration
revision.h: drop extern from function declaration
repository.h: drop extern from function declaration
rerere.h: drop extern from function declaration
line-range.h: drop extern from function declaration
diff.h: remove extern from function declaration
diffcore.h: drop extern from function declaration
convert.h: drop 'extern' from function declaration
cache-tree.h: drop extern from function declaration
blame.h: drop extern on func declaration
attr.h: drop extern from function declaration
apply.h: drop extern on func declaration
push: use PARSE_OPT_LITERAL_ARGHELP instead of unbalanced brackets
sha1dc: update from upstream
git-p4: add the `p4-pre-submit` hook
fetch doc: cross-link two new negotiation options
negotiator: unknown fetch.negotiationAlgorithm should error out
t1404: increase core.packedRefsTimeout to avoid occasional test failure
travis-ci: include the trash directories of failed tests in the trace log
read-cache: fix directory/file conflict handling in read_index_unmerged()
t1015: demonstrate directory/file conflict recovery failures
push tests: assert re-pushing annotated tags
push tests: add more testing for forced tag pushing
push tests: fix logic error in "push" test assertion
push tests: remove redundant 'git push' invocation
fetch tests: change "Tag" test tag to "testTag"
subtree test: simplify preparation of expected results
subtree test: add missing && to &&-chain
pack-objects: document about thread synchronization
doc: fix want-capability separator
tests: make use of the test_must_be_empty function
tests: make use of the test_must_be_empty function
fsck: test and document unknown fsck.<msg-id> values
fsck: add stress tests for fsck.skipList
fsck: test & document {fetch,receive}.fsck.* config fallback
fetch: implement fetch.fsck.*
transfer.fsckObjects tests: untangle confusing setup
config doc: elaborate on fetch.fsckObjects security
config doc: elaborate on what transfer.fsckObjects does
config doc: unify the description of fsck.* and receive.fsck.*
config doc: don't describe *.fetchObjects twice
receive.fsck.<msg-id> tests: remove dead code
merge-recursive: preserve skip_worktree bit when necessary
t3507: add a testcase showing failure with sparse checkout
l10n: de.po: translate 108 new messages
doc hash-function-transition: note the lack of a changelog
coccinelle: extract dedicated make target to clean Coccinelle's results
coccinelle: put sane filenames into output patches
coccinelle: exclude sha1dc source files from static analysis
coccinelle: use $(addsuffix) in 'coccicheck' make target
coccinelle: mark the 'coccicheck' make target as .PHONY
travis-ci: fail if Coccinelle static analysis found something to transform
travis-ci: run Coccinelle static analysis with two parallel jobs
transport-helper.c: mark more strings for translation
transport.c: mark more strings for translation
sha1-file.c: mark more strings for translation
sequencer.c: mark more strings for translation
replace-object.c: mark more strings for translation
refspec.c: mark more strings for translation
refs.c: mark more strings for translation
pkt-line.c: mark more strings for translation
object.c: mark more strings for translation
exec-cmd.c: mark more strings for translation
environment.c: mark more strings for translation
dir.c: mark more strings for translation
convert.c: mark more strings for translation
connect.c: mark more strings for translation
config.c: mark more strings for translation
commit-graph.c: mark more strings for translation
builtin/replace.c: mark more strings for translation
builtin/pack-objects.c: mark more strings for translation
builtin/grep.c: mark strings for translation
builtin/config.c: mark more strings for translation
archive-zip.c: mark more strings for translation
archive-tar.c: mark more strings for translation
Update messages in preparation for i18n
pack-objects: fix performance issues on packing large deltas
midx: clear midx on repack
packfile: skip loading index if in multi-pack-index
midx: prevent duplicate packfile loads
midx: use midx in approximate_object_count
midx: use existing midx when writing new one
midx: use midx in abbreviation calculations
midx: read objects from multi-pack-index
config: create core.multiPackIndex setting
midx: write object offsets
midx: write object id fanout chunk
midx: write object ids in a chunk
midx: sort and deduplicate objects from packfiles
midx: read pack names into array
multi-pack-index: write pack names in chunk
multi-pack-index: read packfile list
packfile: generalize pack directory list
t5319: expand test data
multi-pack-index: load into memory
midx: write header information to lockfile
multi-pack-index: add 'write' verb
multi-pack-index: add builtin
t9300: wait for background fast-import process to die after killing it
Documentation: fix --color option formatting
ref-filter: use oid_object_info() to get object
ref-filter: merge get_obj and get_object
ref-filter: initialize eaten variable
ref-filter: fill empty fields with empty values
ref-filter: add info_source to valid_atom
gc: do not return error for prior errors in daemonized mode
gc: exit with status 128 on failure
gc: improve handling of errors reading gc.log
t5608: fix broken &&-chain
rerere: wrap paths in output in sq
rerere: lowercase error messages
rerere: unify error messages when read_cache fails
multi-pack-index: add format details
multi-pack-index: add design document
sha1-name.c: for ":/", find detached HEAD commits
t/lib-httpd: avoid occasional failures when checking access.log
t/lib-httpd: add the strip_access_log() helper function
t5541: clean up truncating access log
t7405: verify 'merge --abort' works after submodule/path conflicts
t7405: add a directory/submodule conflict
t7405: add a file/submodule conflict
merge: fix misleading pre-merge check documentation
merge-recursive: enforce rule that index matches head before merging
t6044: add more testcases with staged changes before a merge is invoked
merge-recursive: fix assumption that head tree being merged is HEAD
merge-recursive: make sure when we say we abort that we actually abort
t6044: add a testcase for index matching head, when head doesn't match HEAD
t6036: add a failed conflict detection case: regular files, different modes
t6036: add lots of detail for directory/file conflicts in recursive case
for-each-ref: consistently pass WM_IGNORECASE flag
t6042: add testcase covering long chains of rename conflicts
t6042: add testcase covering rename/rename(2to1)/delete/delete conflict
t6042: add testcase covering rename/add/delete conflict type
t6036: add a failed conflict detection case with conflicting types
t6036: add a failed conflict detection case with submodule add/add
t6036: add a failed conflict detection case with submodule modify/modify
t6036: add a failed conflict detection case with symlink add/add
t6036: add a failed conflict detection case with symlink modify/modify
t6044: verify that merges expected to abort actually abort
index_has_changes(): avoid assuming operating on the_index
read-cache.c: move index_has_changes() from merge.c
l10n: zh_CN: review for git 2.18.0
t5407: fix test to cover intended arguments
apply: fix grammar error in comment
git-rebase--merge: modernize "git-$cmd" to "git $cmd"
Fix use of strategy options with interactive rebases
t3418: add testcase showing problems with rebase -i and strategy options
git-rebase: make --allow-empty-message the default
t3401: add directory rename testcases for rebase and am
git-rebase.txt: document behavioral differences between modes
directory-rename-detection.txt: technical docs on abilities and limitations
git-rebase.txt: address confusion between --no-ff vs --force-rebase
git-rebase: error out when incompatible options passed
t3422: new testcases for checking when incompatible options passed
filter-branch: skip commits present on --state-branch
git-rebase.sh: update help messages a bit
git-rebase.txt: document incompatible options
doc: fix typos in documentation and release notes
RelNotes 2.18: minor fix to entry about dynamically loading completions
t7406-submodule-update: fix broken &&-chains
t3200: clarify description of --set-upstream test
git-credential-netrc: fix exit status when tests fail
git-credential-netrc: use in-tree Git.pm for tests
l10n: zh_CN: for git v2.18.0 l10n round 1 to 3
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
Merge branch 'master' of https://github.com/vnwildman/git
Merge branch 'master' of git://github.com/alshopov/git-po
Merge branch 'fr_2.18_rnd3' of git://github.com/jnavila/git
l10n: vi.po(3608t): Update Vietnamese translation for v2.18.0 round 3
l10n: git.pot: v2.18.0 round 3 (1 new, 1 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
Merge branch 'master' of https://github.com/vnwildman/git
l10n: vi.po(3608t): Update Vietnamese translation for v2.18.0 round2
packfile: correct zlib buffer handling
RelNotes 2.18: clarify where directory rename detection applies
git-credential-netrc: remove use of "autodie"
merge-recursive: add pointer about unduly complex looking code
merge-recursive: rename conflict_rename_*() family of functions
merge-recursive: clarify the rename_dir/RENAME_DIR meaning
merge-recursive: align labels with their respective code blocks
merge-recursive: fix numerous argument alignment issues
merge-recursive: fix miscellaneous grammar error in comment
completion: correct zsh detection when run from git-completion.zsh
merge-submodule: reduce output verbosity
completion: collapse extra --no-.. options
tests: make forging GPG signed commits and tags more robust
t7510-signed-commit: use 'test_must_fail'
refspec: initalize `refspec_item` in `valid_fetch_refspec()`
refspec: add back a refspec_item_init() function
refspec: s/refspec_item_init/&_or_die/g
checkout & worktree: introduce checkout.defaultRemote
checkout: add advice for ambiguous "checkout <branch>"
builtin/checkout.c: use "ret" variable for return
checkout: pass the "num_matches" up to callers
checkout.c: change "unique" member to "num_matches"
checkout.c: introduce an *_INIT macro
checkout.h: wrap the arguments to unique_tracking_name()
checkout tests: index should be clean after dwim checkout
l10n: git.pot: v2.18.0 round 2 (144 new, 6 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
remote: doc typofix
update-ref --stdin: use skip_prefix()
t9104: kosherly remove remote refs
upload-pack: reject shallow requests that would return nothing
Merge branch 'fr_2.18_round1' of git://github.com/jnavila/git
l10n: vi(3470t): Updated Vietnamese translation for v2.18.0
fetch: do not pass ref-prefixes for fetch by exact SHA1
remote.txt: update documentation for 'update' command
RelNotes: remove duplicate release note
rebase: remove -p code from git-rebase--interactive.sh
rebase: use the new git-rebase--preserve-merges.sh
rebase: strip unused code in git-rebase--preserve-merges.sh
rebase: introduce a dedicated backend for --preserve-merges
note git-security@googlegroups.com in more places
SubmittingPatches: replace numbered attributes with names
l10n: git.pot: v2.18.0 round 1 (108 new, 14 removed)
Merge remote-tracking branch 'git-po/maint'
t990X: use '.git/objects' as 'deep inside .git' path
completion: complete general config vars in two steps
log-tree: allow to customize 'grafted' color
completion: support case-insensitive config vars
completion: keep other config var completion in camelCase
completion: drop the hard coded list of config vars
am: move advice.amWorkDir parsing back to advice.c
advice: keep config name in camelCase in advice_config[]
fsck: produce camelCase config key names
help: add --config to list all available config
fsck: factor out msg_id_info[] lazy initialization code
grep: keep all colors in an array
Add and use generic name->id mapping code for color slot parsing
completion: suppress some -no- options
parse-options: option to let --git-completion-helper show negative form
apply: add --intent-to-add
t2203: add a test about "diff HEAD" case
diff: turn --ita-invisible-in-index on by default
diff: ignore --ita-[in]visible-in-index when diffing worktree-to-tree
git-rebase--interactive: fix copy-paste mistake
t6036: prefer test_when_finished to manual cleanup in following test
t6036, t6042: prefer test_cmp to sequences of test
t6036, t6042: prefer test_path_is_file, test_path_is_missing
t6036, t6042: use test_line_count instead of wc -l
t6036, t6042: use test_create_repo to keep tests independent
rev-parse: check lookup'ed commit references for NULL
Use OPT_SET_INT_F() for cmdline option specification
import-tars: read overlong names from pax extended header
submodule: add --dissociate option to add/update commands
submodule: add --progress option to add command
submodule: clean up substitutions in script
unpack_trees_options: free messages when done
travis-ci: run gcc-8 on linux-gcc jobs
commit.h: delete 'util' field in struct commit
merge: use commit-slab in merge remote desc instead of commit->util
log: use commit-slab in prepare_bases() instead of commit->util
show-branch: note about its object flags usage
show-branch: use commit-slab for commit-name instead of commit->util
name-rev: use commit-slab for rev-name instead of commit->util
bisect.c: use commit-slab for commit weight instead of commit->util
revision.c: use commit-slab for show_source
sequencer.c: use commit-slab to associate todo items to commits
sequencer.c: use commit-slab to mark seen commits
shallow.c: use commit-slab for commit depth instead of commit->util
describe: use commit-slab for commit names instead of commit->util
blame: use commit-slab for blame suspects instead of commit->util
commit-slab: support shared commit-slab
commit-slab.h: code split
regex: do not call `regfree()` if compilation fails
config: let `config_store_data_clear()` handle `key`
config: let `config_store_data_clear()` handle `value_regex`
config: free resources of `struct config_store_data`
completion: allow to customize the completable command list
completion: add and use --list-cmds=alias
completion: add and use --list-cmds=nohelpers
Move declaration for alias.c to alias.h
completion: reduce completable command list
completion: let git provide the completable command list
command-list.txt: documentation and guide line
help: use command-list.txt for the source of guides
help: add "-a --verbose" to list all commands with synopsis
git: support --list-cmds=list-<category>
completion: implement and use --list-cmds=main,others
git --list-cmds: collect command list in a string_list
git.c: convert --list-* to --list-cmds=*
t9902-completion: exercise __git_complete_index_file() directly
completion: don't return with error from __gitcomp_file_direct()
merge-recursive: provide pair of `unpack_trees_{start,finish}()`
merge: setup `opts` later in `checkout_fast_forward()`
commit: add repository argument to lookup_commit_graft
merge-recursive: give notice when submodule commit gets fast-forwarded
commit: add repository argument to prepare_commit_graft
commit: add repository argument to read_graft_file
commit: add repository argument to register_commit_graft
commit: add repository argument to commit_graft_pos
object: move grafts to object parser
t7005-editor: get rid of the SPACES_IN_FILENAMES prereq
git-credential-netrc: accept gpg option
git-credential-netrc: adapt to test framework for git
commit.h: rearrange 'index' to shrink struct commit
column: fix off-by-one default width
refs: handle zero oid for pseudorefs
t1400: add tests around adding/deleting pseudorefs
refs.c: refer to "object ID", not "sha1", in error messages
pack-format.txt: more details on pack file format
get_short_oid: sort ambiguous objects by type, then SHA-1
t5516-fetch-push: fix broken &&-chain
t5516-fetch-push: fix 'push with dry-run' test
sha1-name.c: move around the collect_ambiguous() function
t5310-pack-bitmaps: make JGit tests work with GIT_TEST_SPLIT_INDEX
git-p4: change "commitish" typo to "committish"
sha1-array.h: align function arguments
sha1-name.c: remove stray newline
submodule: port submodule subcommand 'foreach' from shell to C
Remove common-cmds.h
help: use command-list.h for common command list
generate-cmds.sh: export all commands to command-list.h
generate-cmds.sh: factor out synopsis extract code
repository: fix free problem with repo_clear(the_repository)
lock_file: move static locks into functions
lock_file: make function-local locks non-static
refs.c: do not die if locking fails in `delete_pseudoref()`
refs.c: do not die if locking fails in `write_pseudoref()`
t/helper/test-write-cache: clean up lock-handling
submodule foreach: document variable '$displaypath'
submodule foreach: document '$sm_path' instead of '$path'
submodule foreach: correct '$path' in nested submodules from a subdirectory
object: add repository argument to grow_object_hash
t6050-replace: don't disable stdin for the whole test script
merge-recursive: fix check for skipability of working tree updates
merge-recursive: make "Auto-merging" comment show for other merges
merge-recursive: fix remainder of was_dirty() to use original index
merge-recursive: fix was_tracked() to quit lying with some renamed paths
t6046: testcases checking whether updates can be skipped in a merge
merge-recursive: avoid triggering add_cacheinfo error with dirty mod
merge-recursive: move more is_dirty handling to merge_content
merge-recursive: improve add_cacheinfo error handling
merge-recursive: avoid spurious rename/rename conflict from dir renames
directory rename detection: new testcases showcasing a pair of bugs
merge-recursive: fix remaining directory rename + dirty overwrite cases
merge-recursive: fix overwriting dirty files involved in renames
merge-recursive: avoid clobbering untracked files with directory renames
merge-recursive: apply necessary modifications for directory renames
merge-recursive: when comparing files, don't include trees
merge-recursive: check for file level conflicts then get new name
merge-recursive: add computation of collisions due to dir rename & merging
merge-recursive: check for directory level conflicts
merge-recursive: add get_directory_renames()
completion: fix misspelled config key aliasesfiletype
pack-objects: validation and documentation about unreachable options
doc: normalize [--options] to [options] in git-diff
doc: add note about shell quoting to revision.txt
git-svn: remove ''--add-author-from' for 'commit-diff'
doc: add '-d' and '-o' for 'git push'
doc: clarify ignore rules for git ls-files
doc: align 'diff --no-index' in text and synopsis
doc: improve formatting in githooks.txt
perf/bisect_run_script: disable codespeed
doc: keep first level section header in upper case
coccinelle: avoid wrong transformation suggestions from commit.cocci
unpack_trees: fix breakage when o->src_index != o->dst_index
worktree: teach "add" to check out existing branches
worktree: factor out dwim_branch function
worktree: improve message when creating a new worktree
worktree: remove extra members from struct add_opts
.gitattributes: add a diff driver for Python
.gitattributes: use the "perl" differ for Perl
.gitattributes: add *.pl extension for Perl
git-rebase--interactive: clarify arguments
perf/aggregate: use Getopt::Long for option parsing
packfile: add repository argument to packed_object_info
Make running git under other debugger-like programs easy
Makefile: quote $INSTLIBDIR when passing it to sed
Makefile: remove unused @@PERLLIBDIR@@ substitution variable
walker: drop fields of `struct walker` which are always 1
http-fetch: make `-a` standard behaviour
push: colorize errors
fast-export: fix regression skipping some merge-commits
merge-recursive: make a helper function for cleanup for handle_renames
merge-recursive: split out code for determining diff_filepairs
merge-recursive: make !o->detect_rename codepath more obvious
merge-recursive: fix leaks of allocated renames and diff_filepairs
merge-recursive: introduce new functions to handle rename logic
merge-recursive: move the get_renames() function
directory rename detection: tests for handling overwriting dirty files
directory rename detection: tests for handling overwriting untracked files
directory rename detection: miscellaneous testcases to complete coverage
directory rename detection: testcases exploring possibly suboptimal merges
directory rename detection: more involved edge/corner testcases
directory rename detection: testcases checking which side did the rename
directory rename detection: files/directories in the way of some renames
directory rename detection: partially renamed directory testcase/discussion
directory rename detection: testcases to avoid taking detection too far
directory rename detection: directory splitting testcases
directory rename detection: basic testcases
completion: make stash -p and alias for stash push -p
completion: stop showing 'save' for stash by default
submodule--helper: don't print null in 'submodule status'
git-submodule.txt: quote usage in monospace, drop backslash
git-[short]log.txt: unify quoted standalone --
doc: convert [\--] to [--]
doc: convert \--option to --option
docs/git-gc: fix minor rendering issue
completion: reduce overhead of clearing cached --options
completion: fill COMPREPLY directly when completing paths
completion: improve handling quoted paths in 'git ls-files's output
completion: remove repeated dirnames with 'awk' during path completion
t9902-completion: ignore COMPREPLY element order in some tests
completion: use 'awk' to strip trailing path components
completion: let 'ls-files' and 'diff-index' filter matching paths
completion: improve handling quoted paths on the command line
completion: support completing non-ASCII pathnames
completion: simplify prefix path component handling during path completion
completion: move __git_complete_index_file() next to its helpers
t9902-completion: add tests demonstrating issues with quoted pathnames
glossary: substitute "ancestor" for "direct ancestor" in 'push' description.
git{,-blame}.el: remove old bitrotting Emacs code
Makefile: add a DEVOPTS to get all of -Wextra
Makefile: add a DEVOPTS to suppress -Werror under DEVELOPER
Makefile: detect compiler and enable more warnings in DEVELOPER=1
connect.c: mark die_initial_contact() NORETURN
pack-objects: show some progress when counting kept objects
gc --auto: exclude base pack if not enough mem to "repack -ad"
gc: handle a corner case in gc.bigPackThreshold
gc: add gc.bigPackThreshold config
gc: add --keep-largest-pack option
repack: add --keep-pack option
t7700: have closing quote of a test at the beginning of line
ci: exercise the whole test suite with uncommon code in pack-objects
pack-objects: reorder members to shrink struct object_entry
pack-objects: shrink delta_size field in struct object_entry
pack-objects: shrink size field in struct object_entry
pack-objects: clarify the use of object_entry::size
pack-objects: don't check size when the object is bad
pack-objects: shrink z_delta_size field in struct object_entry
pack-objects: refer to delta objects by index instead of pointer
pack-objects: move in_pack out of struct object_entry
pack-objects: move in_pack_pos out of struct object_entry
pack-objects: use bitfield for object_entry::depth
pack-objects: use bitfield for object_entry::dfs_state
pack-objects: turn type and in_pack_type to bitfields
pack-objects: a bit of document about struct object_entry
read-cache.c: make $GIT_TEST_SPLIT_INDEX boolean
convert: add round trip check based on 'core.checkRoundtripEncoding'
convert: add tracing for 'working-tree-encoding' attribute
convert: check for detectable errors in UTF encodings
convert: add 'working-tree-encoding' attribute
utf8: add function to detect a missing UTF-16/32 BOM
utf8: add function to detect prohibited UTF-16/32 BOM
utf8: teach same_encoding() alternative UTF encoding names
Merge branch 'master' of https://github.com/ralfth/git-po-de into maint
l10n: TEAMS: remove inactive de team members
SubmittingPatches: mention the git contacts command
t/perf: add scripts to bisect performance regressions
perf/run: add --subsection option
Documentation: normalize spelling of 'normalised'
Documentation: fix several one-character-off spelling errors
t/helper: 'test-chmtime (--get|-g)' to print only the mtime
git-svn: avoid warning on undef readline()
ls-remote: create '--sort' option
git-svn: allow empty email-address using authors-prog and authors-file
branch --list: print useful info whilst interactive rebasing a detached HEAD
git-svn: search --authors-prog in PATH too
add -p: fix 2.17.0-rc* regression due to moved code
l10n: de.po: translate 132 new messages
trace.c: export trace_setup_key
upload-pack: disable object filtering when disabled by config
ref-filter: libify get_ref_atom_value()
ref-filter: add return value to parsers
ref-filter: change parsing function error handling
ref-filter: add return value && strbuf to handlers
ref-filter: start adding strbufs with errors
ref-filter: add shortcut to work with strbufs
l10n: zh_CN: review for git v2.17.0 l10n round 1
l10n: zh_CN: for git v2.17.0 l10n round 1
test: avoid pipes in git related commands for test
git-stash.txt: remove extra square bracket
doc hash-function-transition: clarify what SHAttered means
doc hash-function-transition: clarify how older gits die on NewHash
test_must_be_empty: simplify file existence check
perf/aggregate: add --sort-by=regression option
perf/aggregate: add display_dir()
t/helper: merge test-write-cache into test-tool
t/helper: merge test-wildmatch into test-tool
t/helper: merge test-urlmatch-normalization into test-tool
t/helper: merge test-subprocess into test-tool
t/helper: merge test-submodule-config into test-tool
t/helper: merge test-string-list into test-tool
t/helper: merge test-strcmp-offset into test-tool
t/helper: merge test-sigchain into test-tool
t/helper: merge test-sha1-array into test-tool
t/helper: merge test-scrap-cache-tree into test-tool
t/helper: merge test-run-command into test-tool
t/helper: merge test-revision-walking into test-tool
t/helper: merge test-regex into test-tool
t/helper: merge test-ref-store into test-tool
t/helper: merge test-read-cache into test-tool
t/helper: merge test-prio-queue into test-tool
t/helper: merge test-path-utils into test-tool
t/helper: merge test-online-cpus into test-tool
t/helper: merge test-mktemp into test-tool
t/helper: merge (unused) test-mergesort into test-tool
t/helper: merge (unused) test-match-trees into test-tool
t/helper: merge test-index-version into test-tool
t/helper: merge test-hashmap into test-tool
t/helper: merge test-genrandom into test-tool
t/helper: merge test-example-decorate into test-tool
t/helper: merge test-dump-split-index into test-tool
t/helper: merge test-dump-cache-tree into test-tool
t/helper: merge test-drop-caches into test-tool
t/helper: merge (unused) test-delta into test-tool
t/helper: merge test-date into test-tool
t/helper: merge test-ctype into test-tool
t/helper: merge test-config into test-tool
t/helper: merge test-lazy-init-name-hash into test-tool
t/helper: merge test-sha1 into test-tool
t/helper: merge test-chmtime into test-tool
t/helper: add an empty test-tool program
Remove contrib/examples/*
packfile: keep prepare_packed_git() private
sha1_file: allow sha1_loose_object_info to handle arbitrary repositories
sha1_file: allow map_sha1_file_1 to handle arbitrary repositories
filter-branch: fix errors caused by refs that point at non-committish
completion: use __gitcomp_builtin in _git_cherry
completion: use __gitcomp_builtin in _git_ls_tree
completion: delete option-only completion commands
completion: add --option completion for most builtin commands
completion: factor out _git_xxx calling code
completion: mention the oldest version we need to support
git.c: add hidden option --list-parseopt-builtins
git.c: move cmd_struct declaration up
Merge branch 'fr_v2.17.0' of git://github.com/jnavila/git
repository.h: add comment and clarify repo_set_gitdir
parse-options: do not show usage upon invalid option value
completion: clear cached --options when sourcing the completion script
stash: drop superfluos pathspec parameter
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
Merge branch 'master' of https://github.com/Softcatala/git-po
stash push -u: don't create empty stash
stash push: avoid printing errors
Merge branch 'fr_v2.17.0' of git://github.com/jnavila/git
Merge branch 'master' of https://github.com/vnwildman/git
Merge branch 'master' of git://github.com/alshopov/git-po
l10n: vi.po(3376t): Updated Vietnamese translation for v2.17
Merge remote-tracking branch 'git-po/maint'
l10n: git.pot: v2.17.0 round 1 (132 new, 44 removed)
t/t3200: fix a typo in a test description
Makefile: optionally symlink libexec/git-core binaries to bin/git
Makefile: add a gitexecdir_relative variable
Makefile: fix broken bindir_relative variable
worktree prune: improve prune logic when worktree is moved
worktree: delete dead code
gc.txt: more details about what gc does
shortlog: disallow left-over arguments outside repo
Makefile: make USE_LIBPCRE=YesPlease mean v2, not v1
configure: detect redundant --with-libpcre & --with-libpcre1
configure: fix a regression in PCRE v1 detection
shortlog: add usage-string for stdin-reading
git-shortlog.txt: reorder usages
strbuf: add a case insensitive starts_with()
t9402-git-cvsserver-refs: don't check the stderr of a subshell
t9400-git-cvsserver-server: don't rely on the output of 'test_cmp'
git manpage: note git-security@googlegroups.com
userdiff.c: add C# async keyword in diff pattern
completion: more subcommands in _git_notes()
completion: complete --{reuse,reedit}-message= for all notes subcmds
completion: simplify _git_notes
completion: don't set PARSE_OPT_NOCOMPLETE on --rerere-autoupdate
object.h: realign object flag allocation comment
object.h: update flag allocation comment
send-email: support separate Reply-To address
send-email: rename variable for clarity
repository: delete ignore_env member
sha1_file.c: move delayed getenv(altdb) back to setup_git_env()
repository.c: delete dead functions
repository.c: move env-related setup code back to environment.c
repository: initialize the_repository in main()
perl Git::LoadCPAN: emit better errors under NO_PERL_CPAN_FALLBACKS
perl: move the perl/Git/FromCPAN tree to perl/FromCPAN
perl: generalize the Git::LoadCPAN facility
perl: move CPAN loader wrappers to another namespace
perl: update our copy of Mail::Address
perl: update our ancient copy of Error.pm
git-send-email: unconditionally use Net::{SMTP,Domain}
Git.pm: hard-depend on the File::{Temp,Spec} modules
gitweb: hard-depend on the Digest::MD5 5.8 module
git-gui: bind CTRL/CMD+numpad ENTER to do_commit
userdiff: add built-in pattern for golang
write_locked_index(): add flag to avoid writing unchanged index
commit: run git gc --auto just before the post-commit hook
travis-ci: run tests with '-x' tracing
t/README: add a note about don't saving stderr of compound commands
t1510-repo-setup: mark as untraceable with '-x'
t9903-bash-prompt: don't check the stderr of __git_ps1()
t5570-git-daemon: don't check the stderr of a subshell
t5526: use $TRASH_DIRECTORY to specify the path of GIT_TRACE log file
t5500-fetch-pack: don't check the stderr of a subshell
t3030-merge-recursive: don't check the stderr of a subshell
sequencer: do not roll back lockfile unnecessarily
merge: always roll back lock in `checkout_fast_forward()`
merge-recursive: always roll back lock in `merge_recursive_generic()`
t5536: simplify checking of messages output to stderr
diff: add --compact-summary
Git.pm: add the "use warnings" pragma
Git.pm: remove redundant "use strict" from sub-package
perl: *.pm files should not have the executable bit
sequencer: always roll back lock in `do_recursive_merge()`
sequencer: make lockfiles non-static
docs/pretty-formats: fix typo '% <(<N>)' -> '%<|(<N>)'
merge-recursive: ensure we write updates for directory-renamed file
merge-recursive: avoid spurious rename/rename conflict from dir renames
directory rename detection: new testcases showcasing a pair of bugs
merge-recursive: fix remaining directory rename + dirty overwrite cases
merge-recursive: fix overwriting dirty files involved in renames
merge-recursive: avoid clobbering untracked files with directory renames
merge-recursive: apply necessary modifications for directory renames
t1507-rev-parse-upstream: don't check the stderr of a shell function
t: add means to disable '-x' tracing for individual test scripts
t: prevent '-x' tracing from interfering with test helpers' stderr
subtree: fix add and pull for GPG-signed commits
Documentation/gitsubmodules.txt: avoid non-ASCII apostrophes
config: change default of `pager.config` to "on"
config: respect `pager.config` in list/get-mode only
t7006: add tests for how git config paginates
ref-filter: get rid of goto
ref-filter: get rid of duplicate code
Merge branch 'merge' of https://github.com/ChrisADR/git-po into maint
strbuf: add xstrdup_toupper()
strbuf: remove unnecessary NUL assignment in xstrdup_tolower()
Makefile: generate Git(3pm) as dependency of the 'doc' and 'man' targets
merge-recursive: when comparing files, don't include trees
merge-recursive: check for file level conflicts then get new name
merge-recursive: add computation of collisions due to dir rename & merging
merge-recursive: check for directory level conflicts
merge-recursive: add get_directory_renames()
merge-recursive: make a helper function for cleanup for handle_renames
merge-recursive: split out code for determining diff_filepairs
merge-recursive: make !o->detect_rename codepath more obvious
merge-recursive: fix leaks of allocated renames and diff_filepairs
merge-recursive: introduce new functions to handle rename logic
merge-recursive: move the get_renames() function
directory rename detection: tests for handling overwriting dirty files
directory rename detection: tests for handling overwriting untracked files
directory rename detection: miscellaneous testcases to complete coverage
directory rename detection: testcases exploring possibly suboptimal merges
directory rename detection: more involved edge/corner testcases
directory rename detection: testcases checking which side did the rename
directory rename detection: files/directories in the way of some renames
directory rename detection: partially renamed directory testcase/discussion
directory rename detection: testcases to avoid taking detection too far
directory rename detection: directory splitting testcases
directory rename detection: basic testcases
am: support --quit
t6300-for-each-ref: fix "more than one quoting style" tests
rebase: introduce and use pseudo-ref REBASE_HEAD
rebase: add --show-current-patch
am: add --show-current-patch
worktree remove: allow it when $GIT_WORK_TREE is already gone
worktree remove: new command
worktree move: refuse to move worktrees with submodules
worktree move: accept destination as directory
worktree move: new command
worktree.c: add update_worktree_location()
t: document 'test_must_fail ok=<signal-name>'
update-index doc: note the caveat with "could not open..."
update-index doc: note a fixed bug in the untracked cache
fetch: make the --prune-tags work with <url>
fetch: add a --prune-tags option and fetch.pruneTags config
fetch tests: add scaffolding for the new fetch.pruneTags
git-fetch & config doc: link to the new PRUNING section
git remote doc: correct dangerous lies about what prune does
git fetch doc: add a new section to explain the ins & outs of pruning
fetch tests: fetch <url> <spec> as well as fetch [<remote>]
fetch tests: expand case/esac for later change
fetch tests: double quote a variable for interpolation
fetch tests: test --prune and refspec interaction
fetch tests: add a tag to be deleted to the pruning tests
fetch tests: re-arrange arguments for future readability
fetch tests: refactor in preparation for testing tag pruning
remote: add a macro for "refs/tags/*:refs/tags/*"
fetch: stop accessing "remote" variable indirectly
fetch: trivially refactor assignment to ref_nr
fetch: don't redundantly NULL something calloc() gave us
completion: use __gitcomp_builtin in _git_worktree
completion: use __gitcomp_builtin in _git_tag
completion: use __gitcomp_builtin in _git_status
completion: use __gitcomp_builtin in _git_show_branch
completion: use __gitcomp_builtin in _git_rm
completion: use __gitcomp_builtin in _git_revert
completion: use __gitcomp_builtin in _git_reset
completion: use __gitcomp_builtin in _git_replace
remote: force completing --mirror= instead of --mirror
completion: use __gitcomp_builtin in _git_remote
completion: use __gitcomp_builtin in _git_push
completion: use __gitcomp_builtin in _git_pull
completion: use __gitcomp_builtin in _git_notes
completion: use __gitcomp_builtin in _git_name_rev
completion: use __gitcomp_builtin in _git_mv
completion: use __gitcomp_builtin in _git_merge_base
completion: use __gitcomp_builtin in _git_merge
completion: use __gitcomp_builtin in _git_ls_remote
completion: use __gitcomp_builtin in _git_ls_files
completion: use __gitcomp_builtin in _git_init
completion: use __gitcomp_builtin in _git_help
completion: use __gitcomp_builtin in _git_grep
completion: use __gitcomp_builtin in _git_gc
completion: use __gitcomp_builtin in _git_fsck
completion: use __gitcomp_builtin in _git_fetch
completion: use __gitcomp_builtin in _git_difftool
completion: use __gitcomp_builtin in _git_describe
completion: use __gitcomp_builtin in _git_config
completion: use __gitcomp_builtin in _git_commit
completion: use __gitcomp_builtin in _git_clone
completion: use __gitcomp_builtin in _git_clean
completion: use __gitcomp_builtin in _git_cherry_pick
completion: use __gitcomp_builtin in _git_checkout
completion: use __gitcomp_builtin in _git_branch
completion: use __gitcomp_builtin in _git_apply
completion: use __gitcomp_builtin in _git_am
completion: use __gitcomp_builtin in _git_add
git-completion.bash: introduce __gitcomp_builtin
parse-options: let OPT__FORCE take optional flags argument
parse-options: add OPT_xxx_F() variants
parse-options: support --git-completion-helper
t: make 'test_i18ngrep' more informative on failure
t: validate 'test_i18ngrep's parameters
t: move 'test_i18ncmp' and 'test_i18ngrep' to 'test-lib-functions.sh'
t5536: let 'test_i18ngrep' read the file without redirection
t5510: consolidate 'grep' and 'test_i18ngrep' patterns
t4001: don't run 'git status' upstream of a pipe
t6022: don't run 'git merge' upstream of a pipe
t5812: add 'test_i18ngrep's missing filename parameter
t5541: add 'test_i18ngrep's missing filename parameter
dir.c: ignore paths containing .git when invalidating untracked cache
reset --hard: make use of the pretty machinery
diff.c: refactor pprint_rename() to use strbuf
perf/aggregate: sort JSON fields in output
perf/aggregate: add --reponame option
perf/aggregate: add --subsection option
trace: measure where the time is spent in the index-heavy operations
gitignore.txt: elaborate shell glob syntax
format-patch: reduce patch diffstat width to 72
dir.c: stop ignoring opendir() error in open_cached_dir()
wildmatch test: mark test as EXPENSIVE_ON_WINDOWS
test-lib: add an EXPENSIVE_ON_WINDOWS prerequisite
wildmatch test: create & test files on disk in addition to in-memory
wildmatch test: perform all tests under all wildmatch() modes
wildmatch test: use test_must_fail, not ! for test-wildmatch
wildmatch test: remove dead fnmatch() test code
wildmatch test: use a paranoia pattern from nul_match()
wildmatch test: don't try to vertically align our output
wildmatch test: use more standard shell style
wildmatch test: indent with tabs, not spaces
travis-ci: don't fail if user already exists on 32 bit Linux build job
travis-ci: don't run the test suite as root in the 32 bit Linux build
travis-ci: don't repeat the path of the cache directory
travis-ci: use 'set -e' in the 32 bit Linux build job
travis-ci: use 'set -x' for the commands under 'su' in the 32 bit Linux build
sha1_file: rename hash_sha1_file_literally
sha1_file: convert write_loose_object to object_id
sha1_file: convert force_object_loose to object_id
sha1_file: convert write_sha1_file to object_id
notes: convert write_notes_tree to object_id
notes: convert combine_notes_* to object_id
commit: convert commit_tree* to object_id
match-trees: convert splice_tree to object_id
cache: clear whole hash buffer with oidclr
sha1_file: convert hash_sha1_file to object_id
dir: convert struct sha1_stat to use object_id
sha1_file: convert pretend_sha1_file to object_id
completion: fix completing merge strategies on non-C locales
format-patch: keep cover-letter diffstat wrapped in 72 columns
http-push: improve error log
clang-format: adjust penalty for return type line break
dir.c: fix missing dir invalidation in untracked code
dir.c: avoid stat() in valid_cached_dir()
status: add a failing test showing a core.untrackedCache bug
worktree.c: add validate_worktree()
mailinfo: avoid segfault when can't open files
read-cache: don't write index twice if we can't write shared index
mru: Replace mru.[ch] with list.h implementation
Use MOVE_ARRAY
merge-recursive: add explanation for src_entry and dst_entry
merge-recursive: fix logic ordering issue
Tighten and correct a few testcases for merging and cherry-picking
sha1_file: improve sha1_file_name() perfs
run-command.c: print new cwd in trace_run_command()
run-command.c: print env vars in trace_run_command()
run-command.c: print program 'git' when tracing git_cmd mode
run-command.c: introduce trace_run_command()
travis: run tests with GIT_TEST_SPLIT_INDEX
split-index: don't write cache tree with null oid entries
read-cache: fix reading the shared index for other repos
sha1_file: remove static strbuf from sha1_file_name()
diff.c: flush stdout before printing rename warnings
read-cache.c: move tempfile creation/cleanup out of write_shared_index
read-cache.c: change type of "temp" in write_shared_index()
add--interactive: ignore submodule changes except HEAD
trace.c: move strbuf_release() out of print_trace_line()
Doc/git-submodule: improve readability and grammar of a sentence
Doc/gitsubmodules: make some changes to improve readability and syntax
submodule: port submodule subcommand 'deinit' from shell to C
submodule: port submodule subcommand 'sync' from shell to C
l10n: de.po: translate 72 new messages
l10n: de.po: improve messages when a branch starts to track another ref
RelNotes: minor typofix
Documentation/git-worktree.txt: add missing `
cat-file doc: document that -e will return some output
l10n: TEAMS: add zh_CN team members
l10n: zh_CN: for git v2.16.0 l10n round 2
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
Merge branch 'russian-l10n' of https://github.com/DJm00n/git-po-ru
doc/read-tree: remove obsolete remark
bisect: debug: convert struct object to object_id
l10n: ru.po: update Russian translation
Merge branch 'ko/merge-l10n' of https://github.com/git-l10n-ko/git-l10n-ko
oidset: don't return value from oidset_init
travis-ci: build Git during the 'script' phase
stash: don't delete untracked files that match pathspec
Merge branch '2.16' of https://github.com/ChrisADR/git-po
Merge branch 'fr_2.16-rc1' of git://github.com/jnavila/git
l10n: vi.po(3288t): Updated Vietnamese translation for v2.16.0 round 2
l10n: git.pot: v2.16.0 round 2 (8 new, 4 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
Merge branch '2.16' of https://github.com/ChrisADR/git-po
Merge branch 'fr_2.16' of git://github.com/jnavila/git
perf/run: read GIT_PERF_REPO_NAME from perf.repoName
perf/run: learn to send output to codespeed server
perf/run: learn about perf.codespeedOutput
perf/run: add conf_opts argument to get_var_from_env_or_config()
perf/aggregate: implement codespeed JSON output
perf/aggregate: refactor printing results
perf/aggregate: fix checking ENV{GIT_PERF_SUBSECTION}
perf: amend the grep tests to test grep.threads
bisect: fix a regression causing a segfault
travis-ci: check that all build artifacts are .gitignore-d
travis-ci: don't store P4 and Git LFS in the working tree
perl: treat PERLLIB_EXTRA as an extra path again
travis-ci: record and skip successfully built trees
travis-ci: create the cache directory early in the build process
travis-ci: print the "tip of branch is exactly at tag" message in color
Merge branch 'master' of git://github.com/alshopov/git-po
Merge branch 'maint' of git://github.com/git-l10n/git-po
l10n: git.pot: v2.16.0 round 1 (64 new, 25 removed)
Makefile: NO_OPENSSL=1 should no longer imply BLK_SHA1=1
perl: avoid *.pmc and fix Error.pm further
wt-status.c: handle worktree renames
wt-status.c: rename rename-related fields in wt_status_change_data
wt-status.c: catch unhandled diff status codes
wt-status.c: coding style fix
Use DIFF_DETECT_RENAME for detect_rename assignments
t2203: test status output with porcelain v2 format
travis-ci: only print test failures if there are test results available
travis-ci: save prove state for the 32 bit Linux build
travis-ci: don't install default addon packages for the 32 bit Linux build
travis-ci: fine tune the use of 'set -x' in 'ci/*' scripts
commit: add support for --fixup <commit> -m"<extra message>"
merge-recursive: avoid incorporating uncommitted changes in a merge
move index_has_changes() from builtin/am.c to merge.c for reuse
t6044: recursive can silently incorporate dirty changes in a merge
commit doc: document that -c, -C, -F and --fixup with -m error
rebase: rebasing can also be done when HEAD is detached
rebase: distinguish user input by quoting it
rebase: consistently use branch_name variable
Doc/check-ref-format: clarify information about @{-N} syntax
travis-ci: use 'set -x' in 'ci/*' scripts for extra tracing output
travis-ci: set GIT_TEST_HTTPD in 'ci/lib-travisci.sh'
travis-ci: move setting environment variables to 'ci/lib-travisci.sh'
travis-ci: introduce a $jobname variable for 'ci/*' scripts
format: create docs for pretty.h
format: create pretty.h file
diff: add tests for --relative without optional prefix value
diff: use skip_to_optional_arg_default()
diff: use skip_to_optional_arg()
index-pack: use skip_to_optional_arg()
git-compat-util: introduce skip_to_optional_arg()
Makefile: replace perl/Makefile.PL with simple make rules
sha1dc_git.h: re-arrange an ifdef chain for a subsequent change
Makefile: under "make dist", include the sha1collisiondetection submodule
Makefile: don't error out under DC_SHA1_EXTERNAL if DC_SHA1_SUBMODULE=auto
builtin/branch: strip refs/heads/ using skip_prefix
branch: update warning message shown when copying a misnamed branch
branch: group related arguments of create_branch()
branch: improve documentation and naming of create_branch() parameters
launch_editor(): indicate that Git waits for user input
setup.c: fix comment about order of .git directory discovery
add worktree.guessRemote config option
worktree: add --guess-remote flag to add subcommand
t3404: add test case for abbreviated commands
rebase -i: learn to abbreviate command names
rebase -i -x: add exec commands via the rebase--helper
rebase -i: update functions to use a flags parameter
rebase -i: replace reference to sha1 with oid
rebase -i: refactor transform_todo_ids
list-objects-filter-options: fix 'keword' typo in comment
strbuf: remove unused stripspace function alias
Merge branch '2.15.1' of https://github.com/ChrisADR/git-po into maint
progress: drop delay-threshold code
refactor "dumb" terminal determination
rebase -i: set commit to null in exec commands
Documentation: use preferred name for the 'todo list' script
Documentation: move rebase.* configs to new file
Doc/checkout: checking out using @{-N} can lead to detached state
t/README: document test_cmp_rev
t/README: remove mention of adding copyright notices
merge-recursive: ignore_case shouldn't reject intentional removals
worktree: make add <path> <branch> dwim
worktree: add --[no-]track option to the add subcommand
worktree: add can be created from any commit-ish
checkout: factor out functions to new lib file
grep: fix segfault under -P + PCRE2 <=10.30 + (*NO_JIT)
test-lib: add LIBPCRE1 & LIBPCRE2 prerequisites
stash: learn to parse -m/--message like commit does
Git/Packet.pm: use 'if' instead of 'unless'
Git/Packet: clarify that packet_required_key_val_read allows EOF
generate-cmdlist: avoid non-deterministic output
doc: prefer 'stash push' over 'stash save'
log: add option to choose which refs to decorate
connect: correct style of C-style comment
ssh: 'simple' variant does not support --port
ssh: 'simple' variant does not support -4/-6
ssh: 'auto' variant to select between 'ssh' and 'simple'
connect: split ssh option computation to its own function
connect: split ssh command line options into separate function
connect: split git:// setup into a separate function
connect: move no_fork fallback to git_tcp_connect
ssh test: make copy_ssh_wrapper_as clean up after itself
git-rebase: clean up dashed-usages in messages
branch: change default of `pager.branch` to "on"
branch: respect `pager.branch` in list-mode only
t7006: add tests for how git branch paginates
sequencer: show rename progress during cherry picks
diff: remove silent clamp of renameLimit
progress: fix progress meters when dealing with lots of work
merge-recursive: handle addition of submodule on our side of history
builtin/branch: remove redundant check for HEAD
sequencer: warn when internal merge may be suboptimal due to renameLimit
reduce_heads: fix memory leaks
builtin/merge-base: free commit lists
Git/Packet.pm: extract parts of t0021/rot13-filter.pl for reuse
t0021/rot13-filter: add capability functions
t0021/rot13-filter: refactor checking final lf
t0021/rot13-filter: add packet_initialize()
t0021/rot13-filter: improve error message
t0021/rot13-filter: improve 'if .. elsif .. else' style
t0021/rot13-filter: refactor packet reading functions
t0021/rot13-filter: fix list comparison
remote-mediawiki: allow fetching namespaces with spaces
bisect: fix memory leak when returning best element
bisect: fix off-by-one error in `best_bisection_sorted()`
bisect: fix memory leak in `find_bisection()`
bisect: change calling-convention of `find_bisection()`
mailmap: use Kaartic Sivaraam's new address
travis-ci: don't build Git for the static analysis job
travis-ci: fix running P4 and Git LFS tests in Linux build jobs
grep: take the read-lock when adding a submodule
sequencer: pass absolute GIT_DIR to exec commands
docs: fix formatting of rev-parse's --show-superproject-working-tree
rev-list-options.txt: use correct directional reference
stash: remove now superfluos help for "stash push"
stash: mark "git stash save" deprecated in the man page
stash: replace "git stash save" with "git stash push" in the documentation
Merge branch 'jx/zh_CN-proposed' of github.com:jiangxin/git
l10n: zh_CN: review for git v2.15.0 l10n round 2
l10n: zh_CN: for git v2.15.0 l10n round 2
Merge branch 'master' of https://github.com/ralfth/git-po-de
builtin/push.c: add push.pushOption config
l10n: de.po: translate 70 new messages
l10n: ru.po: update Russian translation
Merge branch 'master' of https://github.com/vnwildman/git
Merge branch 'l10n_fr_v2.15.0r2' of git://github.com/jnavila/git
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
Merge branch 'master' of https://github.com/Softcatala/git-po
Merge branch 'translation' of https://github.com/ChrisADR/git-po
l10n: vi.po(3245t): Updated Vietnamese translation for v2.15.0 round 2
sequencer.c: unify an error message
l10n: git.pot: v2.15.0 round 2 (2 new, 2 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
sequencer.c: fix and unify error messages in rearrange_squash()
l10n: ru.po: update Russian translation
Merge branch 'master' of git://github.com/alshopov/git-po
Merge branch 'master' of https://github.com/vnwildman/git
l10n: vi.po(3245t): Updated Vietnamese translation for v2.15.0
l10n: es.po: Update translation v2.15.0 round 1
Merge branch 'maint' of git://github.com/git-l10n/git-po
l10n: git.pot: v2.15.0 round 1 (68 new, 36 removed)
submodule: port submodule subcommand 'status' from shell to C
submodule--helper: introduce for_each_listed_submodule()
read_cache: roll back lock in `update_index_if_able()`
read-cache: leave lock in right state in `write_locked_index()`
read-cache: drop explicit `CLOSE_LOCK`-flag
entry.c: check if file exists after checkout
bisect--helper: `is_expected_rev` & `check_expected_revs` shell function in C
t6030: explicitly test for bisection cleanup
bisect--helper: `bisect_clean_state` shell function in C
bisect--helper: `write_terms` shell function in C
bisect--helper: rewrite `check_term_format` shell function in C
bisect--helper: use OPT_CMDMODE instead of OPT_BOOL
cache.h: document `write_locked_index()`
apply: remove `newfd` from `struct apply_state`
apply: move lockfile into `apply_state`
cache-tree: simplify locking logic
checkout-index: simplify locking logic
tempfile: fix documentation on `delete_tempfile()`
lockfile: fix documentation on `close_lock_file_gently()`
treewide: prefer lockfiles on the stack
sha1_file: do not leak `lock_file`
entry.c: update cache entry only for existing files
strbuf doc: reuse after strbuf_release is fine
http-push: fix construction of hex value from path
setup: update error message to be more meaningful
branch: change the error messages to be more meaningful
builtin/: add UNLEAKs
submodule--helper: introduce get_submodule_displaypath()
mru: use double-linked list from list.h
technical doc: add a design doc for hash function transition
docs: improve discoverability of exclude pathspec
doc: camelCase the config variables to improve readability
parse-options: only insert newline in help text if needed
parse-options: write blank line to correct output stream
t0040,t1502: Demonstrate parse_options bugs
userdiff: fix HTML hunk header regexp
pack-bitmap[-write]: use `object_array_clear()`, don't leak
object_array: add and use `object_array_pop()`
object_array: use `object_array_clear()`, not `free()`
leak_pending: use `object_array_clear()`, not `free()`
commit: fix memory leak in `reduce_heads()`
builtin/commit: fix memory leak in `prepare_index()`
travis-ci: fix "skip_branch_tip_with_tag()" string comparison
pathspec doc: parse_pathspec does not maintain references to args
rev-parse: rev-parse: add --is-shallow-repository
git-rebase: don't ignore unexpected command line arguments
rev-parse parseopt: interpret any whitespace as start of help text
rev-parse parseopt: do not search help text for flag chars
t1502: demonstrate rev-parse --parseopt option mis-parsing
t/README: fix typo and grammatically improve a sentence
commit-template: change a message to be more intuitive
doc: fix minor typos (extra/duplicated words)
pack: make packed_git_mru global a value instead of a pointer
help: change a message to be more precise
refs: strip out not allowed flags from ref_transaction_update
travis-ci: skip a branch build if equal tag is present
travis-ci: move Travis CI code into dedicated scripts
refs/files-backend: add `refname`, not "HEAD", to list
refs/files-backend: correct return value in lock_ref_for_update
refs/files-backend: fix memory leak in lock_ref_for_update
refs/files-backend: add longer-scoped copy of string to list
read-cache: fix index corruption with index v4
config: remove git_config_maybe_bool
Documentation: mention that `eol` can change the dirty status of paths
pkt-line: re-'static'-ify buffer in packet_write_fmt_1()
l10n: es.po: spanish added to TEAMS
l10n: es.po: initial Spanish version git 2.14.0
sha1-lookup: remove sha1_entry_pos() from header file
refs.c: reindent get_submodule_ref_store()
refs.c: remove fallback-to-main-store code get_submodule_ref_store()
rev-list: expose and document --single-worktree
revision.c: --reflog add HEAD reflog from all worktrees
files-backend: make reflog iterator go through per-worktree reflog
revision.c: --all adds HEAD from all worktrees
refs: remove dead for_each_*_submodule()
refs.c: move for_each_remote_ref_submodule() to submodule.c
revision.c: use refs_for_each*() instead of for_each_*_submodule()
refs: add refs_head_ref()
refs: move submodule slash stripping code to get_submodule_ref_store
refs.c: refactor get_submodule_ref_store(), share common free block
revision.c: --indexed-objects add objects from all worktrees
revision.c: refactor add_index_objects_to_pending()
refs.c: use is_dir_sep() in resolve_gitlink_ref()
revision.h: new flag in struct rev_info wrt. worktree-related refs
branch: fix branch renaming not updating HEADs correctly
convert: display progress for filtered objects that have been delayed
treewide: correct several "up-to-date" to "up to date"
Documentation/user-manual: update outdated example output
vcs-svn: move remaining repo_tree functions to fast_export.h
vcs-svn: remove repo_delete wrapper function
vcs-svn: remove custom mode constants
vcs-svn: remove more unused prototypes and declarations
ThreadSanitizer: add suppressions
strbuf_setlen: don't write to strbuf_slopbuf
pack-objects: take lock before accessing `remaining`
convert: always initialize attr_action in convert_attrs
sha1_file: convert index_stream to struct object_id
sha1_file: convert hash_sha1_file_literally to struct object_id
sha1_file: convert index_fd to struct object_id
sha1_file: convert index_path to struct object_id
read-cache: convert to struct object_id
builtin/hash-object: convert to struct object_id
doc/interpret-trailers: fix "the this" typo
commit: rewrite read_graft_line
commit: allocate array using object_id size
commit: replace the raw buffer with strbuf in read_graft_line
sha1_file: fix definition of null_sha1
branch: quote branch/ref names to improve readability
builtin/branch: stop supporting the "--set-upstream" option
t3200: cleanup cruft of a test
sub-process: print the cmd when a capability is unsupported
doc: clarify "config --bool" behaviour with empty string
hook: use correct logical variable
parse_decoration_style: drop unused argument `var`
treewide: deprecate git_config_maybe_bool, use git_parse_maybe_bool
config: make git_{config,parse}_maybe_bool equivalent
config: introduce git_parse_maybe_bool_text
t5334: document that git push --signed=1 does not work
Doc/git-{push,send-pack}: correct --sign= to --signed=
tests: don't give unportable ">" to "test" built-in, use -gt
git.c: ignore pager.* when launching builtin as dashed external
tag: change default of `pager.tag` to "on"
tag: respect `pager.tag` in list-mode only
t7006: add tests for how git tag paginates
git.c: provide setup_auto_pager()
git.c: let builtins opt for handling `pager.foo` themselves
builtin.h: take over documentation from api-builtin.txt
l10n: zh_CN: review for git v2.14.0 l10n
l10n: zh_CN: for git v2.14.0 l10n round 2
Merge branch 'russian-l10n' of https://github.com/DJm00n/git-po-ru
l10n: ru.po: update Russian translation
doc: remove unsupported parameter from patch-id
Merge branch 'master' of https://github.com/ralfth/git-po-de
Merge branch 'fr_l10n_v2.14.0rnd2' of git://github.com/jnavila/git
contrib/rerere-train: optionally overwrite existing resolutions
l10n: de.po: update German translation
doc: add missing values "none" and "default" for diff.wsErrorHighlight
Merge branch 'master' of https://github.com/Softcatala/git-po
Merge branch 'master' of git://github.com/alshopov/git-po
l10n: vi.po (3213t): Updated 9 new strings
refs: use skip_prefix() in ref_is_hidden()
blame: fix memory corruption scrambling revision name in error message
l10n: git.pot: v2.14.0 round 2 (9 new, 2 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
RelNotes: mention "sha1dc: optionally use sha1collisiondetection as a submodule"
RelNotes: mention "log: make --regexp-ignore-case work with --perl-regexp"
RelNotes: mention "log: add -P as a synonym for --perl-regexp"
doc: reformat the paragraph containing the 'cut-line'
doc: camelCase the i18n config variables to improve readability
commit: check for empty message before the check for untouched template
rebase: make resolve message clearer for inexperienced users
l10n: vi.po(3206t): Update Vietnamese translation
l10n: git.pot: v2.14.0 round 1 (34 new, 23 removed)
Merge branch 'maint' of git://github.com/git-l10n/git-po
git-p4: filter for {'code':'info'} in p4CmdList
git-p4: parse marshal output "p4 -G" in p4 changes
git-p4: git-p4 tests with p4 triggers
hook: add a simple first example
hook: add sign-off using "interpret-trailers"
hook: name the positional variables
hook: cleanup script
pre-rebase hook: capture documentation in a <<here document
l10n: de.po: fix typo
doc: correct a mistake in an illustration
builtin/commit.c: fix a typo in the comment
sha1dc: optionally use sha1collisiondetection as a submodule
sha1dc: update from upstream
strbuf: change an always NULL/"" strbuf_addftime() param to bool
convert: add "status=delayed" to filter process protocol
convert: refactor capabilities negotiation
grep: remove redundant REG_NEWLINE when compiling fixed regex
grep: remove regflags from the public grep_opt API
grep: remove redundant and verbose re-assignments to 0
grep: remove redundant "fixed" field re-assignment to 0
grep: adjust a redundant grep pattern type assignment
grep: remove redundant double assignment to 0
commit-template: distinguish status information unconditionally
commit-template: remove outdated notice about explicit paths
convert: move multiple file filter error handling to separate function
convert: put the flags field before the flag itself for consistent style
t0021: write "OUT <size>" only on success
t0021: make debug log file name configurable
t0021: keep filter log files on comparison
t1700: make sure split-index respects core.sharedrepository
t1301: move modebits() to test-lib-functions.sh
read-cache: use shared perms when writing shared index
doc: clarify syntax for %C(auto,...) in pretty formats
strbuf.h comment: discuss strbuf_addftime() arguments in order
wildmatch: remove unused wildopts parameter
pathspec: die on empty strings as pathspec
Documentation/git-submodule: cleanup "add" section
status: contextually notify user about an initial commit
die(): stop hiding errors due to overzealous recursion guard
t7508: fix a broken indentation
grep: fix erroneously copy/pasted variable in check/assert pattern
glossary: define 'stash entry'
status: add optional stash count information
stash: update documentation to use 'stash entry'
mergetools/meld: improve compatibiilty with Meld on macOS X
branch: add a --copy (-c) option to go with --move (-m)
branch: add test for -m renaming multiple config sections
config: create a function to format section headers
*.[ch] refactoring: make use of the FREE_AND_NULL() macro
coccinelle: make use of the "expression" FREE_AND_NULL() rule
coccinelle: add a rule to make "expression" code use FREE_AND_NULL()
coccinelle: make use of the "type" FREE_AND_NULL() rule
coccinelle: add a rule to make "type" code use FREE_AND_NULL()
wildmatch test: cover a blind spot in "/" matching
git-compat-util: add a FREE_AND_NULL() wrapper around free(ptr); ptr = NULL
docs/pretty-formats: stress that %- removes all preceding line-feeds
sub-process: correct path to API docs in a comment
doc: git-reset: fix a trivial typo
doc: do not use `rm .git/index` when normalizing line endings
git-svn: document special options for commit-diff
Configure Git contribution guidelines for github.com
t3200: add test for single parameter passed to -m option
revision.c: use skip_prefix() in handle_revision_pseudo_opt()
revision.c: use skip_prefix() in handle_revision_opt()
revision.c: stricter parsing of '--early-output'
revision.c: stricter parsing of '--no-{min,max}-parents'
revision.h: turn rev_info.early_output back into an unsigned int
dir: create function count_slashes()
filter-branch: add [--] to usage
filter-branch: add `--setup` step
t5100: add some more mailinfo tests
l10n: ru.po: update Russian translation
doc: describe git svn init --ignore-refs
sha1dc: update from upstream
perf: work around the tested repo having an index.lock
completion: add git config credentialCache.ignoreSIGHUP
completion: add git config credential completions
completion: add git config advice completions
completion: add git config am.threeWay completion
completion: add git config core completions
completion: add git config gc completions
grep: add support for PCRE v2
grep: un-break building with PCRE >= 8.32 without --enable-jit
send-email: Net::SMTP::starttls was introduced in v2.34
doc: rewrite description for rev-parse --short
C style: use standard style for "TRANSLATORS" comments
Merge branch 'master' of https://github.com/Softcatala/git-po into maint
completion: add completions for git config commit
branch test: fix invalid config key access
wildmatch test: remove redundant duplicate test
doc: filter-branch does not require re-export of vars
grep: un-break building with PCRE < 8.20
grep: un-break building with PCRE < 8.32
grep: add support for the PCRE v1 JIT API
log: add -P as a synonym for --perl-regexp
grep: skip pthreads overhead when using one thread
grep: don't redundantly compile throwaway patterns under threading
grep: assert that threading is enabled when calling grep_{lock,unlock}
grep: given --threads with NO_PTHREADS=YesPlease, warn
pack-objects: fix buggy warning about threads
pack-objects & index-pack: add test for --threads warning
test-lib: add a PTHREADS prerequisite
grep: move is_fixed() earlier to avoid forward declaration
grep: change internal *pcre* variable & function names to be *pcre1*
grep: change the internal PCRE macro names to be PCRE1
grep: factor test for \0 in grep patterns into a function
grep: remove redundant regflags assignments
grep: catch a missing enum in switch statement
perf: add a comparison test of log --grep regex engines with -F
perf: add a comparison test of log --grep regex engines
perf: add a comparison test of grep regex engines with -F
perf: add a comparison test of grep regex engines
log: fix memory leak in open_next_file()
rerere.c: move error_errno() closer to the source system call
print errno when reporting a system call error
wrapper.c: make warn_on_inaccessible() static
wrapper.c: add and use fopen_or_warn()
wrapper.c: add and use warn_on_fopen_errors()
config.mak.uname: set FREAD_READS_DIRECTORIES for Linux and FreeBSD
clone: use xfopen() instead of fopen()
use xfopen() in more places
docs/config.txt: fix indefinite article in core.fileMode description
blame: move entry prepend to libgit
blame: move scoreboard setup to libgit
blame: move scoreboard-related methods to libgit
blame: move fake-commit-related methods to libgit
blame: move origin-related methods to libgit
blame: move core structures to header
blame: create entry prepend function
blame: create scoreboard setup function
blame: create scoreboard init function
blame: rework methods that determine 'final' commit
blame: wrap blame_sort and compare_blame_final
blame: move progress updates to a scoreboard callback
blame: make sanity_check use a callback in scoreboard
blame: move no_whole_file_rename flag to scoreboard
blame: move xdl_opts flags to scoreboard
blame: move show_root flag to scoreboard
blame: move reverse flag to scoreboard
blame: move contents_from to scoreboard
blame: move copy/move thresholds to scoreboard
blame: move stat counters to scoreboard
blame: rename nth_line function
blame: rename ent_score function
blame: rename coalesce function
blame: rename origin-related functions
blame: rename scoreboard structure to blame_scoreboard
blame: rename origin structure to blame_origin
blame: remove unused parameters
blame: move textconv_object with related functions
blame: remove unneeded dependency on blob.h
clean: teach clean -d to preserve ignored paths
tag: duplicate mention of --contains should mention --no-contains
Documentation: fix formatting typo in pretty-formats.txt
Documentation: fix reference to ifExists for interpret-trailers
dir: expose cmp_name() and check_contains()
dir: hide untracked contents of untracked dirs
dir: recurse into untracked dirs for ignored files
t7061: status --ignored should search untracked dirs
t7300: clean -d should skip dirs with ignored files
sha1dc: update from upstream
perf: emit progress output when unpacking & building
perf: add a GIT_PERF_MAKE_COMMAND for when *_MAKE_OPTS won't do
grep: add tests to fix blind spots with \0 patterns
grep: prepare for testing binary regexes containing rx metacharacters
grep: add a test helper function for less verbose -f \0 tests
grep: add tests for grep pattern types being passed to submodules
grep: amend submodule recursion test for regex engine testing
grep: add tests for --threads=N and grep.threads
grep: change non-ASCII -i test to stop using --debug
grep: add a test for backreferences in PCRE patterns
grep: add a test asserting that --perl-regexp dies when !PCRE
log: make --regexp-ignore-case work with --perl-regexp
log: add exhaustive tests for pattern style options & config
test-lib: rename the LIBPCRE prerequisite to PCRE
grep & rev-list doc: stop promising libpcre for --perl-regexp
Makefile & configure: reword inaccurate comment about PCRE
interpret-trailers: honor the cut line
completion: add git stash push
config: match both symlink & realpath versions in IncludeIf.gitdir:*
convert: update subprocess_read_status() to not die on EOF
sub-process: move sub-process functions into separate files
convert: rename reusable sub-process functions
convert: update generic functions to only use generic data structures
convert: separate generic structures and variables from the filter specific ones
convert: split start_multi_file_filter() into two separate functions
perf: add test showing exponential growth in path globbing
perf: add function to setup a fresh test repo
travis-ci: add job to run tests with GETTEXT_POISON
travis-ci: setup "prove cache" in "script" step
tests: fix tests broken under GETTEXT_POISON=YesPlease
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
l10n: zh_CN: for git v2.13.0 l10n round 2
l10n: zh_CN: review for git v2.13.0 l10n round 1
Merge branch 'master' of https://github.com/vnwildman/git
Merge branch 'fr_l10n_v2.13_rnd2' of git://github.com/jnavila/git
convert: move packet_write_line() into pkt-line as packet_writel()
pkt-line: add packet_read_line_gently()
pkt-line: fix packet_read_line() to handle len < 0 errors
convert: remove erroneous tests for errno == EPIPE
p3400: add perf tests for rebasing many changes
split-index: add and use unshare_split_index()
doc: replace a couple of broken gmane links
l10n: de.po: translate 4 new messages
l10n: de.po: update German translation
l10n: vi.po(3195t): Update translation for v2.13.0 round 2
l10n: git.pot: v2.13.0 round 2 (4 new, 7 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
l10n: zh_CN: for git v2.13.0 l10n round 1
Merge branch 'fr_l10n_v2.13_rnd1' of git://github.com/jnavila/git
config.mak.uname: set NO_REGEX=NeedsStartEnd on AIX
travis-ci: retry if Git for Windows CI returns HTTP error 502 or 503
travis-ci: handle Git for Windows CI status "failed" explicitly
clone: handle empty config values in -c
credential doc: make multiple-helper behavior more prominent
tests: rename a test having to do with shallow submodules
clone: add a --no-tags option to clone without tags
tests: change "cd ... && git fetch" to "cd &&\n\tgit fetch"
Merge branch 'master' of https://github.com/vnwildman/git
travis-ci: set DEVELOPER knob for Linux32 build
travis-ci: printf $STATUS as string
travis-ci: check AsciiDoc/AsciiDoctor stderr output
l10n: vi.po(3198t): Updated Vietnamese translation for v2.13.0-rc0
refs: kill set_worktree_head_symref()
worktree.c: kill parse_ref() in favor of refs_resolve_ref_unsafe()
refs: introduce get_worktree_ref_store()
refs: add REFS_STORE_ALL_CAPS
t/perf: correctly align non-ASCII descriptions in output
completion: expand "push --delete <remote> <ref>" for refs on that <remote>
test-lib: abort when can't remove trash directory
l10n: git.pot: v2.13.0 round 1 (96 new, 37 removed)
read-cache: avoid using git_path() in freshen_shared_index()
worktree add: add --lock option
gitmodules: clarify the ignore option values
gitmodules: clarify what history depth a shallow clone has
push: document & test --force-with-lease with multiple remotes
config: correct file reading order in read_early_config()
rebase: pass --[no-]signoff option to git am
p0004: make perf test executable
ls-files: fix path used when recursing into submodules
doc: trivial typo in git-format-patch.txt
config: handle conditional include when $GIT_DIR is not set up
config: prepare to pass more info in git_config_with_options()
ls-files: fix recurse-submodules with nested submodules
submodule: remove a superfluous second check for the "new" variable
sha1_file: remove an used fd variable
builtin/am: fold am_signoff() into am_append_signoff()
builtin/am: honor --signoff also when --rebasing
refs.c: make submodule ref store hashmap generic
environment.c: fix potential segfault by get_git_common_dir()
t6500: wait for detached auto gc at the end of the test script
grep: plug a trivial memory leak
travis-ci: add static analysis build job to run coccicheck
travis-ci: unset compiler for jobs that do not need one
travis-ci: parallelize documentation build
travis-ci: build documentation with AsciiDoc and Asciidoctor
config: resolve symlinks in conditional include's patterns
path.c: and an option to call real_path() in expand_user_path()
t2027: avoid using pipes
refs.h: add a note about sorting order of for_each_ref_*
t1406: new tests for submodule ref store
t1405: some basic tests on main ref store
t/helper: add test-ref-store to test ref-store functions
refs: delete pack_refs() in favor of refs_pack_refs()
files-backend: avoid ref api targeting main ref store
refs: new transaction related ref-store api
refs: add new ref-store api
refs: rename get_ref_store() to get_submodule_ref_store() and make it public
files-backend: replace submodule_allowed check in files_downcast()
has_sha1_file: don't bother if we are not in a repository
git-add--interactive.perl: add missing dot in a message
submodule.c: add missing ' in error messages
diff-files: document --ours etc.
http: fix the silent ignoring of proxy misconfiguraion
http: honor empty http.proxy option to bypass proxy
git-bisect.txt: add missing word
update-index: fix xgetcwd() related memory leak
perl: regenerate perl.mak if perl -V changes
travis-ci: build and test Git on Windows
rev-parse: match @{upstream}, @{u} and @{push} case-insensitively
refs: move submodule code out of files-backend.c
path.c: move some code out of strbuf_git_path_submodule()
refs.c: make get_main_ref_store() public and use it
refs.c: kill register_ref_store(), add register_submodule_ref_store()
refs.c: flatten get_ref_store() a bit
refs: rename lookup_ref_store() to lookup_submodule_ref_store()
refs.c: introduce get_main_ref_store()
files-backend: remove the use of git_path()
files-backend: add and use files_ref_path()
files-backend: add and use files_reflog_path()
files-backend: move "logs/" out of TMP_RENAMED_LOG
files-backend: convert git_path() to strbuf_git_path()
files-backend: make sure files_rename_ref() always reach the end
files-backend: add and use files_packed_refs_path()
files-backend: delete dead code in files_init_db()
files-backend.c: delete dead code in files_ref_iterator_begin()
files-backend: make files_log_ref_write() static
doc/SubmittingPatches: show how to get a CLI commit summary
t/README: clarify the test_have_prereq documentation
tag: add tests for --with and --without
ref-filter: reflow recently changed branch/tag/for-each-ref docs
ref-filter: add --no-contains option to tag/branch/for-each-ref
tag: change --point-at to default to HEAD
tag: implicitly supply --list given another list-like option
tag: change misleading --list <pattern> documentation
parse-options: add OPT_NONEG to the "contains" option
tag: add more incompatibles mode tests
log: if --decorate is not given, default to --decorate=auto
branch doc: change `git branch <pattern>` to use `<branchname>`
completion: offer ctags symbol names for 'git log -S', '-G' and '-L:'
completion: extract completing ctags symbol names into helper function
completion: put matching ctags symbol names directly into COMPREPLY
refs.c: use skip_prefix() in prettify_refname()
completion: speed up branch and tag completion
completion: fill COMPREPLY directly when completing fetch refspecs
completion: fill COMPREPLY directly when completing refs
completion: let 'for-each-ref' sort remote branches for 'checkout' DWIMery
completion: let 'for-each-ref' filter remote branches for 'checkout' DWIMery
completion: let 'for-each-ref' strip the remote name from remote branches
completion: let 'for-each-ref' and 'ls-remote' filter matching refs
completion: don't disambiguate short refs
completion: don't disambiguate tags and branches
completion: support excluding full refs
completion: support completing fully qualified non-fast-forward refspecs
completion: support completing full refs after '--option=refs/<TAB>'
completion: wrap __git_refs() for better option parsing
for-each-ref: partly change <object> to <commit> in help
tag tests: fix a typo in a test description
tag: remove a TODO item from the test suite
ref-filter: add test for --contains on a non-commit
t/README: change "Inside <X> part" to "Inside the <X> part"
t/README: link to metacpan.org, not search.cpan.org
stash: keep untracked files intact in stash -k
stash: pass the pathspec argument to git reset
stash: don't show internal implementation details
doc/SubmittingPatches: clarify the casing convention for "area: change..."
ref-filter: make combining --merged & --no-merged an error
tag doc: reword --[no-]merged to talk about commits, not tips
tag doc: split up the --[no-]merged documentation
tag doc: move the description of --[no-]merged earlier
push: mention "push.default=tracking" in the documentation
git-commit.txt: list post-rewrite in HOOKS section
doc: change erroneous --[no]-whatever into --[no-]whatever
pickaxe: fix segfault with '-S<...> --pickaxe-regex'
refs.h: add forward declaration for structs used in this file
tests: make the 'test_pause' helper work in non-verbose mode
tests: create an interactive gdb session with the 'debug' helper
credential-cache: add tests for XDG functionality
credential-cache: use XDG_CACHE_HOME for socket
difftool: handle modified symlinks in dir-diff mode
t7800: cleanup cruft left behind by tests
t7800: remove whitespace before redirect
path.c: add xdg_cache_home
config: add conditional include
config.txt: reflow the second include.path paragraph
config.txt: clarify multiple key values in include.path
git svn: fix authentication with 'branch'
Documentation/git-update-index: explain splitIndex.*
Documentation/config: add splitIndex.sharedIndexExpire
read-cache: use freshen_shared_index() in read_index_from()
read-cache: refactor read_index_from()
t1700: test shared index file expiration
read-cache: unlink old sharedindex files
p7000: add test for filter-branch with --prune-empty
filter-branch: fix --prune-empty on parentless commits
t7003: ensure --prune-empty removes entire branch when applicable
t7003: ensure --prune-empty can prune root commit
contrib: git-remote-{bzr,hg} placeholders don't need Python
Documentation: improve description for core.quotePath
gitweb tests: skip tests when we don't have Time::HiRes
gitweb tests: change confusing "skip_all" phrasing
config: add git_config_get_expiry() from gc.c
read-cache: touch shared index files when used
sha1_file: make check_and_freshen_file() non static
Documentation/config: add splitIndex.maxPercentChange
t1700: add tests for splitIndex.maxPercentChange
read-cache: regenerate shared index if necessary
config: add git_config_get_max_percent_split_change()
Documentation/git-update-index: talk about core.splitIndex config var
Documentation/config: add information for core.splitIndex
t1700: add tests for core.splitIndex
update-index: warn in case of split-index incoherency
read-cache: add and then use tweak_split_index()
split-index: add {add,remove}_split_index() functions
config: add git_config_get_split_index()
t1700: change here document style
config: mark an error message up for translation
stash: allow pathspecs in the no verb form
stash: use stash_push for no verb form
stash: teach 'push' (and 'create_stash') to honor pathspec
cvs tests: skip tests that call "cvs commit" when running as root
l10n: zh_CN: for git v2.12.0 l10n round 2
git add -i: replace \t with blanks in the help message
remote: ignore failure to remove missing branch.<name>.merge
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
l10n: de.po: translate 241 messages
stash: refactor stash_create
stash: add test for the create command line arguments
stash: introduce push verb
Merge branch 'ko/merge-l10n' of https://github.com/changwoo/git-l10n-ko
Merge branch 'master' of https://github.com/vnwildman/git
l10n: vi.po (3139t): Updated 2 new messages for rc1
init: document dotfiles exclusion on template copy
rev-parse tests: add tests executed from a subdirectory
l10n: git.pot: v2.12.0 round 2 (2 new)
Merge branch 'master' of git://github.com/git-l10n/git-po
Merge branch 'master' of https://github.com/vnwildman/git
Merge branch 'master' of https://github.com/Softcatala/git-po
l10n: vi.po: Updated Vietnamese translation (3137t)
clean: use warning_errno() when appropriate
reset: add an example of how to split a commit into two
bisect_next_all: convert xsnprintf to xstrfmt
stop_progress_msg: convert xsnprintf to xstrfmt
remote helpers: avoid blind fall-back to ".git" when setting GIT_DIR
completion: remove redundant __gitcomp_nl() options from _git_commit()
Documentation/stash: remove mention of git reset --hard
completion: restore removed line continuating backslash
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
Merge branch 'fr_v2.11.0_rnd1' of git://github.com/jnavila/git
git-p4: fix git-p4.pathEncoding for removed files
rev-list-options.txt: update --all about HEAD
t7800: replace "wc -l" with test_line_count
t7800: simplify basic usage test
Document the --no-gui option in difftool
difftool: fix bug when printing usage
l10n: fr.po: Fix a typo in the French translation
l10n: fr.po: Fix typos
reset: add an example of how to split a commit into two
completion: cache the path to the repository
completion: extract repository discovery from __gitdir()
completion: don't guard git executions with __gitdir()
completion: consolidate silencing errors from git commands
completion: don't use __gitdir() for git commands
completion: respect 'git -C <path>'
rev-parse: add '--absolute-git-dir' option
completion: fix completion after 'git -C <path>'
completion: don't offer commands when 'git --opt' needs an argument
completion: list short refs from a remote given as a URL
completion: don't list 'HEAD' when trying refs completion outside of a repo
completion: list refs from remote when remote's name matches a directory
completion: respect 'git --git-dir=<path>' when listing remote refs
completion: fix most spots not respecting 'git --git-dir=<path>'
completion: ensure that the repository path given on the command line exists
completion tests: add tests for the __git_refs() helper function
completion tests: check __gitdir()'s output in the error cases
completion tests: consolidate getting path of current working directory
completion tests: make the $cur variable local to the test helper functions
completion tests: don't add test cruft to the test repository
completion: improve __git_refs()'s in-code documentation
l10n: git.pot: v2.12.0 round 1 (239 new, 15 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
attr: support quoting pathname patterns in C style
connect: Add the envvar GIT_SSH_VARIANT and ssh.variant config
.mailmap: update Gábor Szeder's email address
branch: implement '--format' option
branch: use ref-filter printing APIs
branch, tag: use porcelain output
ref-filter: allow porcelain to translate messages in the output
ref-filter: add an 'rstrip=<N>' option to atoms which deal with refnames
ref-filter: modify the 'lstrip=<N>' option to work with negative '<N>'
builtin/commit.c: switch to strbuf, instead of snprintf()
Completion: Add support for --submodule=diff
connect: handle putty/plink also in GIT_SSH_COMMAND
Merge branch 'master' of https://github.com/Softcatala/git-po
describe: teach describe negative pattern matches
describe: teach --match to accept multiple patterns
name-rev: add support to exclude refs by pattern match
name-rev: extend --refs to accept multiple patterns
log --graph: customize the graph lines with config log.graphColors
travis-ci: fix Perforce install on macOS
doc: add documentation for OPT_STRING_LIST
color.c: trim leading spaces in color_parse_mem()
color.c: fix color_parse_mem() with value_len == 0
builtin/tag: add --format argument for tag -v
gitk: Remove translated message from comments
ref-filter: add function to print single ref_array_item
gpg-interface, tag: add GPG_VERIFY_OMIT_STATUS flag
builtin/commit.c: remove the PATH_MAX limitation via dynamic allocation
Documentation/bisect: improve on (bad|new) and (good|bad)
versioncmp: generalize version sort suffix reordering
versioncmp: factor out helper for suffix matching
ref-filter: Do not abruptly die when using the 'lstrip=<N>' option
ref-filter: rename the 'strip' option to 'lstrip'
ref-filter: make remote_ref_atom_parser() use refname_atom_parser_internal()
ref-filter: introduce refname_atom_parser()
ref-filter: introduce refname_atom_parser_internal()
ref-filter: make "%(symref)" atom work with the ':short' modifier
ref-filter: add support for %(upstream:track,nobracket)
ref-filter: make %(upstream:track) prints "[gone]" for invalid upstreams
ref-filter: introduce format_ref_array_item()
ref-filter: move get_head_description() from branch.c
ref-filter: modify "%(objectname:short)" to take length
ref-filter: implement %(if:equals=<string>) and %(if:notequals=<string>)
ref-filter: include reference to 'used_atom' within 'atom_value'
ref-filter: implement %(if), %(then), and %(else) atoms
Makefile: put LIBS after LDFLAGS for imap-send
Makefile: POSIX windres
t9813: avoid using pipes
don't use test_must_fail with grep
l10n: zh_CN: review for git v2.11.0 l10n
Merge branch 'master' of https://github.com/Softcatala/git-po
gitk: ru.po: Update Russian translation
git-p4: do not pass '-r 0' to p4 commands
config.c: handle lock file in error case in git_config_rename_...
mingw: fix colourization on Cygwin pseudo terminals
config.c: rename label unlock_and_out
config.c: handle error case for fstat() calls
git-p4: add diff/merge properties to .gitattributes for GitLFS files
mailinfo.c: move side-effects outside of assert
t0021: fix flaky test
merge: ensure '--abort' option takes no arguments
completion: add --continue option for merge
merge: add '--continue' option as a synonym for 'git commit'
submodule--helper: set alternateLocation for cloned submodules
gitk: Fix Japanese translation for "marked commit"
mergetools: fix xxdiff hotkeys
difftool: rename variables for consistency
difftool: chdir as early as possible
difftool: sanitize $workdir as early as possible
difftool: fix dir-diff index creation when in a subdirectory
gitk: Include commit title in branch dialog
gitk: Allow checking out a remote branch
gitk: Add a 'rename' option to the branch context menu
ref-filter: add support to display trailers as part of contents
pretty: add %(trailers) format for displaying trailers of a commit message
rebase: add --quit to cleanup rebase, leave everything else untouched
doc: omit needless "for"
doc: make the intent of sentence clearer
doc: add verb in front of command to run
doc: add articles (grammar)
versioncmp: use earliest-longest contained suffix to determine sorting order
versioncmp: cope with common part overlapping with prerelease suffix
versioncmp: pass full tagnames to swap_prereleases()
t7004-tag: add version sort tests to show prerelease reordering issues
t7004-tag: use test_config helper
t7004-tag: delete unnecessary tags with test_when_finished
difftool: fix dir-diff index creation when in a subdirectory
shallow.c: remove useless code
shallow.c: make paint_alloc slightly more robust
shallow.c: stop abusing COMMIT_SLAB_SIZE for paint_info's memory pools
shallow.c: rename fields in paint_info to better express their purposes
docs: warn about possible '=' in clean/smudge filter process values
tag, branch, for-each-ref: add --ignore-case for sorting and filtering
t0021: minor filter process test cleanup
git-p4: fix empty file processing for large file system backend GitLFS
travis-ci: update P4 to 16.2 and GitLFS to 1.5.2 in Linux build
git-p4: add config to retry p4 commands; retry 3 times by default
clone,fetch: explain the shallow-clone option a little more clearly
receive-pack: improve English grammar of denyCurrentBranch message
bisect: improve English grammar of not-ancestors message
git-p4: allow submit to create shelved changelists.
mergetools/vimdiff: trust Vim's exit code
mergetool: honor mergetool.$tool.trustExitCode for built-in tools
Merge branch 'russian-l10n' of https://github.com/DJm00n/git-po-ru
l10n: ru.po: update Russian translation
l10n: ca.po: update translation
merge-recursive.c: use string_list_sort instead of qsort
worktree list: keep the list sorted
worktree.c: get_worktrees() takes a new flag argument
get_worktrees() must return main worktree as first item even on error
worktree: reorder an if statement
l10n: de.po: translate 210 new messages
l10n: fix unmatched single quote in error message
worktree.c: zero new 'struct worktree' on allocation
l10n: Fixed typo of git fetch-pack command
l10n: git.pot: v2.11.0 round 2 (1 new, 1 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
i18n: fix unmatched single quote in error message
l10n: zh_CN: for git v2.11.0 l10n round 1
fetch-pack.c: correct command at the beginning of an error message
travis-ci: disable GIT_TEST_HTTPD for macOS
Makefile: set NO_OPENSSL on macOS by default
Merge branch 'fr_v2.11.0_rnd1' of git://github.com/jnavila/git
Merge branch 'ko/merge-l10n' of https://github.com/changwoo/git-l10n-ko
l10n: vi.po: Updated translation to v2.11.0 (2913t)
Merge branch 'russian-l10n' of https://github.com/DJm00n/git-po-ru
split-index: s/eith/with/ typo fix
l10n: git.pot: v2.11.0 round 1 (209 new, 53 removed)
stash: allow stashes to be referenced by index only
read-cache: make sure file handles are not inherited by child processes
sha1_file: open window into packfiles with O_CLOEXEC
sha1_file: rename git_open_noatime() to git_open()
commit: don't be fooled by ita entries when creating initial commit
commit: fix empty commit creation when there's no changes but ita entries
diff: add --ita-[in]visible-in-index
diff-lib: allow ita entries treated as "not yet exist in index"
rev-list: use hdr_termination instead of a always using a newline
doc: remove reference to the traditional layout in git-tag.txt
t0040: convert all possible tests to use `test-parse-options --expect`
contrib/long-running-filter: add long running filter example
convert: add filter.<driver>.process option
convert: prepare filter.<driver>.process option
convert: make apply_filter() adhere to standard Git error handling
pkt-line: add functions to read/write flush terminated packet streams
pkt-line: add packet_write_gently()
pkt-line: add packet_flush_gently()
pkt-line: add packet_write_fmt_gently()
pkt-line: extract set_packet_header()
pkt-line: rename packet_write() to packet_write_fmt()
run-command: add clean_on_exit_handler
run-command: move check_pipe() from write_or_die to run_command
convert: modernize tests
convert: quote filter names in error messages
l10n: ru.po: update Russian translation
Merge branch 'russian-l10n' of https://github.com/DJm00n/git-po-ru
gitweb: link to "git describe"'d commits in log messages
gitweb: link to 7-char+ SHA-1s, not only 8-char+
gitweb: fix a typo in a comment
l10n: de.po: translate 260 new messages
contrib: add credential helper for libsecret
mergetool: honor -O<orderfile>
mergetool: honor diff.orderFile
mergetool: move main program flow into a main() function
mergetool: add copyright
configure.ac: improve description of NO_REGEX test
git-commit.txt: clarify --patch mode with pathspec
git-gui: Update Russian translation
git-gui: fix initial git gui message encoding
git-gui/po/glossary/txt-to-pot.sh: use the $( ... ) construct for command substitution
rev-list-options: clarify the usage of --reverse
init: kill git_link variable
init: do not set unnecessary core.worktree
init: kill set_git_dir_init()
init: call set_git_dir_init() from within init_db()
init: correct re-initialization from a linked worktree
travis-ci: ask homebrew for its path instead of hardcoding it
git-check-ref-format.txt: fixup documentation
checkout: fix ambiguity check in subdir
checkout.txt: document a common case that ignores ambiguation rules
add: modify already added files when --chmod is given
read-cache: introduce chmod_index_entry
update-index: add test for chmod flags
vcs-svn/fast_export: fix timestamp fmt specifiers
add: document the chmod option
l10n: de.po: fix translation of autostash
l10n: zh_CN: review for git v2.10.0 l10n
l10n: zh_CN: fixed some typos for git 2.10.0
connect: tighten check for unexpected early hang up
checkout: add some spaces between code and comment
unpack-trees: do not capitalize "working"
git-merge-octopus: do not capitalize "octopus"
git-rebase--interactive: fix English grammar
cat-file: put spaces around pipes in usage string
am: put spaces around pipe in usage string
builtin/am: use apply API in run_apply()
apply: learn to use a different index file
apply: pass apply state to build_fake_ancestor()
apply: refactor `git apply` option parsing
apply: change error_routine when silent
usage: add get_error_routine() and get_warn_routine()
usage: add set_warn_routine()
apply: don't print on stdout in verbosity_silent mode
apply: make it possible to silently apply
apply: use error_errno() where possible
apply: make some parsing functions static again
apply: rename and move opt constants to apply.h
builtin/apply: rename option parsing functions
builtin/apply: make create_one_file() return -1 on error
builtin/apply: make try_create_file() return -1 on error
rebase -i: improve advice on bad instruction lines
t5551-http-fetch-smart.sh: use the GIT_TRACE_CURL environment var
t5550-http-fetch-dumb.sh: use the GIT_TRACE_CURL environment var
test-lib.sh: preserve GIT_TRACE_CURL from the environment
t5541-http-push-smart.sh: use the GIT_TRACE_CURL environment var
git-gui: update Japanese information
git-gui: update Japanese translation
git-gui: add Japanese language code
git-gui: apply po template to Japanese translation
git-gui: consistently use the same word for "blame" in Japanese
git-gui: consistently use the same word for "remote" in Japanese
Merge branch 'master' of https://github.com/vnwildman/git
diff: teach diff to display submodule difference with an inline diff
submodule: refactor show_submodule_summary with helper function
submodule: convert show_submodule_summary to use struct object_id *
allow do_submodule_path to work even if submodule isn't checked out
diff: prepare for additional submodule formats
graph: add support for --line-prefix on all graph-aware output
cache: add empty_tree_oid object and helper function
help: make option --help open man pages only for Git commands
help: introduce option --exclude-guides
pack-protocol: fix maximum pkt-line size
l10n: zh_CN: for git v2.10.0 l10n round 2
diff-highlight: add support for --graph output
diff-highlight: add failing test for handling --graph output
diff-highlight: add some tests
blame: fix segfault on untracked files
l10n: ca.po: update translation
l10n: Updated Vietnamese translation for v2.10.0-rc2 (2757t)
Merge branch 'master' of https://github.com/vnwildman/git
l10n: git.pot: v2.10.0 round 2 (12 new, 44 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
l10n: Updated Vietnamese translation for v2.10.0 (2789t)
unpack-objects: add --max-input-size=<size> option
completion: support excluding refs
format-patch: show 0/1 and 1/1 for singleton patch with cover letter
l10n: git.pot: v2.10.0 round 1 (248 new, 56 removed)
builtin/apply: make write_out_results() return -1 on error
builtin/apply: make write_out_one_result() return -1 on error
builtin/apply: make create_file() return -1 on error
builtin/apply: make add_index_file() return -1 on error
builtin/apply: make add_conflicted_stages_file() return -1 on error
builtin/apply: make remove_file() return -1 on error
builtin/apply: make build_fake_ancestor() return -1 on error
builtin/apply: change die_on_unsafe_path() to check_unsafe_path()
builtin/apply: make gitdiff_*() return -1 on error
builtin/apply: make gitdiff_*() return 1 at end of header
builtin/apply: make parse_traditional_patch() return -1 on error
builtin/apply: make apply_all_patches() return 128 or 1 on error
builtin/apply: move check_apply_state() to apply.c
builtin/apply: make check_apply_state() return -1 instead of die()ing
apply: make init_apply_state() return -1 instead of exit()ing
builtin/apply: move init_apply_state() to apply.c
builtin/apply: make parse_ignorewhitespace_option() return -1 instead of die()ing
builtin/apply: make parse_whitespace_option() return -1 instead of die()ing
builtin/apply: make parse_single_patch() return -1 on error
builtin/apply: make parse_chunk() return a negative integer on error
builtin/apply: make find_header() return -128 instead of die()ing
builtin/apply: read_patch_file() return -1 instead of die()ing
builtin/apply: make apply_patch() return -1 or -128 instead of die()ing
apply: move 'struct apply_state' to apply.h
apply: make some names more specific
completion: add completion for --submodule=* diff option
.mailmap: use Christian Couder's Tuxfamily address
t7063: work around FreeBSD's lazy mtime update feature
difftool: use Git::* functions instead of passing around state
difftool: avoid $GIT_DIR and $GIT_WORK_TREE
subtree: adjust function definitions to match CodingGuidelines
subtree: adjust style to match CodingGuidelines
completion: add option '--recurse-submodules' to 'git clone'
subtree: fix "git subtree split --rejoin"
t7900-subtree.sh: fix quoting and broken && chains
commit: describe that --no-verify skips the commit-msg hook in the help text
config.mak.uname: correct perl path on FreeBSD
contrib/persistent-https: use Git version for build label
contrib/persistent-https: update ldflags syntax for Go 1.7+
cache-tree: do not generate empty trees as a result of all i-t-a subentries
cache-tree.c: fix i-t-a entry skipping directory updates sometimes
test-lib.sh: introduce and use $EMPTY_BLOB
test-lib.sh: introduce and use $EMPTY_TREE
fsck: use streaming interface for large blobs in pack
pack-objects: do not truncate result in-pack object size on 32-bit systems
index-pack: correct "offset" type in unpack_entry_data()
index-pack: report correct bad object offsets even if they are large
index-pack: correct "len" type in unpack_data()
sha1_file.c: use type off_t* for object_info->disk_sizep
log: decorate HEAD -> branch with the same color for arrow and HEAD
pack-objects: pass length to check_pack_crc() without truncation
travis-ci: enable web server tests t55xx on Linux
l10n: ru.po: update Russian translation
worktree.c: find_worktree() search by path suffix
worktree: add "unlock" command
worktree: add "lock" command
git-p4: place temporary refs used for branch import under refs/git-p4-tmp
Makefile: add NEEDS_LIBRT to optionally link with librt
connect: read $GIT_SSH_COMMAND from config file
fetch: reduce duplicate in ref update status lines with placeholder
fetch: align all "remote -> local" output
grep.c: reuse "icase" variable
diffcore-pickaxe: support case insensitive match on non-ascii
diffcore-pickaxe: Add regcomp_or_die()
grep/pcre: support utf-8
gettext: add is_utf8_locale()
grep/pcre: prepare locale-dependent tables for icase matching
grep: rewrite an if/else condition to avoid duplicate expression
grep/icase: avoid kwsset when -F is specified
fetch: change flag code for displaying tag update and deleted ref
fetch: refactor ref update status formatting code
git-fetch.txt: document fetch output
unpack-trees: fix English grammar in do-this-before-that messages
grep/icase: avoid kwsset on literal non-ascii strings
test-regex: expose full regcomp() to the command line
test-regex: isolate the bug test code
grep: break down an "if" stmt in preparation for next changes
new-command.txt: correct the command description file
log: add log.showSignature configuration variable
log: add "--no-show-signature" command line option
t4202: refactor test
pathspec: warn on empty strings as pathspec
doc: git-htmldocs.googlecode.com is no more
sh-setup: enclose setting of ${VAR=default} in double-quotes
Documentation: GPG capitalization
pretty.c: support <direction>|(<negative number>) forms
strbuf: describe the return value of strbuf_read_file
fetch, upload-pack: --deepen=N extends shallow boundary by N commits
upload-pack: add get_reachable_list()
upload-pack: split check_unreachable() in two, prep for get_reachable_list()
t5500, t5539: tests for shallow depth excluding a ref
clone: define shallow clone boundary with --shallow-exclude
fetch: define shallow boundary with --shallow-exclude
upload-pack: support define shallow boundary by excluding revisions
refs: add expand_ref()
t5500, t5539: tests for shallow depth since a specific date
clone: define shallow clone boundary based on time with --shallow-since
fetch: define shallow boundary with --shallow-since
upload-pack: add deepen-since to cut shallow repos based on time
shallow.c: implement a generic shallow boundary finder based on rev-list
fetch-pack: use a separate flag for fetch in deepening mode
fetch-pack.c: mark strings for translating
fetch-pack: use a common function for verbose printing
fetch-pack: use skip_prefix() instead of starts_with()
upload-pack: move rev-list code out of check_non_tip()
upload-pack: make check_non_tip() clean things up on error
upload-pack: tighten number parsing at "deepen" lines
upload-pack: use skip_prefix() instead of starts_with()
upload-pack: move "unshallow" sending code out of deepen()
upload-pack: remove unused variable "backup"
upload-pack: move "shallow" sending code out of deepen()
upload-pack: move shallow deepen code out of receive_needs()
transport-helper.c: refactor set_helper_option()
remote-curl.c: convert fetch_git() to use argv_array
worktree.c: add is_worktree_locked()
lib-httpd.sh: print error.log on error
Merge branch 'russian-l10n' of https://github.com/DJm00n/git-po-ru
l10n: ru.po: update Russian translation
l10n: de.po: translate 104 new messages
Use "working tree" instead of "working directory" for git status
builtin/commit.c: memoize git-path for COMMIT_EDITMSG
l10n: zh_CN: review for git v2.9.0 l10n round 1
l10n: zh_CN: for git v2.9.0 l10n round 1
worktree.c: add is_main_worktree()
worktree.c: add find_worktree()
builtin/apply: move 'newfd' global into 'struct apply_state'
builtin/apply: add 'lock_file' pointer into 'struct apply_state'
builtin/apply: move applying patches into apply_all_patches()
builtin/apply: move 'state' check into check_apply_state()
builtin/apply: move 'symlink_changes' global into 'struct apply_state'
builtin/apply: move 'fn_table' global into 'struct apply_state'
builtin/apply: move 'state_linenr' global into 'struct apply_state'
builtin/apply: move 'max_change' and 'max_len' into 'struct apply_state'
builtin/apply: move 'ws_ignore_action' into 'struct apply_state'
builtin/apply: move 'ws_error_action' into 'struct apply_state'
builtin/apply: move 'applied_after_fixing_ws' into 'struct apply_state'
builtin/apply: move 'squelch_whitespace_errors' into 'struct apply_state'
builtin/apply: remove whitespace_option arg from set_default_whitespace_mode()
builtin/apply: move 'whitespace_option' into 'struct apply_state'
builtin/apply: move 'whitespace_error' global into 'struct apply_state'
builtin/apply: move 'root' global into 'struct apply_state'
builtin/apply: move 'p_value_known' global into 'struct apply_state'
builtin/apply: move 'p_value' global into 'struct apply_state'
builtin/apply: move 'has_include' global into 'struct apply_state'
builtin/apply: move 'limit_by_name' global into 'struct apply_state'
builtin/apply: move 'patch_input_file' global into 'struct apply_state'
builtin/apply: move 'apply' global into 'struct apply_state'
builtin/apply: move 'p_context' global into 'struct apply_state'
builtin/apply: move 'fake_ancestor' global into 'struct apply_state'
builtin/apply: move 'line_termination' global into 'struct apply_state'
builtin/apply: move 'unsafe_paths' global into 'struct apply_state'
builtin/apply: move 'no_add' global into 'struct apply_state'
builtin/apply: move 'threeway' global into 'struct apply_state'
builtin/apply: move 'summary' global into 'struct apply_state'
builtin/apply: move 'numstat' global into 'struct apply_state'
builtin/apply: move 'diffstat' global into 'struct apply_state'
builtin/apply: move 'cached' global into 'struct apply_state'
builtin/apply: move 'allow_overlap' global into 'struct apply_state'
builtin/apply: move 'update_index' global into 'struct apply_state'
builtin/apply: move 'apply_verbosely' global into 'struct apply_state'
builtin/apply: move 'apply_with_reject' global into 'struct apply_state'
builtin/apply: move 'apply_in_reverse' global into 'struct apply_state'
builtin/apply: move 'check_index' global into 'struct apply_state'
builtin/apply: move 'check' global into 'struct apply_state'
builtin/apply: move 'unidiff_zero' global into 'struct apply_state'
builtin/apply: move 'state' init into init_apply_state()
README.md: format CLI commands with code syntax
git-cherry-pick.txt: correct a small typo
Merge branch 'v2.9.0_rnd1_fr' of git://github.com/jnavila/git
Documentation: add instructions to help setup gmail 2FA
Merge branch 'fix_fr' of git://github.com/jnavila/git
l10n: Updated Vietnamese translation (2597t)
imap-send.c: introduce the GIT_TRACE_CURL enviroment variable
http.c: implement the GIT_TRACE_CURL environment variable
worktree: simplify prefixing paths
worktree: avoid 0{40}, too many zeroes, hard to read
worktree.c: use is_dot_or_dotdot()
git-worktree.txt: keep subcommand listing in alphabetical order
worktree.c: rewrite mark_current_worktree() to avoid strbuf
completion: support git-worktree
l10n: git.pot: v2.9.0 round 1 (104 new, 37 removed)
travis-ci: enable Git SVN tests t91xx on Linux
pull: warn on --verify-signatures with --rebase
fast-import: do not truncate exported marks file
difftool: handle unmerged files in dir-diff mode
difftool: initialize variables for readability
builtin/apply: introduce 'struct apply_state' to start libifying
builtin/apply: move 'read_stdin' global into cmd_apply()
builtin/apply: move 'options' variable into cmd_apply()
builtin/apply: extract line_by_line_fuzzy_match() from match_fragment()
builtin/apply: avoid local variable shadowing 'len' parameter
builtin/apply: avoid parameter shadowing 'linenr' global
builtin/apply: avoid parameter shadowing 'p_value' global
builtin/apply: make gitdiff_verify_name() return void
wrap-for-bin.sh: regenerate bin-wrappers when switching branches
travis-ci: build documentation
commit: add a commit.verbose config variable
wrapper.c: use warning_errno()
vcs-svn: use error_errno()
upload-pack.c: use error_errno()
unpack-trees.c: use error_errno()
transport-helper.c: use error_errno()
sha1_file.c: use {error,die,warning}_errno()
server-info.c: use error_errno()
sequencer.c: use error_errno()
run-command.c: use error_errno()
rerere.c: use error_errno() and warning_errno()
reachable.c: use error_errno()
mailmap.c: use error_errno()
ident.c: use warning_errno()
http.c: use error_errno() and warning_errno()
grep.c: use error_errno()
gpg-interface.c: use error_errno()
fast-import.c: use error_errno()
entry.c: use error_errno()
editor.c: use error_errno()
diff-no-index.c: use error_errno()
credential-cache--daemon.c: use warning_errno()
copy.c: use error_errno()
connected.c: use error_errno()
config.c: use error_errno()
compat/win32/syslog.c: use warning_errno()
combine-diff.c: use error_errno()
check-racy.c: use error_errno()
builtin/worktree.c: use error_errno()
builtin/upload-archive.c: use error_errno()
builtin/update-index.c: prefer "err" to "errno" in process_lstat_error
builtin/rm.c: use warning_errno()
builtin/pack-objects.c: use die_errno() and warning_errno()
builtin/merge-file.c: use error_errno()
builtin/mailsplit.c: use error_errno()
builtin/help.c: use warning_errno()
builtin/fetch.c: use error_errno()
builtin/branch.c: use error_errno()
builtin/am.c: use error_errno()
bisect.c: use die_errno() and warning_errno()
usage.c: add warning_errno() and error_errno()
usage.c: move format processing out of die_errno()
Git/SVN: die when there is no commit metadata
remote.c: specify correct plural form in "commit diverge" message
config: consistently format $variables in monospaced font
t7507-commit-verbose: improve test coverage by testing number of diffs
parse-options.c: make OPTION_COUNTUP respect "unspecified" values
t/t7507: improve test coverage
t0040-parse-options: improve test coverage
hooks: allow customizing where the hook directory is
githooks.txt: minor improvements to the grammar & phrasing
githooks.txt: amend dangerous advice about 'update' hook ACL
githooks.txt: improve the intro section
http: expand http.cookieFile as a path
Documentation: config: improve word ordering for http.cookieFile
Documentation: add setup instructions for Travis CI
t9824: fix wrong reference value
git-p4: fix Git LFS pointer parsing
travis-ci: express Linux/OS X dependency versions more clearly
string_list: use string-list API in unsorted_string_list_lookup()
git-rebase--merge: don't include absent parent as a base
Merge branch 'fr_v2.8.0_r3' of git://github.com/jnavila/git into maint
branch: do not rename a branch under bisect or rebase
worktree.c: check whether branch is bisected in another worktree
wt-status.c: split bisect detection out of wt_status_get_state()
worktree.c: check whether branch is rebased in another worktree
worktree.c: avoid referencing to worktrees[i] multiple times
wt-status.c: make wt_status_check_rebase() work on any worktree
wt-status.c: split rebase detection out of wt_status_get_state()
path.c: refactor and add worktree_git_path()
worktree.c: mark current worktree
worktree.c: make find_shared_symref() return struct worktree *
worktree.c: store "id" instead of "git_dir"
path.c: add git_common_path() and strbuf_git_common_path()
dir.c: rename str(n)cmp_icase to fspath(n)cmp
wrapper.c: delete dead function git_mkstemps()
dir.c: remove dead function fnmatch_icase()
test-parse-options: print quiet as integer
t0040-test-parse-options.sh: fix style issues
git-p4: add P4 jobs to git commit message
git-p4: clean-up code style in tests
travis-ci: update Git-LFS and P4 to the latest version
xdiff: add recs_match helper function
test helpers: move test-* to t/helper/ subdirectory
merge-octopus: abort if index does not match HEAD
t6044: new merge testcases for when index doesn't match HEAD
builtin/merge.c: fix a bug with trivial merges
t7605: add a testcase demonstrating a bug with trivial merges
merge-recursive: do not check working copy when creating a virtual merge base
merge-recursive: remove duplicate code
api-trace.txt: fix typo
t5520: test --[no-]autostash with pull.rebase=true
t5520: reduce commom lines of code
t5520: factor out common "failing autostash" code
t5520: factor out common "successful autostash" code
t5520: use better test to check stderr output
t5520: ensure consistent test conditions
t5520: use consistent capitalization in test titles
mergetools: add support for ExamDiff
mergetools: create mergetool_find_win32_cmd() helper function for winmerge
builtin/apply: free patch when parse_chunk() fails
builtin/apply: handle parse_binary() failure
worktree: add: introduce --checkout option
rebase-i: print an abbreviated hash when stop for editing
api-parse-options.txt: document OPT_CMDMODE()
completion: add 'revisions' and 'everyday' to 'git help'
completion: add option '--guides' to 'git help'
apply: report patch skipping in verbose mode
git-apply.txt: mention the behavior inside a subdir
git-apply.txt: remove a space
submodule-config: use hashmap_iter_first()
Documentation: fix git-p4 AsciiDoc formatting
Merge branch 'master' of https://github.com/vnwildman/git
Merge branch 'master' of git://github.com/alexhenrie/git-po
builtin/apply: get rid of useless 'name' variable
l10n: ca.po: update translation
pull --rebase: add --[no-]autostash flag
git-pull.c: introduce git_pull_config()
Documentation: use ASCII quotation marks in git-p4
l10n: vi.po (2530t): Update translation
l10n: zh_CN: review for git v2.8.0 l10n round 2
gitk: Update German translation
l10n: de.po: add missing newlines
l10n: de.po: translate 22 new messages
Merge branch 'fr_v2.8.0_r3' of git://github.com/jnavila/git
Merge branch 'ko/merge-l10n' of https://github.com/changwoo/git-l10n-ko
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
l10n: ru.po: update Russian translation
l10n: zh_CN: for git v2.8.0 l10n round 3
l10n: git.pot: Add one new message for Git 2.8.0
Merge branch 'master' of git://github.com/git-l10n/git-po
l10n: zh_CN: for git v2.8.0 l10n round 2
git-svn: loosen config globs limitations
Merge branch 'russian-l10n' of https://github.com/DJm00n/git-po-ru
l10n: ru.po: update Russian translation
l10n: git.pot: v2.8.0 round 2 (21 new, 1 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
l10n: zh_CN: for git v2.8.0 l10n round 1
t/t7502 : drop duplicate test
mergetool: honor tempfile configuration when resolving delete conflicts
mergetool: support delete/delete conflicts
Documentation: talk about pager in api-trace.txt
fetch-pack: update the documentation for "<refs>..." arguments
l10n: de.po: translate 48 new messages
l10n: de.po: translate "command" as "Befehl"
l10n: de.po: fix interactive rebase message
l10n: de.po: add space to abbreviation "z. B."
l10n: de.po: fix typo
l10n: TEAMS: update Ralf Thielow's email address
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
Merge branch 'ko/merge-l10n' of https://github.com/changwoo/git-l10n-ko
l10n: ru.po: update Russian translation
builtin/receive-pack.c: use parse_options API
git: submodule honor -c credential.* from command line
quote: implement sq_quotef()
submodule: fix segmentation fault in submodule--helper clone
submodule: fix submodule--helper clone usage
submodule: check argc count for git submodule--helper clone
submodule: don't pass empty string arguments to submodule--helper clone
fetch-pack: fix object_id of exact sha1
dir: store EXC_FLAG_* values in unsigned integers
trailer.c: mark strings for translation
ref-filter.c: mark strings for translation
builtin/clone.c: mark strings for translation
builtin/checkout.c: mark strings for translation
Merge branch 'master' of https://github.com/vnwildman/git
l10n: vi.po (2509t): Updated Vietnamese translation
l10n: git.pot: v2.8.0 round 1 (48 new, 16 removed)
sha1_file.c: mark strings for translation
add DEVELOPER makefile knob to check for acknowledged warnings
t3034: test deprecated interface
t3034: test option to disable renames
t3034: add rename threshold tests
merge-recursive: find-renames resets threshold
merge-strategies.txt: fix typo
config: add '--show-origin' option to print the origin of a config value
config: add 'origin_type' to config_source struct
git.c: simplify stripping extension of a file in handle_builtin()
exec_cmd.c: use find_last_dir_sep() for code simplification
rename git_config_from_buf to git_config_from_mem
ref-filter: introduce objectname_atom_parser()
ref-filter: introduce contents_atom_parser()
ref-filter: introduce remote_ref_atom_parser()
ref-filter: align: introduce long-form syntax
ref-filter: introduce align_atom_parser()
ref-filter: introduce parse_align_position()
ref-filter: introduce color_atom_parser()
ref-filter: introduce parsing functions for each valid atom
ref-filter: introduce struct used_atom
ref-filter: bump 'used_atom' and related code to the top
t: do not hide Git's exit code in tests using 'nul_to_q'
merge-recursive: more consistent interface
merge-recursive: option to disable renames
git-cvsserver.perl: fix typo
remote: use remote_is_configured() for add and rename
remote: actually check if remote exits
remote: simplify remote_is_configured()
remote: use parse_config_key
worktree add -B: do the checkout test before update branch
worktree: fix "add -B"
dir.c: don't exclude whole dir prematurely
dir.c: support marking some patterns already matched
dir.c: support tracing exclude
dir.c: fix match_pathname()
rev-parse: take prefix into account in --git-common-dir
mergetool: reorder vim/gvim buffers in three-way diffs
ident: add user.useConfigOnly boolean for when ident shouldn't be guessed
object name: introduce '^{/!-<negative pattern>}' notation
stripspace: call U+0020 a "space" instead of a "blank"
convert: treat an empty string for clean/smudge filters as "cat"
t7063: add tests for core.untrackedCache
test-dump-untracked-cache: don't modify the untracked cache
config: add core.untrackedCache
travis-ci: explicity use container-based infrastructure
travis-ci: run previously failed tests first, then slowest to fastest
dir: simplify untracked cache "ident" field
dir: add remove_untracked_cache()
dir: add {new,add}_untracked_cache()
update-index: move 'uc' var declaration
update-index: add untracked cache notifications
update-index: add --test-untracked-cache
update-index: use enum for untracked cache options
worktree: stop supporting moving worktrees manually
diff: make -O and --output work in subdirectory
diff-no-index: do not take a redundant prefix argument
git-add doc: do not say working directory when you mean working tree
worktree.c: fix indentation
ls-remote: add support for showing symrefs
ls-remote: use parse-options api
ls-remote: fix synopsis
ls-remote: document --refs option
ls-remote: document --quiet option
notes: allow merging from arbitrary references
format-patch: introduce format.outputDirectory configuration
t9901-git-web--browse.sh: use the $( ... ) construct for command substitution
t9501-gitweb-standalone-http-status.sh: use the $( ... ) construct for command substitution
t9350-fast-export.sh: use the $( ... ) construct for command substitution
t9300-fast-import.sh: use the $( ... ) construct for command substitution
t9150-svk-mergetickets.sh: use the $( ... ) construct for command substitution
t9145-git-svn-master-branch.sh: use the $( ... ) construct for command substitution
t9138-git-svn-authors-prog.sh: use the $( ... ) construct for command substitution
t9137-git-svn-dcommit-clobber-series.sh: use the $( ... ) construct for command substitution
t9132-git-svn-broken-symlink.sh: use the $( ... ) construct for command substitution
t9130-git-svn-authors-file.sh: use the $( ... ) construct for command substitution
t9129-git-svn-i18n-commitencoding.sh: use the $( ... ) construct for command substitution
t9119-git-svn-info.sh: use the $( ... ) construct for command substitution
t9118-git-svn-funky-branch-names.sh: use the $( ... ) construct for command substitution
t9114-git-svn-dcommit-merge.sh: use the $( ... ) construct for command substitution
t9110-git-svn-use-svm-props.sh: use the $( ... ) construct for command substitution
t9109-git-svn-multi-glob.sh: use the $( ... ) construct for command substitution
t9108-git-svn-glob.sh: use the $( ... ) construct for command substitution
t9107-git-svn-migrate.sh: use the $( ... ) construct for command substitution
t9105-git-svn-commit-diff.sh: use the $( ... ) construct for command substitution
t9104-git-svn-follow-parent.sh: use the $( ... ) construct for command substitution
t9101-git-svn-props.sh: use the $( ... ) construct for command substitution
t9100-git-svn-basic.sh: use the $( ... ) construct for command substitution
builtin/grep: add grep.fallbackToNoIndex config
t7810: correct --no-index test
t/t9001-send-email.sh: use the $( ... ) construct for command substitution
test for '!' handling in rev-parse's named commits
t/t8003-blame-corner-cases.sh: use the $( ... ) construct for command substitution
t/t7700-repack.sh: use the $( ... ) construct for command substitution
t/t7602-merge-octopus-many.sh: use the $( ... ) construct for command substitution
t/t7505-prepare-commit-msg-hook.sh: use the $( ... ) construct for command substitution
t/t7504-commit-msg-hook.sh: use the $( ... ) construct for command substitution
t/t7408-submodule-reference.sh: use the $( ... ) construct for command substitution
t/t7406-submodule-update.sh: use the $( ... ) construct for command substitution
t/t7103-reset-bare.sh: use the $( ... ) construct for command substitution
docs: clarify that --depth for git-fetch works with newly initialized repos
docs: say "commits" in the --depth option wording for git-clone
Revert "dir.c: don't exclude whole dir prematurely if neg pattern may match"
t/t7006-pager.sh: use the $( ... ) construct for command substitution
t/t7004-tag.sh: use the $( ... ) construct for command substitution
t/t7003-filter-branch.sh: use the $( ... ) construct for command substitution
t/t7001-mv.sh: use the $( ... ) construct for command substitution
t/t6132-pathspec-exclude.sh: use the $( ... ) construct for command substitution
t/t6032-merge-large-rename.sh: use the $( ... ) construct for command substitution
t/t6015-rev-list-show-all-parents.sh: use the $( ... ) construct for command substitution
t/t6002-rev-list-bisect.sh: use the $( ... ) construct for command substitution
t/t6001-rev-list-graft.sh: use the $( ... ) construct for command substitution
t/t5900-repo-selection.sh: use the $( ... ) construct for command substitution
docs: clarify that passing --depth to git-clone implies --single-branch
t/t5710-info-alternate.sh: use the $( ... ) construct for command substitution
t/t5700-clone-reference.sh: use the $( ... ) construct for command substitution
t/t5601-clone.sh: use the $( ... ) construct for command substitution
t/t5570-git-daemon.sh: use the $( ... ) construct for command substitution
t/t5550-http-fetch-dumb.sh: use the $( ... ) construct for command substitution
t/t5538-push-shallow.sh: use the $( ... ) construct for command substitution
t/t5537-fetch-shallow.sh: use the $( ... ) construct for command substitution
t/t5532-fetch-proxy.sh: use the $( ... ) construct for command substitution
t/t5530-upload-pack-error.sh: use the $( ... ) construct for command substitution
t/t5522-pull-symlink.sh: use the $( ... ) construct for command substitution
dir: free untracked cache when removing it
l10n: de.po: translate 68 new messages
l10n: de.po: improve some translations
t/t5517-push-mirror.sh: use the $( ... ) construct for command substitution
t/t5516-fetch-push.sh: use the $( ... ) construct for command substitution
t/t5515-fetch-merge-logic.sh: use the $( ... ) construct for command substitution
t/t5510-fetch.sh: use the $( ... ) construct for command substitution
t/t5506-remote-groups.sh: use the $( ... ) construct for command substitution
t/t5505-remote.sh: use the $( ... ) construct for command substitution
t/t5500-fetch-pack.sh: use the $( ... ) construct for command substitution
t/t5305-include-tag.sh: use the $( ... ) construct for command substitution
t/t5304-prune.sh: use the $( ... ) construct for command substitution
t/t5303-pack-corruption-resilience.sh: use the $( ... ) construct for command substitution
t/t5302-pack-index.sh: use the $( ... ) construct for command substitution
t/t5301-sliding-window.sh: use the $( ... ) construct for command substitution
t/t5300-pack-object.sh: use the $( ... ) construct for command substitution
t/t5100-mailinfo.sh: use the $( ... ) construct for command substitution
t/t3700-add.sh: use the $( ... ) construct for command substitution
t/t3600-rm.sh: use the $( ... ) construct for command substitution
t/t3511-cherry-pick-x.sh: use the $( ... ) construct for command substitution
t/t3403-rebase-skip.sh: use the $( ... ) construct for command substitution
t/t3210-pack-refs.sh: use the $( ... ) construct for command substitution
t/t3101-ls-tree-dirname.sh: use the $( ... ) construct for command substitution
dir.c: clean the entire struct in clear_exclude_list()
grep: make it clear i-t-a entries are ignored
l10n: ru.po: update Russian translation
Merge branch 'master' of git://github.com/alshopov/git-po
l10n: ca.po: update translation
t/t3100-ls-tree-restrict.sh: use the $( ... ) construct for command substitution
t/t3030-merge-recursive.sh: use the $( ... ) construct for command substitution
t/t2102-update-index-symlinks.sh: use the $( ... ) construct for command substitution
t/t2025-worktree-add.sh: use the $( ... ) construct for command substitution
t/t1700-split-index.sh: use the $( ... ) construct for command substitution
t/t1512-rev-parse-disambiguation.sh: use the $( ... ) construct for command substitution
t/t1511-rev-parse-caret.sh: use the $( ... ) construct for command substitution
t/t1410-reflog.sh: use the $( ... ) construct for command substitution
t/t1401-symbolic-ref.sh: use the $( ... ) construct for command substitution
t/t1100-commit-tree-options.sh: use the $( ... ) construct for command substitution
unimplemented.sh: use the $( ... ) construct for command substitution
test-sha1.sh: use the $( ... ) construct for command substitution
t/lib-httpd.sh: use the $( ... ) construct for command substitution
git-gui/po/glossary/txt-to-pot.sh: use the $( ... ) construct for command substitution
contrib/thunderbird-patch-inline/appp.sh: use the $( ... ) construct for command substitution
contrib/examples/git-revert.sh: use the $( ... ) construct for command substitution
contrib/examples/git-repack.sh: use the $( ... ) construct for command substitution
contrib/examples/git-merge.sh: use the $( ... ) construct for command substitution
contrib/examples/git-fetch.sh: use the $( ... ) construct for command substitution
contrib/examples/git-commit.sh: use the $( ... ) construct for command substitution
l10n: zh_CN: for git v2.7.0 l10n round 2
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
push: don't mark options of recurse-submodules for translation
git.c: make sure we do not leak GIT_* to alias scripts
setup.c: re-fix d95138e (setup: set env $GIT_WORK_TREE when ..
git.c: make it clear save_env() is for alias handling only
Revert "setup: set env $GIT_WORK_TREE when work tree is set, like $GIT_DIR"
l10n: git.pot: v2.7.0 round 2 (2 new, 2 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
l10n: zh_CN: for git v2.7.0 l10n round 1
Merge branch 'master' of git://github.com/alexhenrie/git-po
Merge branch 'fr_v2.7.0' of git://github.com/jnavila/git
Merge branch 'master' of git://github.com/alshopov/git-po
l10n: ca.po: update translation
submodule.c: write "Fetching submodule <foo>" to stderr
grep: add --threads=<num> option and grep.threads configuration
Makefile: add missing phony target
blame: add support for --[no-]progress option
grep: slight refactoring to the code that disables threading
grep: allow threading even on a single-core machine
l10n: vi.po: Updated translation (2477t)
gitk: Let .bleft.mid widgets 'breathe'
gitk: Match ttk fonts to gitk fonts
rebase -i: remember merge options beyond continue actions
l10n: git.pot: v2.7.0 round 1 (66 new, 29 removed)
Merge branch 'master' of git://github.com/git-l10n/git-po
Documentation/git-update-index: add missing opts to synopsis
git-p4: add option to keep empty commits
revision.c: fix possible null pointer arithmetic
git-check-ref-format.txt: typo, s/avoids/avoid/
ident.c: add support for IPv6
Add Travis CI support
add "ok=sigpipe" to test_must_fail and use it to fix flaky tests
implement test_might_fail using a refactored test_must_fail
Documentation/git-update-index: add missing opts to synopsys
completion: add support for completing email aliases
git-p4: add trap to kill p4d on test exit
sendemail: teach git-send-email to dump alias names
git-p4: add p4d timeout in tests
git-p4: retry kill/cleanup operations in tests with timeout
rebase-i-exec: Allow space in SHELL_PATH
contrib/subtree: Handle '--prefix' argument with a slash appended
contrib/subtree: Make each test self-contained
contrib/subtree: Add split tests
contrib/subtree: Add merge tests
contrib/subtree: Add tests for subtree add
contrib/subtree: Add test for missing subtree
contrib/subtree: Clean and refactor test code
Documentation: make environment variable formatting more consistent
contrib/subtree: remove "push" command from the "todo" file
gc: remove garbage .idx files from pack dir
t5304: test cleaning pack garbage
checkout: add --progress option
mailinfo: fix passing wrong address to git_mailinfo_config
ref-filter: fallback on alphabetical comparison
gitk: Update Russian translation
gitk: l10n: Update Catalan translation
difftool: ignore symbolic links in use_wt_file
Correct fscanf formatting string for I64u values
user-manual: fix the description of fast-forward
clone: allow "--dissociate" without reference
Documentation: fix header markup
worktree: usage: denote <branch> as optional with 'add'
tag.c: use the correct algorithm for the '--contains' option
am, credential-cache: add angle brackets to usage string
pull: enclose <options> in brackets in the usage string
filter-branch: remove multi-line headers in msg filter
git-p4: skip t9819 test case on case insensitive file systems
git-p4: avoid "stat" command in t9815 git-p4-submit-fail
test-path-utils.c: remove incorrect assumption
worktree: add 'list' command
worktree: add details to the worktree struct
worktree: add a function to get worktree details
worktree: refactor find_linked_symref function
quote: move comment before sq_quote_buf()
quote: fix broken sq_quote_buf() related comment
log: Update log.follow doc and add to config.txt
git-p4: add Git LFS backend for large file system
git-p4: add support for large file systems
git-p4: check free space during streaming
git-p4: add file streaming progress in verbose mode
git-p4: return an empty list if a list config has no values
git-p4: add gitConfigInt reader
git-p4: add optional type specifier to gitConfig reader
merge: grammofix in please-commit-before-merge message
worktree: add top-level worktree.c
am: configure gpg at startup
l10n: ru.po: update Russian translation
ls-remote.txt: delete unsupported option
clone: better error when --reference is a linked checkout
clone: allow --local from a linked checkout
enter_repo: allow .git files in strict mode
enter_repo: avoid duplicating logic, use is_git_directory() instead
t0002: add test for enter_repo(), non-strict mode
branch: add '--points-at' option
branch.c: use 'ref-filter' APIs
branch.c: use 'ref-filter' data structures
branch: drop non-commit error reporting
branch: move 'current' check down to the presentation layer
branch: roll show_detached HEAD into regular ref_list
branch: bump get_head_description() to the top
branch: refactor width computation
notes: correct documentation of DWIMery for notes references
git-p4: handle "Translation of file content failed"
git-p4: add test case for "Translation of file content failed" error
git-p4: use replacement character for non UTF-8 characters in paths
dir.c: don't exclude whole dir prematurely if neg pattern may match
dir.c: make last_exclude_matching_from_list() run til the end
send-email: fix uninitialized var warning for $smtp_auth
gc: save log from daemonized gc --auto and print it next time
l10n: de.po: better language for one string
l10n: de.po: translate 2 messages
l10n: Update and review Vietnamese translation (2440t)
l10n: zh_CN: for git v2.6.0 l10n round 2
l10n: ca.po: update translation
l10n: git.pot: v2.6.0 round 2 (3 improvements)
Merge branch 'master' of git://github.com/git-l10n/git-po
l10n: de.po: translate 123 new messages
remote: add get-url subcommand
tag.c: implement '--merged' and '--no-merged' options
tag.c: implement '--format' option
tag.c: use 'ref-filter' APIs
tag.c: use 'ref-filter' data structures
ref-filter: add option to match literal pattern
ref-filter: add support to sort by version
ref-filter: add support for %(contents:lines=X)
ref-filter: add option to filter out tags, branches and remotes
ref-filter: implement an `align` atom
ref-filter: introduce match_atom_name()
ref-filter: introduce handler function for each atom
utf8: add function to align a string into given strbuf
ref-filter: introduce ref_formatting_state and ref_formatting_stack
ref-filter: move `struct atom_value` to ref-filter.c
git-p4: improve path encoding verbose output
Updated Vietnamese translation
gitk: Accelerators for the main menu
tag, update-ref: improve description of option "create-reflog"
pull: don't mark values for option "rebase" for translation
Merge branch 'master' of github.com:jiangxin/git
apply: comment grammar fix
contrib/subtree: respect spaces in a repository path
t7900-subtree: test the "space in a subdirectory name" case
l10n: zh_CN: for git v2.6.0 l10n round 1
path.c: delete an extra space
add and use a convenience macro ce_intent_to_add()
l10n: Updated Vietnamese translation (2441t)
Merge branch 'master' of github.com:jiangxin/git into master
l10n: git.pot: v2.6.0 round 1 (123 new, 41 removed)
git-p4: add config git-p4.pathEncoding
t7060: actually test "git diff-index --cached -M"
stash: allow "stash show" diff output configurable
trailer: support multiline title
t7300: fix broken && chains
show-ref: place angle brackets around variables in usage string
read-tree: replace bracket set with parentheses to clarify usage
pack-objects: place angle brackets around placeholders in usage strings
git-submodule: remove extraneous space from error message
lockfile: remove function "hold_lock_file_for_append"
Mingw: verify both ends of the pipe () call
git-p4: honor core.ignorecase when using P4 client specs
reflog: add missing single quote to error message
i18n: am: fix typo in description of -b option
trailer: retitle a test and correct an in-comment message
git-svn doc: mention "svn-remote.<name>.include-paths"
blame: remove obsolete comment
setup: update the right file in multiple checkouts
l10n: zh_CN: Update Git Glossary: "commit message"
l10n: zh_CN: Update Git Glossary: pickaxe
l10n: zh_CN: Update Git Glossary: fork
l10n: zh_CN: Update Git Glossary: tag
l10n: zh_CN: Update Git Glossary: "dumb", "smart"
l10n: zh_CN: Update Git Glossary: SHA-1
trailer: ignore first line of message
am --skip/--abort: merge HEAD/ORIG_HEAD tree into index
untracked cache: fix entry invalidation
t7063: use --force-untracked-cache to speed up a bit
notes: teach git-notes about notes.<name>.mergeStrategy option
notes: add notes.mergeStrategy option to select default strategy
notes: add tests for --commit/--abort/--strategy exclusivity
notes: extract parse_notes_merge_strategy to notes-utils
notes: extract enum notes_merge_strategy to notes-utils.h
notes: document cat_sort_uniq rewriteMode
http: add support for specifying the SSL version
am: let --signoff override --no-signoff
am: let command-line options override saved options
test_terminal: redirect child process' stdin to a pty
strbuf_read(): skip unnecessary strbuf_grow() at eof
l10n: zh_CN: Add Surrounding Spaces
l10n: zh_CN: Add translations for Git glossary
builtin-am: remove redirection to git-am.sh
builtin-am: check for valid committer ident
builtin-am: implement legacy -b/--binary option
builtin-am: implement -i/--interactive
builtin-am: support and auto-detect mercurial patches
builtin-am: support and auto-detect StGit series files
builtin-am: support and auto-detect StGit patches
builtin-am: rerere support
builtin-am: invoke post-applypatch hook
builtin-am: invoke pre-applypatch hook
builtin-am: invoke applypatch-msg hook
builtin-am: support automatic notes copying
builtin-am: invoke post-rewrite hook
builtin-am: implement -S/--gpg-sign, commit.gpgsign
builtin-am: implement --committer-date-is-author-date
builtin-am: implement --ignore-date
builtin-am: pass git-apply's options to git-apply
builtin-am: implement --[no-]scissors
builtin-am: support --keep-cr, am.keepcr
builtin-am: implement --[no-]message-id, am.messageid
builtin-am: implement -k/--keep, --keep-non-patch
builtin-am: implement -u/--utf8
builtin-am: handle stray state directory
builtin-am: bypass git-mailinfo when --rebasing
builtin-am: implement --rebasing mode
builtin-am: implement --3way
cache-tree: introduce write_index_as_tree()
builtin-am: implement -s/--signoff
builtin-am: exit with user friendly message on failure
builtin-am: implement -q/--quiet
builtin-am: reject patches when there's a session in progress
builtin-am: implement --abort
builtin-am: implement --skip
builtin-am: don't parse mail when resuming
builtin-am: implement --resolved/--continue
builtin-am: refuse to apply patches if index is dirty
builtin-am: implement committing applied patch
builtin-am: apply patch with git-apply
builtin-am: extract patch and commit info with git-mailinfo
builtin-am: auto-detect mbox patches
builtin-am: split out mbox/maildir patches with git-mailsplit
builtin-am: implement patch queue mechanism
builtin-am: implement skeletal builtin am
wrapper: implement xfopen()
wrapper: implement xopen()
for-each-ref: add '--contains' option
ref-filter: implement '--contains' option
parse-options.h: add macros for '--contains' option
parse-option: rename parse_opt_with_commit()
for-each-ref: add '--merged' and '--no-merged' options
ref-filter: implement '--merged' and '--no-merged' options
ref-filter: add parse_opt_merge_filter()
for-each-ref: add '--points-at' option
ref-filter: implement '--points-at' option
tag: libify parse_opt_points_at()
t6302: for-each-ref tests for ref-filter APIs
ref-filter: make 'ref_array_item' use a FLEX_ARRAY for refname
for-each-ref: introduce filter_refs()
ref-filter: move code from 'for-each-ref'
l10n: TEAMS: stash inactive zh_CN team members
l10n: zh_CN: Update Translation of "tag"
l10n: zh_CN: Unify Translation of "packfile"
refs: loosen restriction on wildcard "*" refspecs
refs: cleanup comments regarding check_refname_component()
l10n: zh_CN: Update Translation: "tag object"
contrib/subtree: ignore log.date configuration
receive-pack: crash when checking with non-exist HEAD
l10n: ca.po: update translation
t3901: test git-am encoding conversion
t3418: non-interactive rebase --continue with rerere enabled
t4150: tests for am --[no-]scissors
t4150: am with post-applypatch hook
t4150: am with pre-applypatch hook
t4150: am with applypatch-msg hook
t4150: am --resolved fails if index has unmerged entries
t4150: am --resolved fails if index has no changes
t4150: am refuses patches when paused
t4151: am --abort will keep dirty index intact
t4150: am fails if index is dirty
Merge branch 'master' of https://github.com/ralfth/git-po-de
l10n: de.po: translate 9 new messages
rev-parse --parseopt: allow [*=?!] in argument hints
l10n: zh_CN: for git v2.5.0 l10n round 2
Merge branch 'fr_v2.5.0-round2' of git://github.com/jnavila/git
Merge branch 'russian-l10n' of https://github.com/DJm00n/git-po-ru
l10n: ru.po: update Russian translation
l10n: Updated Vietnamese translation (2359t)
l10n: git.pot: v2.5.0 round 2 (9 new, 5 removed)
Documentation/tag: remove double occurance of "<pattern>"
clone: simplify string handling in guess_dir_name()
l10n: de.po: translate 65 new messages
l10n: de.po: translate "index" as "Index"
l10n: de.po: fix translation of "head nodes"
t4150: am.messageid really adds the message id
l10n: zh_CN: for git v2.5.0 l10n round 1
l10n: ca.po: update translation
Merge branch 'fr_2.5.0_round1' of git://github.com/jnavila/git
Documentation/i18n.txt: clarify character encoding support
Makefile / racy-git.txt: clarify USE_NSEC prerequisites
Add tests for wildcard "path vs ref" disambiguation
rev-list: add --count to usage guide
config.c: fix writing config files on Windows network shares
worktree: new place for "git prune --worktrees"
Merge branch 'master' of git://github.com/alshopov/git-po
l10n: Updated Vietnamese translation (2355t)
l10n: git.pot: v2.5.0 round 1 (65 new, 15 removed)
setup: set env $GIT_WORK_TREE when work tree is set, like $GIT_DIR
cvsimport: silence regex warning appearing in Perl 5.22.
pull: remove redirection to git-pull.sh
pull --rebase: error on no merge candidate cases
pull --rebase: exit early when the working directory is dirty
pull: configure --rebase via branch.<name>.rebase or pull.rebase
pull: teach git pull about --rebase
pull: set reflog message
pull: implement pulling into an unborn branch
pull: fast-forward working tree if head is updated
pull: check if in unresolved merge state
pull: support pull.ff config
pull: error on no merge candidates
pull: pass git-fetch's options to git-fetch
clean: improve performance when removing lots of directories
p7300: add performance tests for clean
t7300: add tests to document behavior of clean and nested git
setup: sanity check file size in read_gitfile_gently
pull: pass git-merge's options to git-merge
pull: pass verbosity, --progress flags to fetch and merge
pull: implement fetch + merge
pull: implement skeletal builtin pull
argv-array: implement argv_array_pushv()
parse-options-cb: implement parse_opt_passthru_argv()
parse-options-cb: implement parse_opt_passthru()
am: teach mercurial patch parser how to read from stdin
am: use gmtime() to parse mercurial patch date
t4150: test applying StGit series
am: teach StGit patch parser how to read from stdin
ref-filter: add 'ref-filter.h'
for-each-ref: rename variables called sort to sorting
for-each-ref: rename some functions and make them public
for-each-ref: introduce 'ref_array_clear()'
for-each-ref: introduce new structures for better organisation
for-each-ref: rename 'refinfo' to 'ref_array_item'
for-each-ref: clean up code
for-each-ref: extract helper functions out of grab_single_ref()
git-rebase--interactive.sh: add config option for custom instruction format
hooks/pre-auto-gc: adjust power checking for newer OS X
checkout: don't check worktrees when not necessary
t0302: "unreadable" test needs SANITY prereq
l10n: de.po: change error message from "sagen" to "Meinten Sie"
doc: format-patch: fix typo
setup: add gentle version of read_gitfile
am --abort: keep unrelated commits on unborn branch
am --abort: support aborting to unborn branch
am --abort: revert changes introduced by failed 3way merge
am --skip: support skipping while on unborn branch
am -3: support 3way merge on unborn branch
am --skip: revert changes introduced by failed 3way merge
t4150: test applying StGit patch
read-cache: fix untracked cache invalidation when split-index is used
pull: use git-rev-parse --parseopt for option parsing
pull: handle git-fetch's options as well
blame: add blame.showEmail configuration
t5520: check reflog action in fast-forward merge
t5521: test --dry-run does not make any changes
t5520: test --rebase failure on unborn branch with index
t5520: test --rebase with multiple branches
t5520: test work tree fast-forward when fetch updates head
t5520: test for failure if index has unresolved entries
p4: retrieve the right revision of the file in UTF-16 codepath
send-email: add sendmail email aliases format
upload-pack: optionally allow fetching reachable sha1
upload-pack: prepare to extend allow-tip-sha1-in-want
config.txt: clarify allowTipSHA1InWant with camelCase
help: respect new common command grouping
command-list.txt: drop the "common" tag
command-list.txt: add the common groups block
mergetools: add winmerge as a builtin tool
mergetool--lib: set IFS for difftool and mergetool
Documentation/git-commit: grammofix
pull: parse pull.ff as a bool or string
pull: make pull.ff=true override merge.ff
pull: handle --log=<n>
t5520: test no merge candidates cases
t5520: prevent field splitting in content comparisons
sha1_file: pass empty buffer to index empty file
gitk: Add mouse right-click options to copy path and branch name
gitk: Remove mc parameter from proc show_error
pull: remove --tags error in no merge candidates case
command-list.txt: fix whitespace inconsistency
contrib/subtree: portability fix for string printing
contrib/subtree: there's no push --squash
t1006: add tests for git cat-file --allow-unknown-type
cat-file: teach cat-file a '--allow-unknown-type' option
cat-file: make the options mutually exclusive
sha1_file: support reading from a loose object of unknown type
branch: do not call a "remote-tracking branch" a "remote branch"
path.c: remove home_config_paths()
git-config: replace use of home_config_paths()
git-commit: replace use of home_config_paths()
credential-store.c: replace home_config_paths() with xdg_config_home()
dir.c: replace home_config_paths() with xdg_config_home()
attr.c: replace home_config_paths() with xdg_config_home()
path.c: implement xdg_config_home()
git-compat-util.h: implement a different ARRAY_SIZE macro for for safely deriving the size of array
config: use error() instead of fprintf(stderr, ...)
blame, log: format usage strings similarly to those in documentation
pathspec: avoid the need of "--" when wildcard is used
git-p4: improve client path detection when branches are used
t9801: check git-p4's branch detection with client spec enabled
t1509: update prepare script to be able to run t1509 in chroot again
index-pack: kill union delta_base to save memory
config: fix settings in default_user_config template
test-lib-functions.sh: fix the second argument to some helper functions
CodingGuidelines: update 'rough' rule count
completion: fix global bash variable leak on __gitcompappend
t9814: guarantee only one source exists in git-p4 copy tests
Merge branch 'master' of git://github.com/alexhenrie/git-po
l10n: TEAMS: Change repository URL of zh_CN
l10n: ca.po: update translation
gitk: Fix bad English grammar "Matches none Commit Info"
l10n: de.po: translate one message
diff-highlight: do not split multibyte characters
l10n: ru: updated Russian translation
l10n: vi.po(2305t): Updated 1 new string
l10n: zh_CN: for git v2.4.0 l10n round 2
l10n: git.pot: v2.4.0 round 2 (1 update)
Merge branch 'master' of git://github.com/git-l10n/git-po
checkout: call a single commit "it" intead of "them"
send-pack: unify error messages for unsupported capabilities
l10n: de.po: translate 'symbolic link' as 'symbolische Verknüpfung'
l10n: de.po: translate 99 new messages
l10n: de.po: fix messages with abbreviated hashs
l10n: de.po: add space before ellipsis
fast-import doc: remove suggested 16-parent limit
enter_repo(): fix docs to match code
l10n: vi.po: Updated Vietnamese translation
l10n: zh_CN: translations for git v2.4.0-rc0
Merge branch 'fr-v2.4.0-rc0' of git://github.com/jnavila/git
docs: clarify what git-rebase's "-p" / "--preserve-merges" does
parse-options.h: OPTION_{BIT,SET_INT} do not store pointer to defval
l10n: ca.po: update translation
git-p4: fix copy detection test
t9814: fix broken shell syntax in git-p4 rename test
l10n: ru: updated Russian translation
Merge branch 'maint'
l10n: git.pot: v2.4.0 round 1 (99 new, 92 removed)
Merge branch 'russian-l10n' of https://github.com/DJm00n/git-po-ru
docs: clarify "preserve" option wording for git-pull
t1501: fix test with split index
t0302: test credential-store support for XDG_CONFIG_HOME
git-credential-store: support XDG_CONFIG_HOME
git-credential-store: support multiple credential files
git.txt: list index versions in plain English
diff-lib.c: adjust position of i-t-a entries in diff
l10n: ru: added Russian translation
read-cache: fix reading of split index
t1700: make test pass with index-v4
revision: forbid combining --graph and --no-walk
gitk: l10n: Add Catalan translation
gitk: Fix typo in Russian translation
gitk: Remove tcl-format flag from a message that shouldn't have it
*config.txt: stick to camelCase naming convention
git-status.txt: advertisement for untracked cache
untracked cache: guard and disable on system changes
mingw32: add uname()
t7063: tests for untracked cache
update-index: test the system before enabling untracked cache
update-index: manually enable or disable untracked cache
status: enable untracked cache
untracked-cache: temporarily disable with $GIT_DISABLE_UNTRACKED_CACHE
untracked cache: mark index dirty if untracked cache is updated
untracked cache: print stats with $GIT_TRACE_UNTRACKED_STATS
untracked cache: avoid racy timestamps
read-cache.c: split racy stat test to a separate function
untracked cache: invalidate at index addition or removal
untracked cache: load from UNTR index extension
untracked cache: save to an index extension
ewah: add convenient wrapper ewah_serialize_strbuf()
untracked cache: don't open non-existent .gitignore
untracked cache: mark what dirs should be recursed/saved
untracked cache: record/validate dir mtime and reuse cached output
untracked cache: make a wrapper around {open,read,close}dir()
untracked cache: invalidate dirs recursively if .gitignore changes
untracked cache: initial untracked cache validation
untracked cache: record .gitignore information and dir hierarchy
dir.c: optionally compute sha-1 of a .gitignore file
t7510: do not fail when gpg warns about insecure memory
t5528: do not fail with FreeBSD shell
imap-send: use cURL automatically when NO_OPENSSL defined
thread-utils.c: detect CPU count on older BSD-like systems
configure: support HAVE_BSD_SYSCTL option
help.c: use SHELL_PATH instead of hard-coded "/bin/sh"
git-compat-util.h: move SHELL_PATH default into header
git-instaweb: use @SHELL_PATH@ instead of /bin/sh
git-instaweb: allow running in a working tree subdirectory
config.txt: update versioncmp.prereleaseSuffix
git-gui: Makes chooser set 'gitdir' to the resolved path
git-gui: Fixes chooser not accepting gitfiles
git: treat "git -C '<path>'" as a no-op when <path> is empty
git: make was_alias and done_help non-static
kwset: use unsigned char to store values with high-bit set
diff --shortstat --dirstat: remove duplicate output
gitk: Enable mouse horizontal scrolling in diff pane
gitk: Default wrcomcmd to use --pretty=email
versionsort: support reorder prerelease suffixes
index-pack: reduce object_entry size to save memory
grep: correct help string for --exclude-standard
Git::SVN::*: avoid premature FileHandle closure
git-svn: fix localtime=true on non-glibc environments
Git.pm: two minor typo fixes
git-send-email.perl: support no- prefix with older GetOptions
merge-file: correctly open files when in a subdir
git-compat-util: do not step on MAC_OS_X_VERSION_MIN_REQUIRED
check-builtins: strip executable suffix $X when enumerating builtins
l10n: ca.po: Fix trailing whitespace
Merge branch 'master' of git://github.com/alexhenrie/git-po
l10n: ca.po: update translation
add -i: return from list_and_choose if there is no candidate
Documentation: fix version numbering
t/lib-terminal.sh: fix typo
pack-bitmap: fix typo
l10n: correct indentation of show-branch usage
Merge branch 'master' of git://github.com/git-l10n/git-po
show-branch: fix indentation of usage string
l10n: de.po: translate 3 messages
l10n: zh_CN: various fixes on command arguments
Merge branch 'v2.3.0' of git://github.com/jnavila/git
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
l10n: vi.po(2298t): Updated 3 new strings
l10n: git.pot: v2.3.0 round 2 (3 updated)
Merge branch 'master' of git://github.com/git-l10n/git-po
l10n: de.po: translate 13 new messages
l10n: de.po: fix typo
l10n: de.po: translate "track" as "versionieren"
l10n: zh_CN: translations for git v2.3.0-rc0
git-svn: make it play nicely with submodules
Git::SVN: handle missing ref_id case correctly
standardize usage info string format
cat-file: use "type" and "size" from outer scope
l10n: vi.po(2298t): Updated and change Plural-Forms
l10n: git.pot: v2.3.0 round 1 (13 new, 11 removed)
Merge branch 'master' of git://github.com/alexhenrie/git-po
git-gui: reinstate support for Tcl 8.4
gettext.h: add parentheses around N_ expansion if supported
Documentation: list long options for -v and -n
cat-file: remove unused includes
git.c: remove unnecessary #includes
configure.ac: check for HMAC_CTX_cleanup
configure.ac: check for clock_gettime and CLOCK_MONOTONIC
configure.ac: check 'tv_nsec' field in 'struct stat'
rerere: error out on autoupdate failure
show-branch: line-wrap show-branch usage
format-patch: ignore diff.submodule setting
t4255: test am submodule with diff.submodule
git-prompt.sh: allow to hide prompt for ignored pwd
git-checkout.txt: a note about multiple checkout support for submodules
checkout: add --ignore-other-wortrees
checkout: pass whole struct to parse_branchname_arg instead of individual flags
imap-send.c: set CURLOPT_USE_SSL to CURLUSESSL_TRY
imap-send.c: support GIT_CURL_VERBOSE
log.c: fix translation markings
attr: avoid heavy work when we know the specified attr is not defined
attr: do not attempt to expand when we know it's not a macro
attr.c: rename arg name attr_nr to avoid shadowing the global one
t0090: tweak awk statement for Solaris /usr/xpg4/bin/awk
pre-push.sample: remove unnecessary and misleading IFS=' '
clean: typofix
git-prompt.sh: make $f local to __git_eread()
index-format.txt: add a missing closing quote
git-am.txt: --ignore-date flag is not passed to git-apply
index-pack: terminate object buffers with NUL
doc: document error handling functions and conventions
completion: add git-tag options
compat: convert modes to use portable file type values
ls-tree: disable negative pathspec because it's not supported
ls-tree: remove path filtering logic in show_tree
tree.c: update read_tree_recursive callback to pass strbuf as base
t2025: add a test to make sure grafts is working from a linked checkout
git_path(): keep "info/sparse-checkout" per work-tree
count-objects: report unused files in $GIT_DIR/worktrees/...
gc: support prune --worktrees
gc: factor out gc.pruneexpire parsing code
gc: style change -- no SP before closing parenthesis
checkout: clean up half-prepared directories in --to mode
checkout: reject if the branch is already checked out elsewhere
prune: strategies for linked checkouts
checkout: support checking out into a new working directory
use new wrapper write_file() for simple file writing
wrapper.c: wrapper to open a file, fprintf then close
setup.c: support multi-checkout repo setup
setup.c: detect $GIT_COMMON_DIR check_repository_format_gently()
setup.c: convert check_repository_format_gently to use strbuf
setup.c: detect $GIT_COMMON_DIR in is_git_directory()
setup.c: convert is_git_directory() to use strbuf
git-stash: avoid hardcoding $GIT_DIR/logs/....
*.sh: avoid hardcoding $GIT_DIR/hooks/...
git-sh-setup.sh: use rev-parse --git-path to get $GIT_DIR/objects
$GIT_COMMON_DIR: a new environment variable
commit: use SEQ_DIR instead of hardcoding "sequencer"
fast-import: use git_path() for accessing .git dir instead of get_git_dir()
reflog: avoid constructing .lock path with git_path
*.sh: respect $GIT_INDEX_FILE
git_path(): be aware of file relocation in $GIT_DIR
path.c: group git_path(), git_pathdup() and strbuf_git_path() together
path.c: rename vsnpath() to do_git_path()
git_snpath(): retire and replace with strbuf_git_path()
path.c: make get_pathname() call sites return const char *
path.c: make get_pathname() return strbuf instead of static buffer
for-each-ref: correct spelling of Tcl in option description
Merge branch 'master' of https://github.com/ralfth/git-po-de
git-sh-setup.sh: use dashdash with basename call
mergetools: stop setting $status in merge_cmd()
mergetool: simplify conditionals
difftool--helper: add explicit exit statement
mergetool--lib: remove use of $status global
l10n: remove a superfluous translation for push.c
l10n: de.po: translate 2 messages
l10n: de.po: translate 2 new messages
l10n: batch updates for one trivial change
l10n: git.pot: v2.2.0 round 2 (1 updated)
builtin/push.c: fix description of --recurse-submodules option
Makefile: have python scripts depend on NO_PYTHON setting
Makefile: simplify by using SCRIPT_{PERL,SH}_GEN macros
l10n: Update Catalan translation
l10n: de.po: translate 62 new messages
l10n: de.po: Fixup one translation
difftool: honor --trust-exit-code for builtin tools
l10n: de.po: use imperative form for command options
gittutorial: fix output of 'git status'
config.txt: fix typo
git-gui/gitk: Do not depend on Cygwin's "kill" command on Windows
line-log: fix crash when --first-parent is used
lockfile.c: store absolute path
l10n: zh_CN: translations for git v2.2.0-rc0
Merge branch 'fr_2.2.0' of git://github.com/jnavila/git
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
l10n: vi.po: Update new message strings
l10n: git.pot: v2.2.0 round 1 (62 new, 23 removed)
gitk: Do not depend on Cygwin's "kill" command on Windows
difftool: add support for --trust-exit-code
compat/bswap.h: detect endianness from XL C compiler macros
Makefile: reorder linker flags in the git executable rule
git-compat-util.h: support variadic macros with the XL C compiler
dir.c: remove the second declaration of "stk" in prep_exclude()
Handle atexit list internaly for unthreaded builds
t7610-mergetool: add test cases for mergetool.writeToTemp
mergetool: add an option for writing to a temporary directory
mergetool: use more conservative temporary filenames
test-lib-functions: adjust style to match CodingGuidelines
t7610-mergetool: use test_config to isolate tests
mergetools/meld: make usage of `--output` configurable and more robust
contacts: add a Makefile to generate docs and install
subtree: add an install-html target
git-sh-setup: move GIT_DIR initialization into a function
mergetool: use more conservative temporary filenames
test-lib-functions: adjust style to match CodingGuidelines
t7610-mergetool: prefer test_config over git config
t7610-mergetool: add missing && and remove commented-out code
t7610-mergetool: use tabs instead of a mix of tabs and spaces
ref_transaction_commit: bail out on failure to remove a ref
lockfile: remove unable_to_lock_error
refs.c: do not permit err == NULL
packed-ref cache: forbid dot-components in refnames
branch -d: avoid repeated symref resolution
mv test: recreate mod/ directory instead of relying on stale copy
pass config slots as pointers instead of offsets
index-pack: fix compilation with NO_PTHREADS
completion: add --show-signature for log and show
git-tag.txt: Add a missing hyphen to `-s`
trace.c: do not mark getnanotime() as "inline"
Documentation/git-rebase.txt: document when --fork-point is auto-enabled
t/lib-credential: use write_script
l10n: de.po: use comma before "um"
l10n: de.po: change Email to E-Mail
po/TEAMS: add new member to German translation team
merge-recursive: remove stale commented debugging code
merge-recursive: fix copy-paste mistake
t6031-test-merge-recursive: do not forget to add file to be committed
t9300-fast-import: fix typo in test description
archive: support filtering paths with glob
stash: prefer --quiet over shell redirection of the standard error stream
refs: make rev-parse --quiet actually quiet
help: fix the size passed to qsort
Documentation/git-rebase.txt: <upstream> must be given to specify <branch>
t1503: use test_must_be_empty
Documentation: a note about stdout for git rev-parse --verify --quiet
cleanups: ensure that git-compat-util.h is included first
compat-util: add _DEFAULT_SOURCE define
Makefile: fix some typos in the preamble
builtin/log.c: mark strings for translation
rerere.h: mark string for translation
git-svn: branch: avoid systematic prompt for cert/pass
mv: no SP between function name and the first opening parenthese
mv: combine two if(s)
mv: unindent one level for directory move code
mv: move index search code out
mv: remove an "if" that's always true
mv: split submodule move preparation code out
calloc() and xcalloc() takes nmemb and then size
update-ref --stdin: pass transaction around explicitly
update-ref --stdin: narrow scope of err strbuf
grammofix in user-facing messages
stylefix: asterisks stick to the variable, not the type
read_index_unmerged(): remove unnecessary loop index adjustment
read_index_from(): catch out of order entries when reading an index file
po/TEAMS: add new members to German translation team
l10n: de.po: translate 38 new messages
checkout -m: attempt merge when deletion of path was staged
i18n: treat "make pot" as an explicitly-invoked target
l10n: de.po: improve message when switching branches
l10n: de.po: fix typo
po/TEAMS: Add Catalan team
l10n: Add Catalan translation
make config --add behave correctly for empty and NULL values
diff: shortcut for diff'ing two binary SHA-1 objects
diff --stat: mark any file larger than core.bigfilethreshold binary
diff.c: allow to pass more flags to diff_populate_filespec
sha1_file.c: do not die failing to malloc in unpack_compressed_entry
wrapper.c: introduce gentle xmallocz that does not die()
fetch: silence git-gc if --quiet is given
fetch: convert argv_gc_auto to struct argv_array
config.mak.uname: set NO_APPLE_COMMON_CRYPTO on older systems
builtin/apply.c: replace `git_config()` with `git_config_get_string_const()`
merge-recursive.c: replace `git_config()` with `git_config_get_int()`
ll-merge.c: refactor `read_merge_config()` to use `git_config_string()`
fast-import.c: replace `git_config()` with `git_config_get_*()` family
unpack-trees: use 'cuddled' style for if-else cascade
unpack-trees: simplify 'all other failures' case
mailsplit.c: remove dead code
Documentation/git-rebase.txt: -f forces a rebase that would otherwise be a no-op
builtin/blame.c: add translation to warning about failed revision walk
prepare_revision_walk(): check for return value in all places
utf8.c: fix strbuf_utf8_replace() consuming data beyond input string
mv: flatten error handling code block
mv: mark strings for translations
clone.c: don't leak memory in cmd_clone
remote.c: don't leak the base branch name in format_tracking_info
Documentation: git-init: flesh out example
Documentation: git-init: template directory: reword and cross-reference
Documentation: git-init: reword parenthetical statements
Documentation: git-init: --separate-git-dir: clarify
Documentation: git-init: template directory: reword
Documentation: git-init: list items facelift
Documentation: git-init: typographical fixes
branch.c: replace `git_config()` with `git_config_get_string()
alias.c: replace `git_config()` with `git_config_get_string()`
imap-send.c: replace `git_config()` with `git_config_get_*()` family
pager.c: replace `git_config()` with `git_config_get_value()`
builtin/gc.c: replace `git_config()` with `git_config_get_*()` family
rerere.c: replace `git_config()` with `git_config_get_*()` family
fetchpack.c: replace `git_config()` with `git_config_get_*()` family
archive.c: replace `git_config()` with `git_config_get_bool()` family
read-cache.c: replace `git_config()` with `git_config_get_*()` family
http-backend.c: replace `git_config()` with `git_config_get_bool()` family
daemon.c: replace `git_config()` with `git_config_get_bool()` family
add tests for `git_config_get_string_const()`
add a test for semantic errors in config files
rewrite git_config() to use the config-set API
config: add `git_die_config()` to the config-set API
change `git_config()` return value to void
add line number and file name info to `config_set`
various contrib: Fix links in man pages
Merge remote-tracking branch 'l10n/vi/vnwildman/master'
Merge branch 'master' of github.com:alshopov/git-po
l10n: vi.po (2257t): Update translation
pretty.c: make git_pretty_formats_config return -1 on git_config_string failure
l10n: zh_CN: translations for git v2.1.0-rc0
Merge commit 'bg/alshopov/master'
Merge remote-tracking branch 'sv/nafmo/master'
l10n: git.pot: v2.1.0 round 1 (38 new, 9 removed)
add documentation for writing config files
commit --amend: test specifies authorship but forgets to check
test-config: add tests for the config_set API
add `config_set` API for caching config-like files
.mailmap: combine Stefan Beller's emails
git.1: switch homepage for stats
replace memset with string-list initializers
string-list: add string_list initializer helper function
t0110/MinGW: skip tests that pass arbitrary bytes on the command line
.mailmap: map different names with the same email address together
config: use chmod() instead of fchmod()
MinGW: fix compile error due to missing ELOOP
sha1_file: do not add own object directory as alternate
prep_exclude: remove the artificial PATH_MAX limit
dir.h: move struct exclude declaration to top level
dir.c: coding style fix
api-trace.txt: add trace API documentation
progress: simplify performance measurement by using getnanotime()
wt-status: simplify performance measurement by using getnanotime()
git: add performance tracing for git's main() function to debug scripts
trace: add trace_performance facility to debug performance issues
trace: add high resolution timer function to debug performance issues
trace: add 'file:line' to all trace output
trace: move code around, in preparation to file:line output
trace: add current timestamp to all trace output
trace: disable additional trace output for unit tests
trace: add infrastructure to augment trace output with additional info
sha1_file: change GIT_TRACE_PACK_ACCESS logging to use trace API
Documentation/git.txt: improve documentation of 'GIT_TRACE*' variables
trace: improve trace performance
http-push.c: make CURLOPT_IOCTLDATA a usable pointer
cache.h: rename cache_def_free to cache_def_clear
log: fix indentation for --graph --show-signature
hashmap: add string interning API
hashmap: add simplified hashmap_get_from_hash() API
hashmap: improve struct hashmap member documentation
hashmap: factor out getting a hash code from a SHA1
symlinks: remove PATH_MAX limitation
submodule.c: use the ARRAY_SIZE macro
L10n: vi.po (543t): Init translation for Vietnamese
gitk: Catch mkdtemp errors
imap-send: use skip_prefix instead of using magic numbers
cleanup duplicate name_compare() functions
name-hash.c: replace cache_name_compare() with memcmp(3)
git-submodule.sh: avoid "test <cond> -a/-o <cond>"
trace: remove redundant printf format attribute
trace: consistently name the format parameter
trace: move trace declarations from cache.h to new trace.h
Win32: reliably detect console pipe handles
gitk: Use mktemp -d to avoid predictable temporary directories
gitk: Honor TMPDIR when viewing external diffs
gitk: Replace SHA1 entry field on keyboard paste
submodule: document "sync --recursive"
t1700: new tests for split-index mode
t2104: make sure split index mode is off for the version test
read-cache: force split index mode with GIT_TEST_SPLIT_INDEX
read-tree: note about dropping split-index mode or index version
read-tree: force split-index mode off on --index-output
rev-parse: add --shared-index-path to get shared index path
update-index --split-index: do not split if $GIT_DIR is read only
update-index: new options to enable/disable split index mode
split-index: strip pathname of on-disk replaced entries
split-index: do not invalidate cache-tree at read time
split-index: the reading part
split-index: the writing part
read-cache: mark updated entries for split index
read-cache: save deleted entries in split index
read-cache: mark new entries for split index
read-cache: split-index mode
read-cache: save index SHA-1 after reading
entry.c: update cache_changed if refresh_cache is set in checkout_entry()
cache-tree: mark istate->cache_changed on prime_cache_tree()
cache-tree: mark istate->cache_changed on cache tree update
cache-tree: mark istate->cache_changed on cache tree invalidation
unpack-trees: be specific what part of the index has changed
resolve-undo: be specific what part of the index has changed
update-index: be specific what part of the index has changed
read-cache: be specific what part of the index has changed
read-cache: be strict about "changed" in remove_marked_cache_entries()
read-cache: store in-memory flags in the first 12 bits of ce_flags
read-cache: relocate and unexport commit_locked_index()
read-cache: new API write_locked_index instead of write_index/write_cache
git-p4: fix submit in non --prepare-p4-only mode
Windows: allow using UNC path for git repository
test doc: test_write_lines does not split its arguments
git potty: restore environments after alias expansion
t/test-lib-functions.sh: avoid "test <cond> -a/-o <cond>"
t/t9814-git-p4-rename.sh: avoid "test <cond> -a/-o <cond>"
t/t5538-push-shallow.sh: avoid "test <cond> -a/-o <cond>"
t/t5403-post-checkout-hook.sh: avoid "test <cond> -a/-o <cond>"
t/t5000-tar-tree.sh: avoid "test <cond> -a/-o <cond>"
t/t4102-apply-rename.sh: avoid "test <cond> -a/-o <cond>"
t/t0026-eol-config.sh: avoid "test <cond> -a/-o <cond>"
t/t0025-crlf-auto.sh: avoid "test <cond> -a/-o <cond>"
t/lib-httpd.sh: avoid "test <cond> -a/-o <cond>"
sequencer: signal failed ff as an aborted, not a conflicted merge
api-strbuf.txt minor typos
git-rebase--interactive.sh: avoid "test <cond> -a/-o <cond>"
git-mergetool.sh: avoid "test <cond> -a/-o <cond>"
git-bisect.sh: avoid "test <cond> -a/-o <cond>"
contrib/examples/git-resolve.sh: avoid "test <cond> -a/-o <cond>"
contrib/examples/git-repack.sh: avoid "test <cond> -a/-o <cond>"
contrib/examples/git-merge.sh: avoid "test <cond> -a/-o <cond>"
contrib/examples/git-commit.sh: avoid "test <cond> -a/-o <cond>"
contrib/examples/git-clone.sh: avoid "test <cond> -a/-o <cond>"
check_bindir: avoid "test <cond> -a/-o <cond>"
string-list: spell all values out that are given to a string_list initializer
test-lib: '--run' to run only specific tests
test-lib: tests skipped by GIT_SKIP_TESTS say so
test-lib: document short options in t/README
t/t7810-grep.sh: remove duplicate test_config()
environment.c: enable core.preloadindex by default
dir.c:trim_trailing_spaces(): fix for " \ " sequence
sideband.c: do not use ANSI control sequence on non-terminal
compat/bswap.h: fix endianness detection
Documentation: wording fixes in the user manual and glossary
transport-helper.c: rearrange xcalloc arguments
remote.c: rearrange xcalloc arguments
reflog-walk.c: rearrange xcalloc arguments
pack-revindex.c: rearrange xcalloc arguments
notes.c: rearrange xcalloc arguments
imap-send.c: rearrange xcalloc arguments
http-push.c: rearrange xcalloc arguments
diff.c: rearrange xcalloc arguments
config.c: rearrange xcalloc arguments
commit.c: rearrange xcalloc arguments
builtin/remote.c: rearrange xcalloc arguments
builtin/ls-remote.c: rearrange xcalloc arguments
config: respect '~' and '~user' in mailmap.file
git-instaweb: add support for Apache 2.4
t9138-git-svn-authors-prog.sh fixups
format-patch: add "--signature-file=<file>" option
git-p4: Do not include diff in spec file when just preparing p4
gc --auto: do not lock refs in the background
scripts: "export VAR=VALUE" construct is not portable
test-lint: find unportable sed, echo, test, and export usage after &&
pretty.c: format string with truncate respects logOutputEncoding
t4205, t6006: add tests that fail with i18n.logOutputEncoding set
t4205 (log-pretty-format): use `tformat` rather than `format`
t4041, t4205, t6006, t7102: don't hardcode tested encoding value
contrib: remote-helpers: add move warnings (v2.0)
rebase -i: handle "Nothing to do" case with autostash
commit: allow core.commentChar=auto for character auto selection
config: be strict on core.commentChar
t4205 (log-pretty-formats): don't hardcode SHA-1 in expected outputs
contrib/subtree: allow adding an annotated tag
contrib: completion: fix 'eread()' namespace
svn-fe: conform to pep8
contrib: remove git-diffall
contrib: remove vim support instructions
shell doc: remove stray "+" in example
silence a bunch of format-zero-length warnings
git-p4: format-patch to diff-tree change breaks binary patches
contrib/subtree/Makefile: clean up rule for "clean"
contrib/subtree/Makefile: clean up rules to generate documentation
contrib/subtree/Makefile: s/libexecdir/gitexecdir/
contrib/subtree/Makefile: use GIT-VERSION-FILE
api-strbuf.txt: add docs for _trim and _ltrim
strbuf: use _rtrim and _ltrim in strbuf_trim
contrib/subtree/Makefile: scrap unused $(gitdir)
t5000-tar-tree.sh: use the $( ... ) construct for command substitution
t4204-patch-id.sh: use the $( ... ) construct for command substitution
t4119-apply-config.sh: use the $( ... ) construct for command substitution
t4116-apply-reverse.sh: use the $( ... ) construct for command substitution
t4057-diff-combined-paths.sh: use the $( ... ) construct for command substitution
t4038-diff-combined.sh: use the $( ... ) construct for command substitution
t4036-format-patch-signer-mime.sh: use the $( ... ) construct for command substitution
t4014-format-patch.sh: use the $( ... ) construct for command substitution
t4013-diff-various.sh: use the $( ... ) construct for command substitution
t4012-diff-binary.sh: use the $( ... ) construct for command substitution
t4010-diff-pathspec.sh: use the $( ... ) construct for command substitution
t4006-diff-mode.sh: use the $( ... ) construct for command substitution
t3910-mac-os-precompose.sh: use the $( ... ) construct for command substitution
t3905-stash-include-untracked.sh: use the $( ... ) construct for command substitution
rerere: fix for merge.conflictstyle
t1050-large.sh: use the $( ... ) construct for command substitution
t1020-subdirectory.sh: use the $( ... ) construct for command substitution
t1004-read-tree-m-u-wf.sh: use the $( ... ) construct for command substitution
t1003-read-tree-prefix.sh: use the $( ... ) construct for command substitution
t1002-read-tree-m-u-2way.sh: use the $( ... ) construct for command substitution
t1001-read-tree-m-2way.sh: use the $( ... ) construct for command substitution
t1000-read-tree-m-3way.sh: use the $( ... ) construct for command substitution
t0300-credentials.sh: use the $( ... ) construct for command substitution
t0030-stripspace.sh: use the $( ... ) construct for command substitution
t0026-eol-config.sh: use the $( ... ) construct for command substitution
t0025-crlf-auto.sh: use the $( ... ) construct for command substitution
t0020-crlf.sh: use the $( ... ) construct for command substitution
t0010-racy-git.sh: use the $( ... ) construct for command substitution
t0001-init.sh: use the $( ... ) construct for command substitution
sequencer: do not update/refresh index if the lock cannot be held
ewah: delete unused ewah_read_mmap_native declaration
ewah: fix constness of ewah_read_mmap
compat/poll: sleep 1 millisecond to avoid busy wait
l10n: de.po: improve hint for autocorrected command execution
l10n: de.po: translate 45 new messages
l10n: de.po: correct translation of "completed" after resolving deltas
git tag --contains: avoid stack overflow
setup: fix windows path buffer over-stepping
p5302-pack-index.sh: use the $( ... ) construct for command substitution
lib-gpg.sh: use the $( ... ) construct for command substitution
lib-cvs.sh: use the $( ... ) construct for command substitution
lib-credential.sh: use the $( ... ) construct for command substitution
git-web--browse.sh: use the $( ... ) construct for command substitution
git-stash.sh: use the $( ... ) construct for command substitution
git-rebase.sh: use the $( ... ) construct for command substitution
git-rebase--merge.sh: use the $( ... ) construct for command substitution
git-pull.sh: use the $( ... ) construct for command substitution
appp.sh: use the $( ... ) construct for command substitution
t7900-subtree.sh: use the $( ... ) construct for command substitution
test-gitmw-lib.sh: use the $( ... ) construct for command substitution
t9365-continuing-queries.sh: use the $( ... ) construct for command substitution
t9117: use --prefix "" instead of --prefix=""
blame: dynamic blame_date_width for different locales
blame: fix broken time_buf paddings in relative timestamp
l10n: zh_CN.po: translate 46 new messages (2229t0f0u)
Merge branch 'fr-po' of git://github.com/jnavila/git
ewah_bitmap.c: do not assume size_t and eword_t are the same size
merge: enable defaulttoupstream by default
mergetool: run prompt only if guessed tool
mergetools: add vimdiff3 mode
transport-helper: remove unnecessary strbuf resets
transport-helper: add support to delete branches
fast-export: add support to delete refs
fast-import: add support to delete refs
transport-helper: add support to push symbolic refs
transport-helper: add support for old:new refspec
fast-export: add new --refspec option
fast-export: improve argument parsing
t5801 (remote-helpers): cleanup environment sets
l10n: vi.po (2228t): Update and minor fix
l10n: git.pot: v2.0.0 round 1 (45 new, 28 removed)
t9362-mw-to-git-utf8.sh: use the $( ... ) construct for command substitution
t9360-mw-to-git-clone.sh: use the $( ... ) construct for command substitution
git-tag.sh: use the $( ... ) construct for command substitution
git-revert.sh: use the $( ... ) construct for command substitution
git-resolve.sh: use the $( ... ) construct for command substitution
git-repack.sh: use the $( ... ) construct for command substitution
git-merge.sh: use the $( ... ) construct for command substitution
git-ls-remote.sh: use the $( ... ) construct for command substitution
git-fetch.sh: use the $( ... ) construct for command substitution
git-commit.sh: use the $( ... ) construct for command substitution
git-clone.sh: use the $( ... ) construct for command substitution
git-checkout.sh: use the $( ... ) construct for command substitution
install-webdoc.sh: use the $( ... ) construct for command substitution
howto-index.sh: use the $( ... ) construct for command substitution
i18n: only extract comments marked with "TRANSLATORS:"
i18n: remove obsolete comments for translators in diffstat generation
i18n: fix uncatchable comments for translators in date.c
SVN.pm::parse_svn_date: allow timestamps with a single-digit hour
Revert "rebase: fix run_specific_rebase's use of "return" on FreeBSD"
rebase: avoid non-function use of "return" on FreeBSD
index-pack: work around thread-unsafe pread()
transport-helper: fix sync issue on crashes
transport-helper: trivial cleanup
transport-helper: propagate recvline() error pushing
remote-helpers: make recvline return an error
transport-helper: remove barely used xchgline()
prompt: fix missing file errors in zsh
remote-bzr: trivial test fix
test: fix t5560 on FreeBSD
test: fix t7001 cp to use POSIX options
read-cache.c: verify index file before we opportunistically update it
wrapper.c: add xpread() similar to xread()
completion: fix completing args of aliased "push", "fetch", etc.
remote-bzr: add support for older versions
remote-hg: always normalize paths
remote-helpers: allow all tests running from any dir
add `ignore_missing_links` mode to revwalk
environment.c: fix constness for odb_pack_keep()
gc --aggressive: make --depth configurable
log: add --show-linear-break to help see non-linear history
object.h: centralize object flag allocation
git-am.sh: use the $(...) construct for command substitution
check-builtins.sh: use the $(...) construct for command substitution
rev-parse --parseopt: option argument name hints
config.txt: third-party tools may and do use their own variables
fsck: use bitwise-or assignment operator to set flag
Documentation/gitk: document the location of the configulation file
fsck.c:fsck_commit(): use skip_prefix() to verify and skip constant
t5510: Do not use $(pwd) when fetching / pushing / pulling via rsync
tests: use "env" to run commands with temporary env-var settings
diff-no-index: replace manual "."/".." check with is_dot_or_dotdot()
diff-no-index: rename read_directory()
rebase: allow "-" short-hand for the previous branch
add: use struct argv_array in run_add_interactive()
run-command: mark run_hook_with_custom_index as deprecated
merge hook tests: fix and update tests
merge: fix GIT_EDITOR override for commit hook
commit: fix patch hunk editing with "commit -p -m"
test patch hunk editing with "commit -p -m"
Documentation/merge-strategies: avoid hyphenated commands
Documentation/git-am: typofix
fsck.c:fsck_ident(): ident points at a const string
connect.c: SP after "}", not TAB
wt-status: i18n of section labels
wt-status: extract the code to compute width for labels
merge hook tests: use 'test_must_fail' instead of '!'
merge hook tests: fix missing '&&' in test
Documentation/git-am: Document supported --patch-format options
upload-pack: send shallow info over stdin to pack-objects
Use hashcpy() when copying object names
branch: use skip_prefix() in install_branch_config()
t3200-branch: test setting branch as own upstream
branch.c: delete size check of newly tracked branch names
commit.c: use skip_prefix() instead of starts_with()
git-bisect.sh: fix a few style issues
strbuf: style fix -- top opening bracket on a separate line
finish_tmp_packfile():use strbuf for pathname construction
write_pack_file: use correct variable in diagnostic
help.c: rename function "pretty_print_string_list"
tag: support --sort=<spec>
commit: add --cleanup=scissors
hashmap.h: use 'unsigned int' for hash-codes everywhere
diff: do not quit early on stat-dirty files
diff.c: move diffcore_skip_stat_unmatch core logic out for reuse later
clean: use cache_name_is_other()
clean: replace match_pathspec() with dir_path_match()
pathspec: pass directory indicator to match_pathspec_item()
match_pathspec: match pathspec "foo/" against directory "foo"
dir.c: prepare match_pathspec_item for taking more flags
pathspec: rename match_pathspec_depth() to match_pathspec()
pathspec: convert some match_pathspec_depth() to dir_path_match()
pathspec: convert some match_pathspec_depth() to ce_path_match()
test-hashmap.c: drop unnecessary #includes
.gitignore: test-hashmap is a generated file
read-cache: add index.version config variable
test-lib: allow setting the index format version
am doc: add a pointer to relevant hooks
difftool: support repositories with .git-files
introduce GIT_INDEX_VERSION environment variable
demonstrate git-commit --dry-run exit code behaviour
i18n: mark all progress lines for translation
sha1_file: fix delta_stack memory leak in unpack_entry
actually remove compat fnmatch source code
stop using fnmatch (either native or compat)
Revert "test-wildmatch: add "perf" command to compare wildmatch and fnmatch"
use wildmatch() directly without fnmatch() wrapper
Documentation: fix documentation AsciiDoc links for external urls
wt-status.c: move cut-line print code out to wt_status_add_cut_line
wt-status.c: make cut_line[] const to shrink .data section a bit
reset: optionally setup worktree and refresh index on --mixed
t5537: move http tests out to t5539
l10n: de.po: correct message when hiding commits by craft
l10n: de.po: translate 28 new messages
completion: teach --recurse-submodules to fetch, pull and push
dir: ignore trailing spaces in exclude patterns
dir: warn about trailing spaces in exclude patterns
gc: config option for running --auto in background
daemon: move daemonize() to libgit.a
fetch-pack: fix deepen shallow over smart http with no-done cap
protocol-capabilities.txt: document no-done
protocol-capabilities.txt: refer multi_ack_detailed back to pack-protocol.txt
pack-protocol.txt: clarify 'obj-id' in the last ACK after 'done'
test: rename http fetch and push test files
l10n: zh_CN.po: Disambiguation for rebase
reset: support "--mixed --intent-to-add" mode
Documentation: fix typos in man pages
setup: don't dereference in-tree symlinks for absolute paths
setup: add abspath_part_inside_repo() function
t0060: add tests for prefix_path when path begins with work tree
t0060: add test for prefix_path when path == work tree
t0060: add test for prefix_path on symlinks via absolute paths
t7101, t7014: rename test files to indicate what that file is for
git-tag.txt: <commit> for --contains is optional
l10n: zh_CN.po: translate 1 new message (2211t0f0u)
Merge branch 'master' of git://github.com/nafmo/git-l10n-sv
Merge branch 'master' of git://github.com/vnwildman/git
l10n: vi.po (2211t): Updated one new string
l10n: git.pot: v1.9 round 2 (1 new)
builtin/gc.c: reduce scope of variables
builtin/fetch.c: reduce scope of variable
builtin/commit.c: reduce scope of variables
builtin/clean.c: reduce scope of variable
builtin/blame.c: reduce scope of variables
builtin/apply.c: reduce scope of variables
bisect.c: reduce scope of variable
git-compat-util.h: #undef (v)snprintf before #define them
pager test: make fake pager consume all its input
tree_entry_interesting: match against all pathspecs
l10n: remove 2 blank translations on Danish, Dutch
l10n: zh_CN.po: translate 27 messages (2210t0f0u)
ewah: support platforms that require aligned reads
tree-walk.c: ignore trailing slash on submodule in tree_entry_interesting()
git-svn: memoize _rev_list and rebuild
gitk: Comply with XDG base directory specification
gitk: chmod +x po2msg.sh
git-gui: chmod +x po2msg, windows/git-gui.sh
Merge branch 'fr-po' of git://github.com/jnavila/git
l10n: vi.po (2210t): Updated git-core translation
l10n: git.pot: v1.9 round 1 (27 new, 11 removed)
mingw: remove mingw_write
prefer xwrite instead of write
gitignore doc: add global gitignore to synopsis
pull: add --ff-only to the help text
pull: add pull.ff configuration
diff test: reading a directory as a file need not error out
t5537: fix incorrect expectation in test case 10
stash: handle specifying stashes with $IFS
completion: complete format.coverLetter
pager: set LV=-c alongside LESS=FRSX
git-submodule.sh: 'checkout' is a valid update mode
builtin/help.c: speed up is_git_command() by checking for builtin commands first
builtin/help.c: call load_command_list() only when it is needed
git.c: consistently use the term "builtin" instead of "internal command"
completion: fix remote.pushdefault
completion: fix branch.autosetup(merge|rebase)
completion: introduce __gitcomp_nl_append ()
zsh completion: find matching custom bash completion
get_octopus_merge_bases(): cleanup redundant variable
fetch --prune: Run prune before fetching
fetch --prune: always print header url
l10n: de.po: fix translation of 'prefix'
gc: notice gc processes run by other users
for-each-ref: remove unused variable
pack-bitmap: implement optional name_hash cache
count-objects: recognize .bitmap in garbage-checking
repack: consider bitmaps when performing repacks
pack-objects: implement bitmap writing
rev-list: add bitmap mode to speed up object lists
pack-objects: use bitmaps when packing objects
pack-bitmap: add support for bitmap indexes
documentation: add documentation for the bitmap format
ewah: compressed bitmap implementation
commit.c: make "tree" a const pointer in commit_tree*()
add: don't complain when adding empty project root
remote-hg: test 'shared_path' in a moved clone
daemon: be strict at parsing parameters --[no-]informative-errors
diff: add diff.orderfile configuration variable
diff: let "git diff -O" read orderfile from any file and fail properly
t4056: add new tests for "git diff -O"
docs: add filter-branch notes on The BFG
Prevent buffer overflows when path is too long
diff: avoid some nesting
diff: add test for --no-index executed outside repo
l10n: Init Vietnamese translation
diff: don't read index when --no-index is given
diff: move no-index detection to builtin/diff.c
git-clone.txt: remove shallow clone limitations
prune: clean .git/shallow after pruning objects
clone: use git protocol for cloning shallow repo locally
send-pack: support pushing from a shallow clone via http
receive-pack: support pushing to a shallow clone via http
smart-http: support shallow fetch/clone
remote-curl: pass ref SHA-1 to fetch-pack as well
send-pack: support pushing to a shallow clone
receive-pack: allow pushes that update .git/shallow
connected.c: add new variant that runs with --shallow-file
add GIT_SHALLOW_FILE to propagate --shallow-file to subprocesses
receive/send-pack: support pushing from a shallow clone
receive-pack: reorder some code in unpack()
fetch: add --update-shallow to accept refs that update .git/shallow
upload-pack: make sure deepening preserves shallow roots
fetch: support fetching from a shallow repository
clone: support remote shallow repository
fetch-pack.h: one statement per bitfield declaration
fetch-pack.c: move shallow update code out of fetch_pack()
shallow.c: steps 6 and 7 to select new commits for .git/shallow
shallow.c: the 8 steps to select new commits for .git/shallow
shallow.c: extend setup_*_shallow() to accept extra shallow commits
connect.c: teach get_remote_heads to parse "shallow" lines
make the sender advertise shallow commits to the receiver
clone: prevent --reference to a shallow repository
send-pack: forbid pushing from a shallow repository
remote.h: replace struct extra_have_objects with struct sha1_array
transport.h: remove send_pack prototype, already defined in send-pack.h
remote: fix status with branch...rebase=preserve
fetch: add missing documentation
t: trivial whitespace cleanups
abspath: trivial style fix
remote-hg: add tests for special filenames
remote-hg: fix 'shared path' path
remote-helpers: add extra safety checks
remote-hg: avoid buggy strftime()
parse-options: remove OPT_BOOLEAN
gitignore.txt: clarify recursive nature of excluded directories
difftool: display the number of files in the diff queue in the prompt
pathspec.c: support adding prefix magic to a pathspec with mnemonic magic
Support pathspec magic :(exclude) and its short form :!
glossary-content.txt: rephrase magic signature part
clone,fetch: catch non positive --depth option value
gettext.c: detect the vsnprintf bug at runtime
stop installing git-tar-tree link
remove #!interpreter line from shell libraries
test: replace shebangs with descriptions in shell libraries
test: make FILEMODE a lazy prereq
contrib: remove git-p4import
mark contributed hooks executable
mark perl test scripts executable
mark Windows build scripts executable
git p4: Use git diff-tree instead of format-patch
glossary-content.txt: fix documentation of "**" patterns
diff: restrict pathspec limitations to diff b/f case only
for-each-ref: avoid color leakage
for-each-ref: introduce %(color:...) for color
for-each-ref: introduce %(upstream:track[short])
Makefile: add PERLLIB_EXTRA variable that adds to default perl path
Makefile: rebuild perl scripts when perl paths change
for-each-ref: introduce %(HEAD) asterisk marker
t6300 (for-each-ref): don't hardcode SHA-1 hexes
t6300 (for-each-ref): clearly demarcate setup
test-bzr.sh, test-hg.sh: allow running from any dir
test-lib.sh: convert $TEST_DIRECTORY to an absolute path
read-cache.c: fix memory leaks caused by removed cache entries
builtin/update-index.c: cleanup update_one
fix 'git update-index --verbose --again' output
remove old hash.[ch] implementation
name-hash.c: remove cache entries instead of marking them CE_UNHASHED
name-hash.c: use new hash map implementation for cache entries
name-hash.c: remove unreferenced directory entries
name-hash.c: use new hash map implementation for directories
diffcore-rename.c: use new hash map implementation
diffcore-rename.c: simplify finding exact renames
diffcore-rename.c: move code around to prepare for the next patch
buitin/describe.c: use new hash map implementation
add a hashtable implementation that supports O(1) removal
compat: add endianness helpers
git-gui: correct spelling errors in comments
push: enhance unspecified push default warning
transport-helper: check for 'forced update' message
transport-helper: add 'force' to 'export' helpers
contrib: typofixes
Documentation/technical/http-protocol.txt: typofixes
typofixes: fix misspelt comments
l10n: de.po: improve error message when pushing to unknown upstream
l10n: de.po: translate 68 new messages
po/TEAMS: update Thomas Rast's email address
git-remote-mediawiki build: handle DESTDIR/INSTLIBDIR with whitespace
git-remote-mediawiki build: make 'install' command configurable
git-remote-mediawiki: honor DESTDIR in "make install"
git-remote-mediawiki: do not remove installed files in "clean" target
Merge remote-tracking branch 'sv/nafmo/master'
gitignore.txt: fix documentation of "**" patterns
wt-status: take the alignment burden off translators
l10n: zh_CN.po: translate 68 messages (2194t0f0u)
l10n: vi.po (2194t): Update and minor fix
l10n: git.pot: v1.8.5 round 1 (68 new, 9 removed)
setup: trivial style fixes
run-command: trivial style fixes
diff: trivial style fix
revision: trivial style fixes
pretty: trivial style fix
describe: trivial style fixes
transport-helper: trivial style fix
sha1-name: trivial style cleanup
branch: trivial style fix
revision: add missing include
transport-helper: don't update refs in dry-run
transport-helper: mismerge fix
t: replace pulls with merges
merge: simplify ff-only option
Avoid difference in tr semantics between System V and BSD
doc/howto: warn about (dumb)http server document being too old
t/README: tests can use perl even with NO_PERL
pathspec: stop --*-pathspecs impact on internal parse_pathspec() uses
Change sed i\ usage to something Solaris' sed can handle
sha1_file: export `git_open_noatime`
revision: allow setting custom limiter function
pack-objects: factor out name_hash
pack-objects: refactor the packing list
revindex: export new APIs
entry.c: convert checkout_entry to use strbuf
remote-hg: unquote C-style paths when exporting
Fix calling parse_pathspec with no paths nor PATHSPEC_PREFER_* flags
gc: remove gc.pid file at end of execution
alias: have SP around arithmetic operators
contrib/git-credential-gnome-keyring.c: support really ancient gnome-keyring
contrib/git-credential-gnome-keyring.c: support ancient gnome-keyring
contrib/git-credential-gnome-keyring.c: report failure to store password
contrib/git-credential-gnome-keyring.c: use glib messaging functions
contrib/git-credential-gnome-keyring.c: use glib memory allocation functions
contrib/git-credential-gnome-keyring.c: use secure memory for reading passwords
contrib/git-credential-gnome-keyring.c: use secure memory functions for passwds
contrib/git-credential-gnome-keyring.c: use gnome helpers in keyring_object()
contrib/git-credential-gnome-keyring.c: set Gnome application name
contrib/git-credential-gnome-keyring.c: ensure buffer is non-empty before accessing
contrib/git-credential-gnome-keyring.c: strlen() returns size_t, not ssize_t
contrib/git-credential-gnome-keyring.c: exit non-zero when called incorrectly
contrib/git-credential-gnome-keyring.c: add static where applicable
contrib/git-credential-gnome-keyring.c: *style* use "if ()" not "if()" etc.
Merge branch 'rj/highlight-test-hang'
Merge branch 'nv/doc-config-signingkey'
clone --branch: refuse to clone if upstream repo is empty
Merge branch 'sb/checkout-test-complex-path'
Merge branch 'rt/cherry-pick-status'
Merge branch 'rj/doc-formatting-fix'
Merge branch 'po/remote-set-head-usage'
Merge branch 'nd/clone-local-with-colon'
Merge branch 'jx/clean-interactive'
Merge branch 'jk/diff-algo'
git-prompt.sh: optionally show upstream branch name
path-utils test: rename mingw_path function to print_path
Use simpler relative_path when set_git_dir
relative_path should honor dos-drive-prefix
test: use unambigous leading path (/foo) for MSYS
status: show commit sha1 in "You are currently cherry-picking" message
status test: add missing && to <<EOF blocks
git-svn.txt: elaborate on rev_map files
git-svn.txt: replace .git with $GIT_DIR
git-svn.txt: reword description of gc command
git-svn.txt: fix AsciiDoc formatting error
Merge branch 'tz/credential-netrc'
clone: tighten "local paths with colons" check a bit
Sync with Git 1.8.4.1
Git 1.8.4.1
Merge branch 'mm/rebase-continue-freebsd-WB' into maint
Merge branch 'km/svn-1.8-serf-only' into maint
Merge branch 'js/xread-in-full' into maint
Merge branch 'bc/send-email-ssl-die-message-fix' into maint
Merge branch 'bc/submodule-status-ignored'
Merge branch 'cc/replace-with-the-same-type'
Merge branch 'kb/msvc-compile'
Merge branch 'nd/unpack-entry-optim-in-pack-objects'
Merge branch 'jk/shortlog-tolerate-broken-commit'
Merge branch 'jc/strcasecmp-pure-inline'
Merge branch 'sg/complete-untracked-filter'
Merge branch 'nd/fetch-pack-error-reporting-fix'
Merge branch 'es/contacts-in-subdir'
Merge branch 'jc/push-cas'
Merge branch 'maint'
git-remote-mediawiki: bugfix for pages w/ >500 revisions
clone: add a period after "done" to end the sentence
contrib/git-credential-gnome-keyring.c: remove unused die() function
contrib/git-credential-gnome-keyring.c: remove unnecessary pre-declarations
t0056: "git -C" test updates
fetch-pack.c: show correct command name that fails
t7406-submodule-update: add missing &&
pack-objects: no crc check when the cached version is used
Add new @ shortcut for HEAD
Windows: do not redefine _WIN32_WINNT
MinGW: Fix stat definitions to work with MinGW runtime version 4.0
MSVC: fix stat definition hell
MSVC: fix compile errors due to macro redefinitions
MSVC: fix compile errors due to missing libintl.h
cherry-pick: allow "-" as abbreviation of '@{-1}'
git: run in a directory given with -C option
l10n: de.po: use "das Tag" instead of "der Tag"
Documentation: make AsciiDoc links always point to HTML files
add: lift the pathspec magic restriction on "add -p"
pathspec: catch prepending :(prefix) on pathspec with short magic
git p4: implement view spec wildcards with "p4 where"
rev-parse test: use standard test functions for setup
rev-parse test: use test_cmp instead of "test" builtin
rev-parse test: use test_must_fail, not "if <command>; then false; fi"
rev-parse test: modernize quoting and whitespace
fast-export: refactor get_tags_and_duplicates()
fast-export: make extra_refs global
t: branch: fix broken && chains
t: branch: fix typo
t: branch: trivial style fix
sha1-name: pass len argument to interpret_branch_name()
Make setup_git_env() resolve .git file when $GIT_DIR is not specified
add: trivial style cleanup
reset: trivial style cleanup
branch: trivial style fix
reset: trivial refactoring
gitweb: Fix the author initials in blame for non-ASCII names
remote-hg: use notes to keep track of Hg revisions
remote-helpers: cleanup more global variables
remote-helpers: trivial style fixes
remote-hg: improve basic test
remote-hg: add missing &&s in the test
remote-hg: fix test
remote-bzr: make bzr branches configurable per-repo
remote-bzr: fix export of utf-8 authors
documentation: clarify notes for clean.requireForce
list-objects: mark more commits as edges in mark_edges_uninteresting
list-objects: reduce one argument in mark_edges_uninteresting
upload-pack: delegate rev walking in shallow fetch to pack-objects
shallow: add setup_temporary_shallow()
shallow: only add shallow graft points to new shallow file
status: always show tracking branch even no change
branch: report invalid tracking branch as gone
fetch-pack: do not remove .git/shallow file when --depth is not specified
reset test: modernize style
add -i test: use skip_all instead of repeated PERL prerequisite
commit: search author pattern against mailmap
contrib/git-prompt.sh: handle missing 'printf -v' more gracefully
t9902-completion.sh: old Bash still does not support array+=('') notation
git-completion.bash: use correct Bash/Zsh array length syntax
rebase --preserve-merges: ignore "merge.log" config
read-cache: use fixed width integer types
move setup_alternate_shallow and write_shallow_commits to shallow.c
unpack-trees: plug a memory leak
push: respect --no-thin
git p4 test: sanitize P4CHARSET
remote-hg: add shared repo upgrade
remote-hg: ensure shared repo is initialized
remote-hg: fix path when cloning with tilde expansion
Documentation/git-merge-file: document option "--diff3"
gc: reject if another gc is running, unless --force is given
l10n: de.po: translate 5 messages
l10n: de.po: translate 99 new messages
l10n: de.po: switch from pure German to German+English
l10n: de.po: Fix a typo
l10n: zh_CN.po: translate 5 messages (2135t0f0u)
l10n: vi.po(2135t): v1.8.4 round 2
l10n: git.pot: v1.8.4 round 2 (5 new, 3 removed)
config: parse http.<url>.<variable> using urlmatch
hooks/post-receive-email: force log messages in UTF-8
hooks/post-receive-email: use plumbing instead of git log/show
log doc: the argument to --encoding is not optional
l10n: zh_CN.po: translate 99 messages (2133t0f0u)
Don't close pack fd when free'ing pack windows
sha1_file: introduce close_one_pack() to close packs on fd pressure
config: add helper to normalize and match URLs
quote: remove sq_quote_print()
tar-tree: remove dependency on sq_quote_print()
for-each-ref, quote: convert *_quote_print -> *_quote_buf
editor: use canonicalized absolute path
git-rebase: fix typo
docs/git-tag: explain lightweight versus annotated tags
l10n: vi.po (2133t)
config doc: quote paths, fixing tilde-interpretation
document 'allow-tip-sha1-in-want' capability
l10n: git.pot: v1.8.4 round 1 (99 new, 46 removed)
git-clean: implement partial matching for selection
Documentation/git-clean: fix description for range
git-completion.bash: replace zsh notation that breaks bash 3.X
smart http: use the same connectivity check on cloning
hg-to-git: --allow-empty-message in git commit
cygwin: stop forcing core.filemode=false
Cygwin 1.7 supports mmap
Cygwin 1.7 has thread-safe pread
Cygwin 1.7 needs compat/regex
t9801: git-p4: check ignore files with client spec
Revert "compat/unsetenv.c: Fix a sparse warning"
git add -e: Explicitly specify that patch should have no color
Git.pm: revert _temp_cache use of temp_is_locked
test-lib.sh - define and use GREP_STRIPS_CR
send-email: be explicit with SSL certificate verification
show-ref: make --head always show the HEAD ref
t6131 - skip tests if on case-insensitive file system
parse_pathspec: accept :(icase)path syntax
pathspec: support :(glob) syntax
pathspec: make --literal-pathspecs disable pathspec magic
pathspec: support :(literal) syntax for noglob pathspec
kill limit_pathspec_to_literal() as it's only used by parse_pathspec()
parse_pathspec: preserve prefix length via PATHSPEC_PREFIX_ORIGIN
parse_pathspec: make sure the prefix part is wildcard-free
rename field "raw" to "_raw" in struct pathspec
tree-diff: remove the use of pathspec's raw[] in follow-rename codepath
remove match_pathspec() in favor of match_pathspec_depth()
remove init_pathspec() in favor of parse_pathspec()
remove diff_tree_{setup,release}_paths
convert common_prefix() to use struct pathspec
convert add_files_to_cache to take struct pathspec
convert {read,fill}_directory to take struct pathspec
convert refresh_index to take struct pathspec
convert report_path_error to take struct pathspec
checkout: convert read_tree_some to take struct pathspec
convert unmerge_cache to take struct pathspec
convert run_add_interactive to use struct pathspec
convert read_cache_preload() to take struct pathspec
line-log: convert to use parse_pathspec
reset: convert to use parse_pathspec
add: convert to use parse_pathspec
check-ignore: convert to use parse_pathspec
archive: convert to use parse_pathspec
ls-files: convert to use parse_pathspec
rm: convert to use parse_pathspec
checkout: convert to use parse_pathspec
rerere: convert to use parse_pathspec
status: convert to use parse_pathspec
commit: convert to use parse_pathspec
clean: convert to use parse_pathspec
guard against new pathspec magic in pathspec matching code
parse_pathspec: support prefixing original patterns
parse_pathspec: support stripping/checking submodule paths
parse_pathspec: support stripping submodule trailing slashes
parse_pathspec: add special flag for max_depth feature
convert some get_pathspec() calls to parse_pathspec()
parse_pathspec: add PATHSPEC_PREFER_{CWD,FULL} flags
parse_pathspec: save original pathspec for reporting
add parse_pathspec() that converts cmdline args to struct pathspec
pathspec: add copy_pathspec
pathspec: i18n-ize error strings in pathspec parsing code
move struct pathspec and related functions to pathspec.[ch]
clean: remove unused variable "seen"
templates: spell ASCII in uppercase in pre-commit hook
templates: Reformat pre-commit hook's message
templates: Use heredoc in pre-commit hook
git-clone.txt: remove the restriction on pushing from a shallow clone
Convert "struct cache_entry *" to "const ..." wherever possible
remote.c: avoid O(m*n) behavior in match_push_refs
git-svn: allow git-svn fetching to work using serf
Git.pm: add new temp_is_locked function
name-rev doc: rewrite --stdin paragraph
t4205 (log-pretty-formats): avoid using `sed`
t6006 (rev-list-format): add tests for "%b" and "%s" for the case i18n.commitEncoding is not set
t4205, t6006, t7102: make functions better readable
t4205 (log-pretty-formats): revert back single quotes
test-lib.sh - cygwin does not have usable FIFOs
t4041, t4205, t6006, t7102: use iso8859-1 rather than iso-8859-1
fixup-builtins: retire an old transition helper script
submodule update: allow custom command to update submodule working tree
check-ignore doc: fix broken link to ls-files page
perf-lib: fix start/stop of perf tests
configure: fix option help message for --disable-pthreads
git-prompt.sh: add missing information in comments
git-prompt.sh: do not print duplicate clean color code
t9903: remove redundant tests
git-prompt.sh: refactor colored prompt code
t9903: add tests for git-prompt pcmode
pretty: --format output should honor logOutputEncoding
pretty: Add failing tests: --format output should honor logOutputEncoding
t4205 (log-pretty-formats): don't hardcode SHA-1 in expected outputs
t7102 (reset): don't hardcode SHA-1 in expected outputs
t6006 (rev-list-format): don't hardcode SHA-1 in expected outputs
test: run testcases with POSIX absolute paths on Windows
test: add t7301 for git-clean--interactive
git-clean: add documentation for interactive git-clean
git-clean: add ask each interactive action
git-clean: add select by numbers interactive action
git-clean: add filter by pattern interactive action
git-clean: use a git-add-interactive compatible UI
git-clean: add colors to interactive git-clean
git-clean: show items of del_list in columns
git-clean: add support for -i/--interactive
git-clean: refactor git-clean into two phases
write_name{_quoted_relative,}(): remove redundant parameters
quote_path_relative(): remove redundant parameter
quote.c: substitute path_relative with relative_path
path.c: refactor relative_path(), not only strip prefix
test: add test cases for relative_path
column doc: rewrite documentation for column.ui
commit: make it work with status.short
t/t5528-push-default: test pushdefault workflows
t/t5528-push-default: generalize test_push_*
push: change `simple` to accommodate triangular workflows
rebase -i: use a better reflog message
rebase: use a better reflog message
config doc: rewrite push.default section
t/t5505-remote: test multiple push/pull in remotes-file
ls-remote doc: don't encourage use of branches-file
ls-remote doc: rewrite <repository> paragraph
ls-remote doc: fix example invocation on git.git
t/t5505-remote: test url-with-# in branches-file
remote: remove dead code in read_branches_file()
t/t5505-remote: use test_path_is_missing
t/t5505-remote: test push-refspec in branches-file
t/t5505-remote: modernize style
completion: complete diff --word-diff
t/t5528-push-default: remove redundant test_config lines
diff: add --ignore-blank-lines option
random typofixes (committed missing a 't', successful missing an 's')
sequencer: write useful reflog message for fast-forward
http.c: don't rewrite the user:passwd string multiple times
t/t9802: explicitly name the upstream branch to use as a base
builtin/checkout.c: don't leak memory in check_tracking_name
config: Add description of --local option
wt-status: give better advice when cherry-pick is in progress
rebase: use 'git stash store' to simplify logic
stash: introduce 'git stash store'
checkout: respect GIT_REFLOG_ACTION
status: do not depend on rebase reflog messages
t/t2021-checkout-last: "checkout -" should work after a rebase finishes
wt-status: remove unused field in grab_1st_switch_cbdata
stash: simplify option parser for create
stash doc: document short form -p in synopsis
stash doc: add a warning about using create
t/am: use test_path_is_missing() where appropriate
am: handle stray $dotest directory
rebase: use peel_committish() where appropriate
sh-setup: add new peel_committish() helper
t/rebase: add failing tests for a peculiar revision
prompt: squelch error output from cat
rebase: finish_rebase() in noop rebase
rebase: finish_rebase() in fast-forward rebase
rebase: guard against missing files in read_basic_state()
pre-push.sample: Make the script executable
mingw: make mingw_signal return the correct handler
git.txt: document GIT_TRACE_PACKET
core: use env variable instead of config var to turn on logging pack access
completion: show can take both revlist and paths
Makefile: use $^ to avoid listing prerequisites on the command line
build: do not install git-remote-testgit
build: generate and clean test scripts
tests: move test for rebase messages from t3400 to t3406
t3406: modernize style
add tests for rebasing merged history
add tests for rebasing root
add tests for rebasing of empty commits
add tests for rebasing with patch-equivalence present
add simple tests of consistency across rebase types
sequencer: avoid leaking message buffer when refusing to create an empty commit
Makefile: Do not use OLD_ICONV on MINGW anymore
sequencer: remove useless indentation
diffcore-pickaxe doc: document -S and -G properly
diffcore-pickaxe: make error messages more consistent
completion: difftool takes both revs and files
sha1_file: trivial style cleanup
read-cache: trivial style cleanups
read-cache: fix wrong 'the_index' usage
test: fix post rewrite hook report
completion: avoid ls-remote in certain scenarios
contrib: remove continuous/ and patches/
dir.c: fix ignore processing within not-ignored directories
wildmatch: properly fold case everywhere
Makefile: promote wildmatch to be the default fnmatch implementation
sha1_name: fix error message for @{<N>}, @{<date>}
push: make push.default = current use resolved HEAD
push: fail early with detached HEAD and current
completion: zsh: improve bash script loading
difftool --dir-diff: allow changing any clean working tree file
push: factor out the detached HEAD error message
get_sha1: warn about full or short object names that look like refs
prompt: fix for simple rebase
rebase: implement --[no-]autostash and rebase.autostash
credential-osxkeychain: support more protocols
send-email: remove warning about unset chainreplyto
prune-packed: avoid implying "1" is DRY_RUN in prune_packed_objects()
test: rebase: fix --interactive test
test: trivial cleanups
remote: trivial style cleanup
clone: open a shortcut for connectivity check
index-pack: remove dead code (it should never happen)
fetch-pack: prepare updated shallow file before fetching the pack
remote-hg: add support for --force
remote-hg: add support for --dry-run
remote-hg: check if a fetch is needed
remote-hg: trivial cleanup
remote-helpers: improve marks usage
remote-hg: add check_push() helper
remote-hg: add setup_big_push() helper
remote-hg: remove files before modifications
remote-hg: improve lightweight tag author
remote-hg: use remote 'default' not local one
remote-hg: improve branch listing
remote-hg: simplify branch_tip()
remote-hg: check diverged bookmarks
remote-hg: pass around revision refs
remote-hg: implement custom checkheads()
remote-hg: implement custom push()
remote-hg: only update necessary revisions
remote-hg: force remote bookmark push selectively
remote-hg: reorganize bookmark handling
remote-hg: add test for failed double push
remote-hg: add test for big push
remote-hg: add test for new bookmark special
remote-hg: add test for bookmark diverge
remote-hg: add test for diverged push
remote-hg: add test to push new bookmark
remote-hg: add remote tests
remote-hg: update bookmarks when using a remote
remote-hg: add check_bookmark() test helper
remote-bzr: simplify test checks
remote-hg: add tests for 'master' bookmark
remote-hg: always point HEAD to master
remote-hg: improve progress calculation
remote-hg: trivial cleanups
remote-hg: ensure remote rebasing works
remote-hg: upgrade version 1 marks
remote-hg: switch from revisions to SHA-1 noteids
remote-hg: add version checks to the marks
remote-hg: improve node traversing
remote-hg: shuffle some code
remote-hg: use a shared repository store
remote-hg: load all extensions
remote-hg: test: simplify previous branch checkout
remote-helpers: test: simplify remote URLs
remote-helpers: tests: general improvements
remote-helpers: test: cleanup style
remote-helpers: test: cleanup white-spaces
remote-hg: trivial reorganization
remote-hg: test: be a little more quiet
remote-bzr: add fallback check for a partial clone
remote-bzr: reorganize the way 'wanted' works
remote-bzr: trivial cleanups
remote-bzr: change global repo
remote-bzr: delay cloning/pulling
remote-bzr: simplify get_remote_branch()
remote-bzr: fix for files with spaces
remote-bzr: recover from failed clones
build: do not install git-remote-testpy
build: add NO_INSTALL variable
build: cleanup using $<
build: cleanup using $^
build: trivial simplification
urls.txt: avoid auto converting to hyperlink
sha1_name: fix error message for @{u}
prompt: fix show upstream with svn and zsh
imap-send: eliminate HMAC deprecation warnings on Mac OS X
remote-hg: tests: fix hg merge
remote-helpers: tests: use python directly
transport-helper: check if the dry-run is supported
transport-helper: barf when user tries old:new
remote-hg: fix order of configuration comments
remote-hg: trivial configuration note cleanup
completion: regression fix for zsh
git-svn: clarify explanation of --destination argument
remote-hg: set stdout to binary mode on win32
cache.h: eliminate SHA-1 deprecation warnings on Mac OS X
Makefile: add support for Apple CommonCrypto facility
compate/clipped-write.c: large write(2) fails on Mac OS X/XNU
documentation: trivial style cleanups
remote-bzr: fixes for older versions of bzr
remote-bzr: fix old organization destroy
prompt: colorize ZSH prompt
prompt: factor out gitstring coloring logic
prompt: introduce GIT_PS1_STATESEPARATOR
Revert "remote-hg: update bookmarks when pulling"
remote-bzr: fix cloning of non-listable repos
remote-hg: update bookmarks when pulling
remote-hg: don't push fake 'master' bookmark
remote-hg: disable forced push by default
remote-hg: fix new branch creation
remote-hg: add new get_config_bool() helper
remote-hg: enable track-branches in hg-git mode
remote-hg: get rid of unused exception checks
remote-hg: trivial cleanups
remote-bzr: update old organization
rebase --merge: return control to caller, for housekeeping
rebase -i: return control to caller, for housekeeping
am: return control to caller, for housekeeping
rebase: prepare to do generic housekeeping
rebase -i: don't error out if $state_dir already exists
am: tighten a conditional that checks for $dotest
Makefile: fix default regex settings on Darwin
clone: let the user know when check_everything_connected is run
gitk: Simplify file filtering
transport-helper: fix remote helper namespace regression
test: remote-helper: add missing and
mergetools/kdiff3: do not use --auto when diffing
transport-helper: trivial style cleanup
git-svn: added an --include-path flag
Git::SVN::*: add missing "NAME" section to perldoc
merge: use help_unknown_ref()
help: add help_unknown_ref()
mingw: rename WIN32 cpp macro to GIT_WINDOWS_NATIVE
sha1_name: compare variable with constant, not constant with variable
Add new @ shortcut for HEAD
sha1_name: refactor reinterpret()
sha1_name: check @{-N} errors sooner
sha1_name: reorganize get_sha1_basic()
completion: synchronize zsh wrapper
completion: cleanup zsh wrapper
sha1_name: don't waste cycles in the @-parsing loop
sha1_name: remove unnecessary braces
sha1_name: remove no-op
tests: at-combinations: @{N} versus HEAD@{N}
tests: at-combinations: increase coverage
tests: at-combinations: improve nonsense()
tests: at-combinations: check ref names directly
remote-helpers: trivial cleanup
remote-bzr: fix for disappeared revisions
tests: at-combinations: simplify setup
l10n: zh_CN.po: translate 44 messages (2080t0f0u)
fast-{import,export}: use get_sha1_hex() to read from marks file
l10n: de.po: translate 44 new messages
clone: allow cloning local paths with colons in them
fast-export: don't parse commits while reading marks file
fast-export: do not parse non-commit objects while reading marks file
remote-bzr: avoid bad refs
remote-bzr: convert all unicode keys to str
transport-helper: improve push messages
completion: zsh: don't override suffix on _detault
Documentation/git-commit: Typo under --edit
Merge remote-tracking branch 'vi-vnwildman/master'
l10n: Update Vietnamese translation (2080t0f0u)
remote-bzr: access branches only when needed
remote-bzr: delay peer branch usage
remote-bzr: iterate revisions properly
remote-bzr: improve progress reporting
remote-bzr: add option to specify branches
remote-bzr: add custom method to find branches
remote-bzr: improve author sanitazion
remote-bzr: add support for shared repo
remote-bzr: fix branch names
remote-bzr: add support for bzr repos
remote-bzr: use branch variable when appropriate
remote-bzr: fix partially pushed merge
remote-bzr: fixes for branch diverge
remote-bzr: add support to push merges
remote-bzr: always try to update the worktree
remote-bzr: fix order of locking in CustomTree
remote-bzr: delay blob fetching until the very end
remote-bzr: cleanup CustomTree
l10n: git.pot: v1.8.3 round 2 (44 new, 12 removed)
git-completion.bash: add remote.pushdefault to config list
git-completion.bash: add branch.*.pushremote to config list
complete: zsh: use zsh completion for the main cmd
complete: zsh: trivial simplification
git-completion.bash: complete branch.*.rebase as boolean
git-completion.bash: add diff.submodule to config list
git-completion.bash: lexical sorting for diff.statGraphWidth
documentation: trivial whitespace cleanups
completion: add missing format-patch options
completion: remove __git_index_file_list_filter()
completion: add space after completed filename
completion: add hack to enable file mode in bash < 4
completion: refactor __git_complete_index_file()
completion: refactor diff_index wrappers
completion: use __gitcompadd for __gitcomp_file
completion; remove unuseful comments
completion: document tilde expansion failure in tests
completion: add file completion tests
remote-bzr: strip extra newline
remote-bzr: tell bazaar to be quiet
remote-bzr: store converted URL
remote-hg: use hashlib instead of hg sha1 util
remote-bzr: add support to push URLs
remote-bzr: fix bad state issue
remote-hg: remove extra check
remote-helpers: trivial cleanups
remote-bzr: use proper push method
bash-prompt.sh: show where rebase is at when stopped
completion: remove duplicate block for "git commit -c"
remote-hg: strip extra newline
remote-hg: use marks instead of inlined files
remote-hg: small performance improvement
remote-hg: allow refs with spaces
remote-hg: don't update bookmarks unnecessarily
remote-hg: add support for schemes extension
remote-hg: improve email sanitation
remote-hg: add custom local tag write code
remote-hg: write tags in the appropriate branch
remote-hg: custom method to write tags
remote-hg: add support for tag objects
remote-hg: add branch_tip() helper
remote-hg: properly mark branches up-to-date
remote-hg: use python urlparse
remote-hg: safer bookmark pushing
zlib: fix compilation failures with Sun C Compilaer
builtin/shortlog.c: make usage string consistent with log
builtin/log.c: make usage string consistent with doc
git-shortlog.txt: make SYNOPSIS match log, update OPTIONS
git-log.txt: rewrite note on why "--" may be required
git-log.txt: generalize <since>..<until>
git-log.txt: order OPTIONS properly; move <since>..<until>
revisions.txt: clarify the .. and ... syntax
glossary: a revision is just a commit
prompt: fix untracked files for zsh
git-shortlog.txt: remove (-h|--help) from OPTIONS
l10n: de.po: translate 54 new messages
pretty: support %>> that steal trailing spaces
pretty: support truncating in %>, %< and %><
pretty: support padding placeholders, %< %> and %><
pretty: add %C(auto) for auto-coloring
pretty: split color parsing into a separate function
pretty: two phase conversion for non utf-8 commits
utf8.c: add reencode_string_len() that can handle NULs in string
utf8.c: add utf8_strnwidth() with the ability to skip ansi sequences
utf8.c: move display_mode_esc_sequence_len() for use by other functions
pretty: share code between format_decoration and show_decorations
pretty-formats.txt: wrap long lines
pretty: get the correct encoding for --pretty:format=%e
pretty: save commit encoding from logmsg_reencode if the caller needs it
remote-hg: fix commit messages
transport-helper: update remote helper namespace
transport-helper: trivial code shuffle
transport-helper: warn when refspec is not used
transport-helper: clarify pushing without refspecs
transport-helper: update refspec documentation
transport-helper: clarify *:* refspec
gitweb/INSTALL: GITWEB_CONFIG_SYSTEM is for backward compatibility
help.c: add a compatibility comment to cmd_version()
convert: The native line-ending is \r\n on MinGW
i18n: branch: mark strings for translation
remote-bzr: fix prefix of tags
dir.c: git-status --ignored: don't scan the work tree twice
dir.c: git-status --ignored: don't scan the work tree three times
dir.c: git-status: avoid is_excluded checks for tracked files
dir.c: replace is_path_excluded with now equivalent is_excluded API
dir.c: unify is_excluded and is_path_excluded APIs
dir.c: move prep_exclude
dir.c: factor out parts of last_exclude_matching for later reuse
dir.c: git-clean -d -X: don't delete tracked directories
dir.c: make 'git-status --ignored' work within leading directories
dir.c: git-status --ignored: don't list empty directories as ignored
dir.c: git-ls-files --directories: don't hide empty directories
dir.c: git-status --ignored: don't list empty ignored directories
dir.c: git-status --ignored: don't list files in ignored directories
dir.c: git-status --ignored: don't drop ignored directories
branch: colour upstream branches
checkout: add --ignore-skip-worktree-bits in sparse checkout mode
config: allow inaccessible configuration under $HOME
gitweb/INSTALL: Simplify description of GITWEB_CONFIG_SYSTEM
completion: small optimization
completion: inline __gitcomp_1 to its sole callsite
completion: get rid of compgen
completion: add __gitcomp_nl tests
completion: add new __gitcompadd helper
rebase-am: explicitly disable cover-letter
Correct common spelling mistakes in comments and tests
kwset: fix spelling in comments
precompose-utf8: fix spelling of "want" in error message
compat/nedmalloc: fix spelling in comments
compat/regex: fix spelling and grammar in comments
obstack: fix spelling of similar
contrib/subtree: fix spelling of accidentally
git-remote-mediawiki: spelling fixes
doc: various spelling fixes
completion: get rid of empty COMPREPLY assignments
completion: trivial test improvement
completion: add more cherry-pick options
i18n: make the translation of -u advice in one go
l10n: zh_CN.po: translate 54 messages (2048t0f0u)
Merge remote-tracking branch 'sv-nafmo/master'
remote-hg: activate graphlog extension for hg_log()
remote-hg: fix bad file paths
remote-hg: fix bad state issue
remote-hg: add simple mail test
remote-hg: add basic author tests
remote-hg: show more proper errors
remote-hg: force remote push
remote-hg: update tags globally
remote-hg: update remote bookmarks
remote-hg: refactor export
remote-hg: split bookmark handling
remote-hg: redirect buggy mercurial output
remote-hg: trivial test cleanups
remote-hg: make sure fake bookmarks are updated
remote-hg: properly report errors on bookmark pushes
remote-hg: trivial cleanups
transport-helper: improve push messages
transport-helper: report errors properly
l10n: vi.po: Update translation (2048t0u0f)
count-objects: add -H option to humanize sizes
strbuf: create strbuf_humanise_bytes() to show byte sizes
l10n: git.pot: v1.8.3 round 1 (54 new, 15 removed)
remote-bzr: improve tag handling
format-patch: trivial cleanups
format-patch: add format.coverLetter configuration variable
log: update to OPT_BOOL
format-patch: refactor branch name calculation
format-patch: improve head calculation for cover-letter
fmt-merge-msg: use core.commentchar in tag signatures completely
fmt-merge-msg: respect core.commentchar in people credits
send-email: make annotate configurable
fast-export: Allow pruned-references in mark file
remote-bzr: add utf-8 support for pushing
remote-bzr: add utf-8 support for fetching
remote-bzr: avoid unreferred tags
remote-bzr: only update workingtree on local repos
remote-hg: fix hg-git test-case
remote-bzr: remove stale check code for tests
remote-helpers: fix the run of all tests
remote-bzr: avoid echo -n
add -A: only show pathless 'add -A' warning when changes exist outside cwd
add -u: only show pathless 'add -u' warning when changes exist outside cwd
add: make warn_pathless_add() a no-op after first call
remote.c: introduce branch.<name>.pushremote
remote.c: introduce remote.pushdefault
remote.c: introduce a way to have different remotes for fetch/push
t5516 (fetch-push): update test description
remote.c: simplify a bit of code using git_config_string()
send-email: use the three-arg form of open in recipients_cmd
send-email: drop misleading function prototype
send-email: use "return;" not "return undef;" on error codepaths
Export rewrite_parents() for 'log -L'
Refactor parse_loc
t5520: use test_config to set/unset git config variables (leftover bits)
checkout: avoid unnecessary match_pathspec calls
git-svn: Support custom tunnel schemes instead of SSH only
safe_create_leading_directories: fix race that could give a false negative
combine-diff: coalesce lost lines optimally
status, branch: fix the misleading "bisecting" message
diff.c: diff.renamelimit => diff.renameLimit in message
t3200 (branch): modernize style
add: make pathless 'add [-u|-A]' warning a file-global function
push test: rely on &&-chaining instead of 'if bad; then echo Oops; fi'
push test: simplify check of push result
push test: use test_config when appropriate
t4018,7810,7811: remove test_config() redefinition
index-pack: protect deepest_delta in multithread code
Preallocate hash tables when the number of inserts are known in advance
branch: show more information when HEAD is detached
status: show more info than "currently not on any branch"
wt-status: move wt_status_get_state() out to wt_status_print()
wt-status: split wt_status_state parsing function out
wt-status: move strbuf into read_and_strip_branch()
index-pack: fix buffer overflow caused by translations
status: advise to consider use of -u when read_directory takes too long
Allow combined diff to ignore white-spaces
setup.c: check that the pathspec magic ends with ")"
setup.c: stop prefix_pathspec() from looping past the end of string
shell: new no-interactive-login command to print a custom message
shell doc: emphasize purpose and security model
perf: update documentation of GIT_PERF_REPEAT_COUNT
l10n: zh_CN.po: translate 1 new message
tests: make sure rename pretty print works
l10n: de.po: translate 1 new message
l10n: vi.po: Update translation (2009t0f0u)
l10n: git.pot: v1.8.2 round 4 (1 changed)
submodule update: when using recursion, show full path
Documentation/githooks: Fix linkgit
name-hash.c: fix endless loop with core.ignorecase=true
Revert "compat: add strtok_r()"
l10n: de.po: correct translation of "bisect" messages
l10n: de.po: translate 5 new messages
l10n: de.po: translate 35 new messages
Fix time offset calculation in case of unsigned time_t
date.c: fix unsigned time_t comparison
git-compat-util.h: Provide missing netdb.h definitions
fix clang -Wtautological-compare with unsigned enum
contrib/mw-to-git/t/install-wiki.sh: use a lowercase "usage:" string
contrib/examples/git-remote.perl: use a lowercase "usage:" string
tests: use a lowercase "usage:" string
git-svn: use a lowercase "usage:" string
Documentation/user-manual.txt: use a lowercase "usage:" string
templates/hooks--update.sample: use a lowercase "usage:" string
contrib/hooks/setgitperms.perl: use a lowercase "usage:" string
contrib/examples: use a lowercase "usage:" string
contrib/fast-import/import-zips.py: use spaces instead of tabs
contrib/fast-import/import-zips.py: fix broken error message
contrib/fast-import: use a lowercase "usage:" string
contrib/credential: use a lowercase "usage:" string
git-cvsimport: use a lowercase "usage:" string
git-cvsimport: use a lowercase "usage:" string
git-cvsexportcommit: use a lowercase "usage:" string
git-archimport: use a lowercase "usage:" string
git-merge-one-file: use a lowercase "usage:" string
git-relink: use a lowercase "usage:" string
git-svn: use a lowercase "usage:" string
git-sh-setup: use a lowercase "usage:" string
diff: Fix rename pretty-print when suffix and prefix overlap
update-index: allow "-h" to also display options
update-index: list supported idx versions and their features
branch: segfault fixes and validation
git-commit: populate the edit buffer with 2 blank lines before s-o-b
t7502: perform commits using alternate editor in a subshell
Git.pm: fix cat_blob crashes on large files
read-cache.c: use INDEX_FORMAT_{LB,UB} in verify_hdr()
index-format.txt: mention of v4 is missing in some places
t7800: "defaults" is no longer a builtin tool name
t7800: modernize tests
t7800: update copyright notice
l10n: vi.po: Updated 5 new messages (2009t0f0u)
Bugfix: undefined htmldir in config.mak.autogen
Documentation/git-commit.txt: rework the --cleanup section
git-commit: only append a newline to -m mesg if necessary
t7502: demonstrate breakage with a commit message with trailing newlines
t/t7502: compare entire commit message with what was expected
l10n: zh_CN.po: translate 5 new messages
l10n: git.pot: v1.8.2 round 3 (5 new)
shell-prompt: clean up nested if-then
l10n: zh_CN.po: translate 35 new messages
difftool: silence uninitialized variable warning
l10n: vi.po: update new strings (2004t0u0f)
count-objects: report how much disk space taken by garbage files
count-objects: report garbage files in pack directory too
l10n: Update git.pot (35 new, 14 removed messages)
t9903: add extra tests for bash.showDirtyState
t9903: add tests for bash.showUntrackedFiles
shell prompt: add bash.showUntrackedFiles option
sha1_file: reorder code in prepare_packed_git_one()
Unify appending signoff in format-patch, commit and sequencer
format-patch: update append_signoff prototype
t4014: more tests about appending s-o-b lines
sequencer.c: teach append_signoff to avoid adding a duplicate newline
sequencer.c: teach append_signoff how to detect duplicate s-o-b
sequencer.c: always separate "(cherry picked from" from commit body
sequencer.c: require a conforming footer to be preceded by a blank line
sequencer.c: recognize "(cherry picked from ..." as part of s-o-b footer
t/t3511: add some tests of 'cherry-pick -s' functionality
t/test-lib-functions.sh: allow to specify the tag name to test_commit
commit, cherry-pick -s: remove broken support for multiline rfc2822 fields
sequencer.c: rework search for start of footer to improve clarity
parse-options: report uncorrupted multi-byte options
Add utf8_fprintf helper that returns correct number of columns
p4merge: fix printf usage
difftool--helper: fix printf usage
cvsimport: format commit timestamp ourselves without using strftime
perl/Git.pm: fix get_tz_offset to properly handle DST boundary cases
Move Git::SVN::get_tz to Git::get_tz_offset
l10n: de.po: translate "reset" as "neu setzen"
l10n: de.po: translate "revision" consistently as "Revision"
l10n: de.po: translate 11 new messages
git-count-objects.txt: describe each line in -v output
contrib/subtree: make the manual directory if needed
contrib/subtree: use %B for split subject/body
status: show the branch name if possible in in-progress info
doc: generate a list of valid merge tools
mergetool--lib: add functions for finding available tools
Honor configure's htmldir switch
Makefile: explicitly set target name for autogenerated dependencies
branch: mark more strings for translation
branch: give a more helpful message on redundant arguments
branch: reject -D/-d without branch name
branch: no detached HEAD check when editing another branch's description
mergetool--lib: improve the help text in guess_merge_tool()
mergetool--lib: simplify command expressions
mergetools: simplify how we handle "vim" and "defaults"
mergetool--lib: improve show_tool_help() output
mergetools/vim: remove redundant diff command
git-p4.py: support Python 2.4
git-p4.py: support Python 2.5
ident: do not drop username when reading from /etc/mailname
l10n: vi.po: updated Vietnamese translation
Merge branch 'master' of git://github.com/ralfth/git-po-de
l10n: Update git.pot (11 new, 7 removed messages)
t7102 (reset): don't hardcode SHA-1 in expected outputs
git-svn: Simplify calculation of GIT_DIR
l10n: de.po: fix some minor issues
grep: avoid accepting ambiguous revision
Update :/abc ambiguity check
git-svn: do not escape certain characters in paths
git-completion.bash: replace zsh notation that breaks bash 3.X
git svn: do not overescape URLs (fallback case)
Git::SVN::Editor::T: pass $deletions to ->A and ->D
reset: update documentation to require only tree-ish with paths
attr: avoid calling find_basename() twice per path
config.txt: Document help.htmlpath config parameter
test-lib.sh: unfilter GIT_PERF_*
attr: make it build with DEBUG_ATTR again
remote-hg: store converted URL
reset [--mixed]: use diff-based reset whether or not pathspec was given
reset: allow reset on unborn branch
reset $sha1 $pathspec: require $sha1 only to be treeish
reset.c: inline update_index_refresh()
reset.c: finish entire cmd_reset() whether or not pathspec is given
reset [--mixed]: only write index file once
reset.c: move lock, write and commit out of update_index_refresh()
reset.c: move update_index_refresh() call out of read_from_tree()
reset.c: replace switch by if-else
reset: avoid redundant error message
reset --keep: only write index file once
reset.c: share call to die_if_unmerged_cache()
reset.c: extract function for updating {ORIG_,}HEAD
reset.c: remove unnecessary variable 'i'
reset.c: extract function for parsing arguments
reset: don't allow "git reset -- $pathspec" in bare repo
reset.c: pass pathspec around instead of (prefix, argv) pair
reset $pathspec: exit with code 0 if successful
reset $pathspec: no need to discard index
attr: fix off-by-one directory component length calculation
git-clean: Display more accurate delete messages
git-completion.bash: add support for path completion
fetch: elaborate --depth action
upload-pack: fix off-by-one depth calculation in shallow clone
fetch: add --unshallow for turning shallow repo into complete one
git-completion.bash: silence "not a valid object" errors
clone: forbid --bare --separate-git-dir <dir>
contrib/vim: simplify instructions for old vim support
log: add log.mailmap configuration option
log: grep author/committer using mailmap
test: add test for --use-mailmap option
log: add --use-mailmap option
pretty: use mailmap to display username and email
mailmap: add mailmap structure to rev_info and pp
mailmap: simplify map_user() interface
commit: make default of "cleanup" option configurable
upload-pack: only accept commits from "shallow" line
Use split_ident_line to parse author and committer
status: always report ignored tracked directories
l10n: de.po: address the user formally
Makefile: add comment on CYGWIN_V15_WIN32API
docs: manpage XML depends on asciidoc.conf
merge: Honor prepare-commit-msg return code
format-patch: pick up branch description when no ref is specified
format-patch: pick up correct branch name from symbolic ref
t4014: a few more tests on cover letter using branch description
branch: delete branch description if it's empty
remote-bzr: detect local repositories
remote-bzr: add support for older versions of bzr
remote-bzr: add support to push special modes
remote-bzr: add support for fecthing special modes
remote-bzr: add simple tests
build: do not automatically reconfigure unless configure.ac changed
gitweb: fix error in sanitize when highlight is enabled
git-status: Test --ignored behavior
dir.c: Make git-status --ignored more consistent
Makefile: add USE_WILDMATCH to use wildmatch as fnmatch
wildmatch: advance faster in <asterisk> + <literal> patterns
wildmatch: make a special case for "*/" with FNM_PATHNAME
test-wildmatch: add "perf" command to compare wildmatch and fnmatch
wildmatch: support "no FNM_PATHNAME" mode
wildmatch: make dowild() take arbitrary flags
wildmatch: rename constants and update prototype
wildmatch: replace variable 'special' with better named ones
compat/fnmatch: respect NO_FNMATCH* even on glibc
wildmatch: fix "**" special case
config.txt: a few lines about branch.<name>.description
Documentation: move diff.wordRegex from config.txt to diff-config.txt
mergetools/p4merge: Honor $TMPDIR for the /dev/null placeholder
learn to pick/revert into unborn branch
tests: move test_cmp_rev to test-lib-functions
oneway_merge(): only lstat() when told to update worktree
clarify -M without % symbol in diff-options
Add directory pattern matching to attributes
cache-tree: invalidate i-t-a paths after generating trees
cache-tree: fix writing cache-tree when CE_REMOVE is present
cache-tree: replace "for" loops in update_one with "while" loops
cache-tree: remove dead i-t-a code in verify_cache()
README: Git is released under the GPLv2, not just "the GPL"
Generalize the inclusion of strings.h
Detect when the passwd struct is missing pw_gecos
Support builds when sys/param.h is missing
remote-bzr: update working tree upon pushing
Fix sizeof usage in get_permutations
git.txt: add missing info about --git-dir command-line option
index-format.txt: clarify what is "invalid"
nedmalloc: Fix a compile warning (exposed as error) with GCC 4.7.2
gitweb: Sort projects with undefined ages last
Makefile: whitespace style fixes in macro definitions
mingw_rmdir: do not prompt for retry when non-empty
Documentation/git-stash.txt: add a missing verb
Merge branch git://github.com/ralfth/git-po-de
l10n: de.po: translate 22 new messages
l10n: de.po: translate 825 new messages
mingw: get rid of getpass implementation
mingw: reuse tty-version of git_terminal_prompt
compat/terminal: separate input and output handles
compat/terminal: factor out echo-disabling
mingw: make fgetc raise SIGINT if apropriate
mingw: correct exit-code for SIGALRM's SIG_DFL
fast-export: make sure updated refs get updated
fast-export: don't handle uninteresting refs
t4041 (diff-submodule-option): modernize style
t4041 (diff-submodule-option): rewrite add_file() routine
t4041 (diff-submodule-option): parse digests sensibly
l10n: vi.po: update to git-v1.8.0.1-347-gf94c3
l10n: Update git.pot (5 new, 1 removed messages)
fast-export: fix comparison in tests
fast-export: trivial cleanup
remote-testgit: implement the "done" feature manually
remote-testgit: report success after an import
remote-testgit: exercise more features
remote-testgit: cleanup tests
remote-testgit: remove irrelevant test
remote-testgit: remove non-local functionality
Add new simplified git-remote-testgit
Rename git-remote-testgit to git-remote-testpy
completion: fix warning for zsh
Merge git://github.com/vnwildman/git
French translation: copy -> copie.
completion: add options --single-branch and --branch to "git clone"
remote-bzr: add support for remote repositories
remote-bzr: add support for pushing
Add new remote-bzr transport helper
remote-hg: fix for older versions of python
remote-hg: fix for files with spaces
t4041 (diff-submodule-option): don't hardcode SHA-1 in expected outputs
Support for git aliasing for tcsh completion
Documentation: improve phrasing in git-push.txt
Fix typo in remote set-head usage
send-email: avoid questions when user has an ident
tree_entry_interesting: do basedir compare on wildcard patterns when possible
pathspec: apply "*.c" optimization from exclude
pathspec: do exact comparison on the leading non-wildcard part
remote-helpers: fix failure message
remote-testgit: fix direction of marks
fast-export: avoid importing blob marks
Completion must sort before using uniq
l10n: vi.po: Update follow git-v1.8.0-273-g2d242
l10n: vi.po: update to git-v1.7.12-437-g1084f
l10n: Update git.pot (14 new, 3 removed messages)
compat/fnmatch: fix off-by-one character class's length check
test-wildmatch: avoid Windows path mangling
pathspec: save the non-wildcard length part
completion: start moving to the new zsh completion
completion: add new zsh completion
USE CGYWIN_V15_WIN32API as macro to select api for cygwin
submodule: display summary header in bold
diff: introduce diff.submodule configuration variable
Documentation: move diff.wordRegex from config.txt to diff-config.txt
tcsh-completion re-using git-completion.bash
completion: simplify __gitcomp() test helper
completion: refactor __gitcomp related tests
completion: consolidate test_completion*() tests
completion: simplify tests using test_completion_long()
completion: standardize final space marker in tests
completion: add comment for test_completion()
usage.c: detect recursion in die routines and bail out immediately
Update cygwin.c for new mingw-64 win32 api headers
remote-hg: avoid bad refs
remote-hg: try the 'tip' if no checkout present
remote-hg: fix compatibility with older versions of hg
remote-hg: add missing config for basic tests
remote-hg: the author email can be null
remote-hg: add option to not track branches
remote-hg: add extra author test
remote-hg: add tests to compare with hg-git
remote-hg: add bidirectional tests
test-lib: avoid full path to store test results
remote-hg: add basic tests
remote-hg: fake bookmark when there's none
remote-hg: add compat for hg-git author fixes
remote-hg: add support for hg-git compat mode
remote-hg: match hg merge behavior
remote-hg: make sure the encoding is correct
remote-hg: add support to push URLs
remote-hg: add support for remote pushing
remote-hg: add support for pushing
Add new remote-hg transport helper
remote-testgit: properly check for errors
fetch-pack: move core code to libgit.a
fetch-pack: remove global (static) configuration variable "args"
send-pack: move core code to libgit.a
Move setup_diff_pager to libgit.a
Move print_commit_list to libgit.a
Move estimate_bisect_steps to libgit.a
Move try_merge_command and checkout_fast_forward to libgit.a
Document git-svn fetch --log-window-size parameter
Use character class for sed expression instead of \s
configure: fix some output message
gitk: Use bindshiftfunctionkey to bind Shift-F5
gitk: Refactor code for binding modified function keys
tree-walk: use enum interesting instead of integer
git-gui: Don't prepend the prefix if value looks like a full path
git-gui: Detect full path when parsing arguments
Merge branch 'master' of https://github.com/nafmo/git-l10n-sv
Merge branch 'master' of git://github.com/vnwildman/git
l10n: vi.po: update from v1.8.0-rc2-4-g42e55
completion: add format-patch options to send-email
l10n: Update git.pot (3 new, 6 removed messages)
Merge branch 'master' of git://github.com/vnwildman/git
Support "**" wildcard in .gitignore and .gitattributes
wildmatch: make /**/ match zero or more directories
wildmatch: adjust "**" behavior
wildmatch: fix case-insensitive matching
wildmatch: remove static variable force_lower_case
wildmatch: make wildmatch's return value compatible with fnmatch
t3070: disable unreliable fnmatch tests
Integrate wildmatch to git
wildmatch: follow Git's coding convention
wildmatch: remove unnecessary functions
Import wildmatch from rsync
ctype: support iscntrl, ispunct, isxdigit and isprint
ctype: make sane_ctype[] const array
attr: more matching optimizations from .gitignore
gitignore: make pattern parsing code a separate function
exclude: split pathname matching code into a separate function
exclude: fix a bug in prefix compare optimization
exclude: split basename matching code into a separate function
exclude: stricten a length check in EXC_FLAG_ENDSWITH case
l10n: vi.po: update translation upto cc76011
config: exit on error accessing any config file
doc: advertise GIT_CONFIG_NOSYSTEM
config: treat user and xdg config permission problems as errors
config, gitignore: failure to access with ENOTDIR is ok
Fix spelling error in post-receive-email hook
grep: stop looking at random places for .gitattributes
rebase: Handle cases where format-patch fails
mergetools/p4merge: Handle "/dev/null"
svn test: escape peg revision separator using empty peg rev
git svn: work around SVN 1.7 mishandling of svn:special changes
attr: a note about the order of .gitattributes lookup
tests: "cp -a" is a GNUism
Git url doc: mark ftp/ftps as read-only and deprecate them
gitignore.txt: suggestions how to get literal # or ! at the beginning
Add a test script for remote-svn
remote-svn: add marks-file regeneration
Add a svnrdump-simulator replaying a dump file for testing
remote-svn: add incremental import
remote-svn: Activate import/export-marks for fast-import
Create a note for every imported commit containing svn metadata
vcs-svn: add fast_export_note to create notes
Allow reading svn dumps from files via file:// urls
remote-svn, vcs-svn: Enable fetching to private refs
When debug==1, start fast-import with "--stats" instead of "--quiet"
Add documentation for the 'bidi-import' capability of remote-helpers
Connect fast-import to the remote-helper via pipe, adding 'bidi-import' capability
Add argv_array_detach and argv_array_free_detached
Add svndump_init_fd to allow reading dumps from arbitrary FDs
Add git-remote-testsvn to Makefile
Implement a remote helper for svn in C
git-svn: keep leading slash when canonicalizing paths (fallback case)
Git::SVN: rename private path field
Make git-svn branch patterns match complete URL
git-svn.perl: keep processing all commits in parents_exclude
git-svn.perl: consider all ranges for a given merge, instead of only tip-by-tip
attr: avoid searching for basename on every match
attr: avoid strlen() on every match
Documentation: mention `push.default` in git-push.txt
Remove the hard coded length limit on variable names in config files
revision: make --grep search in notes too if shown
revision: add --grep-reflog to filter commits by reflog messages
grep: prepare for new header field filter
Merge git://github.com/gotgit/git-po-zh_CN
Merge branch 'maint'
Merge branch 'l10n-thynson' of git://github.com/thynson/git-po-zh_CN into maint
Merge branch 'maint' of https://github.com/ralfth/git-po-de into maint
l10n: de.po: correct translation of a 'rebase' message
submodule: if $command was not matched, don't parse other args
graph.c: infinite loop in git whatchanged --graph -m
test-lib: use $SHELL_PATH, not $SHELL
mergetool--lib: Allow custom commands to override built-ins
commit: pay attention to submodule.$name.ignore in .gitmodules
clone --single: limit the fetch refspec to fetched branch
Documentation: Document signature showing options
completion: fix shell expansion of items
t/test-lib: make sure Git has already been built
rebase -i: Add tests for "--edit-todo"
rebase -i: Teach "--edit-todo" action
rebase -i: Refactor help messages for todo file
rebase usage: subcommands can not be combined with -i
t/perf: add "trash directory" to .gitignore
git-gui: Fix semi-working shortcuts for unstage and revert
completion: add --no-edit to git-commit
l10n: zh.CN.po: msgmerge git.pot (1142t195f630u)
l10n: Update git.pot (825 new, 24 removed messages)
Add MALLOC_CHECK_ and MALLOC_PERTURB_ libc env to the test suite for detecting heap corruption
fetch: align per-ref summary report in UTF-8 locales
Revert diffstat back to English
Merge git://github.com/vnwildman/git
checkout: reorder option handling
build: don't duplicate substitution of make variables
build: improve GIT_CONF_SUBST signature
gitk: Rename 'tagcontents' to 'cached_tagcontent'
gitk: Teach "Reread references" to reload tags
l10n: vi.po: update to v1.7.12-146-g16d26
ls-remote: document the '--get-url' option
l10n: de.po: translate 2 new messages
fetch --all: pass --tags/--no-tags through to each remote
l10n: zh_CN.po: translate 2 new messages
send-email: initial_to and initial_reply_to are both optional
status: remove i18n legos
doc: move rev-list option -<n> from git-log.txt to rev-list-options.txt
remote: prefer subcommand name 'remove' to 'rm'
l10n: Update git.pot (2 new, 4 removed messages)
l10n: vi.po & TEAMS: review Vietnamese translation
i18n: mark more index-pack strings for translation
cherry-pick/revert: respect order of revisions to pick
demonstrate broken 'git cherry-pick three one two'
teach log --no-walk=unsorted, which avoids sorting
checkout: move more parameters to struct checkout_opts
checkout: pass "struct checkout_opts *" as const pointer
branch -v: align even when branch names are in UTF-8
Fix tests under GETTEXT_POISON on parseopt
Fix tests under GETTEXT_POISON on git-remote
Fix tests under GETTEXT_POISON on pack-object
Fix tests under GETTEXT_POISON on git-apply
Fix tests under GETTEXT_POISON on diffstat
Fix tests under GETTEXT_POISON on git-stash
Fix tests under GETTEXT_POISON on relative dates
Use imperative form in help usage to describe an action
Reduce translations by using same terminologies
i18n: write-tree: mark parseopt strings for translation
i18n: verify-tag: mark parseopt strings for translation
i18n: verify-pack: mark parseopt strings for translation
i18n: update-server-info: mark parseopt strings for translation
i18n: update-ref: mark parseopt strings for translation
i18n: update-index: mark parseopt strings for translation
i18n: tag: mark parseopt strings for translation
i18n: symbolic-ref: mark parseopt strings for translation
i18n: show-ref: mark parseopt strings for translation
i18n: show-branch: mark parseopt strings for translation
am: quote string for translation before passing to eval_gettextln
difftool: silence warning
i18n: shortlog: mark parseopt strings for translation
i18n: rm: mark parseopt strings for translation
i18n: revert, cherry-pick: mark parseopt strings for translation
i18n: rev-parse: mark parseopt strings for translation
i18n: reset: mark parseopt strings for translation
i18n: rerere: mark parseopt strings for translation
i18n: status: mark parseopt strings for translation
i18n: replace: mark parseopt strings for translation
i18n: remote: mark parseopt strings for translation
i18n: read-tree: mark parseopt strings for translation
i18n: push: mark parseopt strings for translation
i18n: prune: mark parseopt strings for translation
i18n: prune-packed: mark parseopt strings for translation
i18n: pack-refs: mark parseopt strings for translation
i18n: pack-objects: mark parseopt strings for translation
i18n: notes: mark parseopt strings for translation
i18n: name-rev: mark parseopt strings for translation
i18n: mv: mark parseopt strings for translation
i18n: mktree: mark parseopt strings for translation
i18n: merge: mark parseopt strings for translation
i18n: merge-file: mark parseopt strings for translation
i18n: merge-base: mark parseopt strings for translation
i18n: ls-tree: mark parseopt strings for translation
i18n: ls-files: mark parseopt strings for translation
i18n: log: mark parseopt strings for translation
i18n: init-db: mark parseopt strings for translation
i18n: help: mark parseopt strings for translation
i18n: hash-object: mark parseopt strings for translation
i18n: grep: mark parseopt strings for translation
i18n: gc: mark parseopt strings for translation
i18n: fsck: mark parseopt strings for translation
i18n: format-patch: mark parseopt strings for translation
i18n: for-each-ref: mark parseopt strings for translation
i18n: fmt-merge-msg: mark parseopt strings for translation
i18n: fetch: mark parseopt strings for translation
i18n: fast-export: mark parseopt strings for translation
i18n: describe: mark parseopt strings for translation
i18n: config: mark parseopt strings for translation
i18n: count-objects: mark parseopt strings for translation
i18n: commit: mark parseopt strings for translation
i18n: column: mark parseopt strings for translation
i18n: clone: mark parseopt strings for translation
i18n: clean: mark parseopt strings for translation
i18n: cherry: mark parseopt strings for translation
i18n: checkout: mark parseopt strings for translation
i18n: checkout-index: mark parseopt strings for translation
i18n: check-attr: mark parseopt strings for translation
i18n: cat-file: mark parseopt strings for translation
i18n: branch: mark parseopt strings for translation
i18n: blame: mark parseopt strings for translation
i18n: add: mark parseopt strings for translation
i18n: bisect--helper: mark parseopt strings for translation
i18n: archive: mark parseopt strings for translation
i18n: mark "style" in OPT_COLUMN() for translation
contrib: add win32 credential-helper
gitweb: URL-decode $my_url/$my_uri when stripping PATH_INFO
Add Code Compare v2.80.4 as a merge / diff tool for Windows
mergetool,difftool: Document --tool-help consistently
add tests for 'git rebase --keep-empty'
Merge git://github.com/ralfth/git-po-de
prune.c: only print informational message in show_only or verbose mode
l10n: de.po: translate 77 new messages
l10n: Improve many translation for zh_CN
l10n: Unify the translation for '(un)expected'
t/t5400: demonstrate breakage caused by informational message from prune
l10n: vi.po: update one message
doc: A few minor copy edits.
l10n: zh_CN.po: update one translation
read_index_from: remove bogus errno assignments
l10n: Update one message in git.pot
merge-recursive: separate message for common ancestors
l10n: zh_CN.po: translate 76 new messages
tests: Introduce test_seq
gitk: Fix GIT_TRACE issues
grep: add a grep.patternType configuration setting
l10n: vi.po update to follow POT in 3b613
l10n: Update git.pot (76 new, 4 removed messages)
git-rebase.sh: fix typo in an error message
l10n: de.po: translate 4 new messages
l10n: vi.po: translate 4 new messages
l10n: zh_CN.po: translate 4 new messages
t7409: make sure submodule is initialized and updated in more detail
Add explanatory comment for transport-helpers refs mapping.
l10n: Update git.pot (4 new, 3 removed messages)
cherry: remove redundant check for merge commit
cherry: don't set ignored rev_info options
remove unnecessary parameter from get_patch_ids()
i18n: merge-recursive: mark strings for translation
Remove dead code which contains bad gettext block
i18n: am: mark more strings for translation
rebase: remove obsolete and unused LONG_USAGE which breaks xgettext
i18n: Rewrite gettext messages start with dash
difftool: Disable --symlinks on cygwin
difftool: Handle compare() returning -1
difftool: Wrap long lines for readability
i18n: leave \n out of translated diffstat
git-submodule: work with GIT_DIR/GIT_WORK_TREE
i18n: rebase: mark messages for translation
i18n: New keywords for xgettext extraction from sh
difftool: Check all return codes from compare()
difftool: Handle finding mergetools/ in a path with spaces
Makefile: BLK_SHA1 does not require fast htonl() and unaligned loads
difftool: Use symlinks when diffing against the worktree
difftool: Call the temp directory "git-difftool"
difftool: Move option values into a hash
difftool: Eliminate global variables
difftool: Simplify print_tool_help()
Makefile: fix location of listing produced by "make subdir/foo.s"
block-sha1: put expanded macro parameters in parentheses
block-sha1: avoid pointer conversion that violates alignment constraints
difftool: only copy back files modified during directory diff
build: reconfigure automatically if configure.ac changes
build: "make clean" should not remove configure-generated files
autoconf: use AC_CONFIG_COMMANDS instead of ad-hoc 'config.mak.append'
autoconf: remove few redundant semicolons
autoconf: remove some redundant shell indirections
autoconf: GIT_CONF_APPEND_LINE -> GIT_CONF_SUBST
autoconf: GIT_CONF_APPEND_LINE: change signature
doc: A few minor copy edits.
Strip namelen out of ce_flags into a ce_namelen field
Restore umasks influence on the permissions of work tree created by clone
Makefile: document ground rules for target-specific dependencies
Makefile: be silent when only GIT_USER_AGENT changes
Makefile: fold XDIFF_H and VCSSVN_H into LIB_H
Replace strlen() with ce_namelen()
vcs-svn: allow 64-bit Prop-Content-Length
vcs-svn: suppress a signed/unsigned comparison warning
l10n: zh_CN.po: translate 29 new messages
l10n: de.po: translate 29 new messages
l10n: Update translation for Vietnamese
l10n: Update git.pot (29 new messages)
fast-export: quote paths with spaces
add test case for rebase of empty commit
am: don't call mailinfo if $rebasing
am --rebasing: get patch body from commit, not from mailbox
rebase --root: print usage on too many args
rebase: don't source git-sh-setup twice
git-add--interactive.perl: Remove two unused variables
Documentation: Fix misspellings
clone: fix ref selection in --single-branch --branch=xxx
diff-no-index: exit(1) if 'diff --quiet <repo file> <external file>' finds changes
perl/Makefile: move "mkdir -p" to module installation loop for maintainability
perl/Makefile: install Git::SVN::* when NO_PERL_MAKEMAKER=yes, too
perl/Makefile.PL: warn about duplicate module list in perl/Makefile
l10n: it.po: translate 212 new messages
Merge git://github.com/ralfth/git-po-de
git-svn: use YAML format for mergeinfo cache when possible
git-svn: make Git::SVN::RA a separate file
git-svn: make Git::SVN::Editor a separate file
l10n: Update  po/vi.po to v1.7.11.rc2.2.gb694fbb
commit: document a couple of options
l10n: zh_CN.po: translate 27 new messages
l10n: Update git.pot (27 new, 1 removed messages)
rerere: remove i18n legos in result message
notes-merge: remove i18n legos in merge result message
reflog: remove i18n legos in pruning message
Remove i18n legos in notifying new branch tracking setup
exclude: do strcmp as much as possible before fnmatch
dir.c: get rid of the wildcard symbol set in no_wildcard()
submodule: fix handling of superproject origin URLs like foo, ./foo and ./foo/bar
submodule: fix sync handling of some relative superproject origin URLs
t3510 (cherry-pick-sequence): add missing '&&'
Merge git://github.com/ralfth/git-po-de
l10n: Update translation for Vietnamese
submodule: document failure to handle relative superproject origin URLs
submodule: additional regression tests for relative URLs
l10n: zh_CN.po: translate 2 new, 3 fuzzy messages
l10n: Update git.pot (5 new, 3 removed messages)
i18n: apply: split to fix a partial i18n message
l10n: Set nplurals of zh_CN.po from 1 to 2
l10n: zh_CN.po: translate 323 new messages
Makefile: add missing GIT-VERSION-FILE dependency
l10n: zh.CN.po: update by msgmerge git.pot
First release translation for Vietnamese
Init translation for Vietnamese
rebase: report invalid commit correctly
l10n: New it.po file with 504 translations
Unindent excluded_from_list()
pack-objects: use streaming interface for reading large loose blobs
git-p4: Clean up branch test cases
git-p4: Verify detection of "empty" branch creation
git-p4: Test changelists touching two branches
Merge branch 'maint'
git-svn: make Git::SVN::Fetcher a separate file
git-svn: rename SVN::Git::* packages to Git::SVN::*
git-svn: move Git::SVN::Prompt into its own file
config doc: remove confusion about relative GIT_DIR from FILES section
checkout: no progress messages if !isatty(2).
index-pack: use streaming interface for collision test on large blobs
index-pack: factor out unpack core from get_data_from_pack
index-pack: use streaming interface on large blobs (most of the time)
index-pack: hash non-delta objects while reading from stream
completion: split __git_ps1 into a separate script
completion: remove executable mode
l10n: Update git.pot (41 new messages)
completion: add support for backwards compatibility
completion: rename internal helpers _git and _gitk
pack-objects: refactor write_object() into helper functions
pack-objects, streaming: turn "xx >= big_file_threshold" to ".. > .."
rev-parse doc: --git-dir does not always show a relative path
git-svn: clarify the referent of dcommit's optional argument
git-svn: support rebase --preserve-merges
diff --no-index: don't leak buffers in queue_diff
diff --no-index: reset temporary buffer lengths on directory iteration
Merge branch 'maint' into master
l10n: zh_CN.po: translate 3 new messages
Merge branch 'master' of git://github.com/marcomsousa/git-l10n-pt_PT
l10n: pt_PT.po translate new messages
l10n: Update git.pot (8 new, 4 removed messages)
Merge branch 'maint'
l10n: Update git.pot (3 new, 2 removed messages)
completion: add new __git_complete helper
Merge branch 'maint'
l10n: zh_CN.po: translate 1 new message
i18n: apply: mark parseopt strings for translation
i18n: parseopt: lookup help and argument translations when showing usage
checkout: do not corrupt HEAD on empty repo
apply: remove lego in i18n string in gitdiff_verify_name
l10n: Update git.pot (275 new, 15 removed messages)
Merge branch 'maint'
l10n: Update git.pot (1 new messages)
index-pack: disable threading if NO_PREAD is defined
index-pack: support multithreaded delta resolving
index-pack: restructure pack processing into three main functions
Documentation/git-config: describe and clarify "--local <file>" option
clone: fix progress-regression
grep.c: remove redundant line of code
completion: simplify __git_complete_revlist_file
Makefile: keep many variable list sorted
branch: remove lego in i18n tracking info strings
archive-tar: stream large blobs to tar file
archive: delegate blob reading to backend
archive-tar: unindent write_tar_entry by one level
archive-tar: turn write_tar_entry into blob-writing only
Merge l10n updates from branch 'maint' into master
git-commit: remove lego in i18n messages
git-commit: remove lego in i18n messages
git-branch: remove lego in i18n messages
l10n: Update Simplified Chinese translation
Merge branch 'maint'
l10n: Update Simplified Chinese translation
l10n: Update git.pot (2 new messages)
Merge maint branch for tracking l10n updates of git stable version
l10n: Update git.pot (33 new, 24 deleted messages)
Merge master branch for tracking l10n updates of next release
tag: add --column
column: support piping stdout to external git-column process
status: add --column
branch: add --column
help: reuse print_columns() for help -a
column: add dense layout support
column: add columnar layout
Stop starting pager recursively
Add column layout skeleton and git-column
bundle: remove stray single-quote from error message
help: replace underlining "help -a" headers using hyphens with a blank line
gitk: Avoid Meta1-F5
i18n: bundle: mark strings for translation
i18n: index-pack: mark strings for translation
i18n: apply: update say_patch_name to give translators complete sentence
i18n: apply: mark strings for translation
i18n: remote: mark strings for translation
i18n: make warn_dangling_symref() automatically append \n
i18n: help: mark strings for translation
i18n: mark relative dates for translation
strbuf: convenience format functions with \n automatically appended
difftool: print list of valid tools with '--tool-help'
difftool: teach difftool to handle directory diffs
Makefile: feed all header files to xgettext
completion: avoid trailing space for --exec-path
completion: add missing general options
completion: simplify by using $prev
completion: simplify __gitcomp_1
Prevent graph_width of stat width from falling below min
t4052: Test diff-stat output with minimum columns
merge tests: octopus with redundant parents
t4052: Adjust --graph --stat output for prefixes
Adjust stat width calculations to take --graph output into account
Add output_prefix_length to diff_options
tests: add initial bash completion tests
fast-import doc: cat-blob and ls responses need to be consumed quickly
stash: use eval_gettextln correctly
test: am of empty patch should not succeed
test: use test_i18ncmp for "Patch format detection failed" message
test: do not rely on US English tracking-info messages
Fix httpd tests that broke when non-ff push advice changed
gitweb: Refinement highlightning in combined diffs
gitweb: Highlight interesting parts of diff
gitweb: Push formatting diff lines to print_diff_chunk()
gitweb: Use print_diff_chunk() for both side-by-side and inline diffs
gitweb: Extract print_sidebyside_diff_lines()
gitweb: Pass esc_html_hl_regions() options to esc_html()
gitweb: esc_html_hl_regions(): Don't create empty <span> elements
gitweb: Use descriptive names in esc_html_hl_regions()
tests: modernise style: more uses of test_line_count
l10n: Updated pt_PT language
var doc: advertise current DEFAULT_PAGER and DEFAULT_EDITOR settings
rev-parse --show-prefix: add in trailing newline
spec: add missing build dependency
l10n: Inital Portuguese Portugal language (pt_PT)
git-commit.txt: clarify -t requires editing message
var doc: default editor and pager are configurable at build time
l10n: Improve zh_CN translation for Git 1.7.10-rc3
Add url of Swedish l10n team in TEAMS file
l10n: Review zh_CN translation for Git 1.7.10-rc1
grep doc: add --break / --heading / -W to synopsis
configure: be more idiomatic
configure: avoid some code repetitions thanks to m4_{push,pop}def
configure: move definitions of private m4 macros before AC_INIT invocation
difftool: eliminate setup_environment function
difftool: stop appending '.exe' to git
difftool: remove explicit change of PATH
difftool: exit(0) when usage is printed
difftool: add '--no-gui' option
difftool: parse options using Getopt::Long
t4202: add test for "log --graph --stat -p" separator lines
log --graph: fix break in graph lines
log --graph --stat: three-dash separator should come after graph lines
push: Provide situational hints for non-fast-forward errors
t7800: Test difftool passing arguments to diff
gitk: Use symbolic font names "sans" and "monospace" when available
perl/Makefile: install Git::I18N under NO_PERL_MAKEMAKER
l10n: Update zh_CN translation for Git 1.7.10-rc1
l10n: Update git.pot (1 new message)
Merge v1.7.10-rc0 for git l10n update
Documentation/difftool: add deltawalker to list of valid diff tools
contrib/diffall: fix cleanup trap on Windows
contrib/diffall: eliminate duplicate while loops
contrib/diffall: eliminate use of tar
contrib/diffall: create tmp dirs without mktemp
contrib/diffall: comment actual reason for 'cdup'
Documentation/diff-options: reword description of --submodule option
diffstat summary line varies by locale: miscellany
test: use numstat instead of diffstat in binary-diff test
test: use --numstat instead of --stat in "git stash show" tests
test: test cherry-pick functionality and output separately
test: modernize funny-names test style
test: use numstat instead of diffstat in funny-names test
test: use test_i18ncmp when checking --stat output
Git::I18N: compatibility with perl <5.8.3
fast-import: don't allow 'ls' of path with empty components
fast-import: leakfix for 'ls' of dirty trees
configure: allow user to prevent $PATH "sanitization" on Solaris
rerere: Document 'rerere remaining'
l10n: Improve zh_CN translation for msg "not something we can merge"
l10n: Improve zh_CN trans for msg that cannot fast-forward
l10n: Update zh_CN translation for 1.7.10-rc0
l10n: Update git.pot (1 new message)
Merge v1.7.10-rc0 for git l10n update
apply: do not leak patches and fragments
update-server-info: respect core.bigfilethreshold
fsck: use streaming API for writing lost-found blobs
show: use streaming API for showing blobs
parse_object: avoid putting whole blob in core
cat-file: use streaming API to print blobs
Add more large blob test cases
gitweb: Fix fixed string (non-regexp) project search
mergetools: add a plug-in to support DeltaWalker
l10n: Update zh_CN translation for 1.7.9.2
Add threaded versions of functions in symlinks.c.
t5512 (ls-remote): modernize style
gitweb: Fix passing parameters to git_project_search_form
t0000: modernise style
tests: fix spurious error when run directly with Solaris /usr/xpg4/bin/sh
l10n: Improve commit msg for zh_CN translation
l10n: Improve zh_CN translation for msg that make empty commit when amend.
l10n: Improve zh_CN translation for empty cherry-pick msg.
l10n: Improve zh_CN translation for msg about branch deletion deny
l10n: Improve zh_CN translation for lines insertion and deletion.
Update l10n guide: change the repository URL, etc
l10n: leave leading space unchanged for zh_CN.po
gitweb: Handle invalid regexp in regexp search
rev-list: fix --verify-objects --quiet becoming --objects
rev-list: remove BISECT_SHOW_TRIED flag
Merge pull request from jiangxin/master
l10n: update Chinese translation to the new git.po
l10n: Update git.pot (12 new messages)
Merge branch 'master' into git-po
CodingGuidelines: do not use 'which' in shell scripts
CodingGuidelines: Add a note about spaces after redirection
contrib: add git-diffall script
grep -P: add tests for matching ^ and $
l10n: fast-forward here is ff-only merge, not push
l10n: update zh_CN translation for "Fetching %s"
gitweb: Highlight matched part of shortened project description
gitweb: Highlight matched part of project description when searching projects
gitweb: Highlight matched part of project name when searching projects
gitweb: Introduce esc_html_match_hl and esc_html_hl_regions
pack-objects: Fix compilation with NO_PTHREDS
grep -P: Fix matching ^ and $
rebase -m: only call "notes copy" when rewritten exists and is non-empty
gitweb: Faster project search
gitweb: Option for filling only specified info in fill_project_list_info
gitweb: Refactor checking if part of project info need filling
push: add '--prune' option
remote: refactor code into alloc_delete_ref()
remote: reorganize check_pattern_match()
remote: use a local variable in match_push_refs()
git-svn.perl: fix a false-positive in the "already exists" test
git-svn: Fix time zone in --localtime
git-svn: un-break "git svn rebase" when log.abbrevCommit=true
git-svn: remove redundant porcelain option to rev-list
completion: add --interactive option to git svn dcommit
remote: fix set-branches usage and documentation
gitweb: Fix 'grep' search for multiple matches in file
gitweb: Fix "heads" view when there is no current branch
l10n: po for zh_CN
l10n: initial git.pot for 1.7.10 upcoming release
t: use sane_unset instead of unset
Remove Git's support for smoke testing
Makefile: Change the default compiler from "gcc" to "cc"
gitweb: Harden and improve $project_filter page title
mergetools/meld: Use --help output to detect --output support
tag: add --points-at list option
cache-tree: update API to take abitrary flags
completion: simplify __gitcomp and __gitcomp_nl implementations
completion: use ls -1 instead of rolling a loop to do that ourselves
completion: work around zsh option propagation bug
Use correct grammar in diffstat summary line
git.spec: Workaround localized messages not put in any RPM
gitweb: Allow UTF-8 encoded CGI query parameters and path_info
vcs-svn: suppress a -Wtype-limits warning
vcs-svn: allow import of > 4GiB files
vcs-svn: suppress -Wtype-limits warning
vcs-svn: allow import of > 4GiB files
i18n: format_tracking_info "Your branch is behind" message
i18n: git-commit whence_s "merge/cherry-pick" message
find_pack_entry(): do not keep packed_git pointer locally
sha1_file.c: move the core logic of find_pack_entry() into fill_pack_entry()
pack-objects: convert to use parse_options()
pack-objects: remove bogus comment
pack-objects: do not accept "--index-version=version,"
gitweb: Make project search respect project_filter
gitweb: improve usability of projects search form
git-completion: workaround zsh COMPREPLY bug
git-p4: Add test case for complex branch import
git-p4: Search for parent commit on branch creation
clone: fix up delay cloning conditions
add a Makefile switch to avoid gettext translation in shell scripts
mergetool: Provide an empty file when needed
grep: fix -l/-L interaction with decoration lines
diff-index: enable recursive pathspec matching in unpack_trees
clone: print advice on checking out detached HEAD
clone: allow --branch to take a tag
clone: refuse to clone if --branch points to bogus ref
clone: --branch=<branch> always means refs/heads/<branch>
clone: delay cloning until after remote HEAD checking
clone: factor out remote ref writing
clone: factor out HEAD update code
clone: factor out checkout code
clone: write detached HEAD in bare repositories
t5601: add missing && cascade
index-pack: eliminate unlimited recursion in get_base_data()
index-pack: eliminate recursion in find_unresolved_deltas
Eliminate recursion in setting/clearing marks in commit list
diff-index: enable recursive pathspec matching in unpack_trees
Document limited recursion pathspec matching with wildcards
sequencer: factor code out of revert builtin
revert: prepare to move replay_action to header
git-cvsexportcommit: Fix calling Perl's rel2abs() on MSYS
t9200: On MSYS, do not pass Windows-style paths to CVS
unix-socket: do not let close() or chdir() clobber errno during cleanup
Fix incorrect ref namespace check
t2203: fix wrong commit command
gitweb: Fix actionless dispatch for non-existent objects
clone: add --single-branch to fetch only one branch
gitweb: Harden "grep" search against filenames with ':'
gitweb: Fix file links in "grep" search
Catch invalid --depth option passed to clone or fetch
fix hang in git fetch if pointed at a 0 length bundle
Add MYMETA.json to perl/.gitignore
Appease Sun Studio by renaming "tmpfile"
Fix a bitwise negation assignment issue spotted by Sun Studio
Fix an enum assignment issue spotted by Sun Studio
builtin/init-db.c: eliminate -Wformat warning on Solaris
t/t2023-checkout-m.sh: fix use of test_must_fail
gitweb: Fix fallback mode of to_utf8 subroutine
t3502, t3510: clarify cherry-pick -m failure
t3510 (cherry-pick-sequencer): use exit status
revert: simplify getting commit subject in format_todo()
revert: tolerate extra spaces, tabs in insn sheet
revert: make commit subjects in insn sheet optional
revert: free msg in format_todo()
commit_tree(): refuse commit messages that contain NULs
Convert commit_tree() to take strbuf as message
merge: abort if fails to commit
compat/setenv.c: error if name contains '='
compat/setenv.c: update errno when erroring out
test: errors preparing for a test are not special
Rename resolve_ref() to resolve_ref_unsafe()
Convert resolve_ref+xstrdup to new resolve_refdup function
Update documentation for stripspace
revert: stop creating and removing sequencer-old directory
Revert "reset: Make reset remove the sequencer state"
revert: do not remove state until sequence is finished
revert: allow single-pick in the middle of cherry-pick sequence
revert: pass around rev-list args in already-parsed form
revert: allow cherry-pick --continue to commit before resuming
revert: give --continue handling its own function
revert: convert resolve_ref() to read_ref_full()
t3401: use test_commit in setup
t3401: modernize style
t3040 (subprojects-basic): fix '&&' chaining, modernize style
am: don't persist keepcr flag
mingw: give waitpid the correct signature
t1510 (worktree): fix '&&' chaining
t3030 (merge-recursive): use test_expect_code
test: fix '&&' chaining
t3200 (branch): fix '&&' chaining
test: commit --amend should honor --no-edit
t7501 (commit): modernize style
test: remove a porcelain test that hard-codes commit names
test: add missing "&&" after echo command
git-gui: Set both 16x16 and 32x32 icons on X to pacify Xming.
i18n: add infrastructure for translating Git with gettext
Copy resolve_ref() return value for longer use
builtin/apply.c: report error on failure to recognize input
t/t4131-apply-fake-ancestor.sh: fix broken test
Documentation: fix formatting error in merge-options.txt
git-svn.perl: close the edit for propedits even with no mods
rebase -i: interrupt rebase when "commit --amend" failed during "reword"
Allow checkout -B <current-branch> to update the current branch
branch: allow a no-op "branch -M <current-branch> HEAD"
checkout,merge: disallow overwriting ignored files with --no-overwrite-ignore
checkout,merge: loosen overwriting untracked file check based on info/exclude
revert --abort: do not leave behind useless sequencer-old directory
revert: do not pass non-literal string as format to git_path()
revert: remove --reset compatibility option
revert: introduce --abort to cancel a failed cherry-pick
revert: write REVERT_HEAD pseudoref during conflicted revert
revert: improve error message for cherry-pick during cherry-pick
revert: rearrange pick_revisions() for clarity
revert: rename --reset option to --quit
Makefile: add option to disable automatic dependency generation
Makefile: add missing header file dependencies
notes merge: eliminate OUTPUT macro
do not let git_path clobber errno when reporting errors
mailmap: xcalloc mailmap_info
revert: prettify fatal messages
git-compat-util: don't assume value for undefined variable
sha1_file: don't mix enum with int
convert: don't mix enum with int
http: remove unused function hex()
Convert many resolve_ref() calls to read_ref*() and ref_exists()
prune: show progress while marking reachable objects
blame.c: Properly initialize strbuf after calling textconv_object(), again
pull: introduce a pull.rebase option to enable --rebase
remote: fix remote set-url usage
fsck: print progress
fsck: avoid reading every object twice
verify_packfile(): check as many object as possible in a pack
fsck: return error code when verify_pack() goes wrong
cast variable in call to free() in builtin/diff.c and submodule.c
apply: get rid of useless x < 0 comparison on a size_t type
t/t7508-status.sh: use test_i18ncmp
t/t6030-bisect-porcelain.sh: use test_i18ngrep
http: don't always prompt for password
t3200: add test case for 'branch -m'
branch -m: handle no arg properly
mingw: poll.h is no longer in sys/
gitweb: Add navigation to select side-by-side diff
gitweb: Use href(-replay=>1,...) for formats links in "commitdiff"
t9500: Add basic sanity tests for side-by-side diff in gitweb
t9500: Add test for handling incomplete lines in diff by gitweb
gitweb: Give side-by-side diff extra CSS styling
gitweb: Add a feature to show side-by-side diff
gitweb: Extract formatting of diff chunk header
gitweb: Refactor diff body line classification
git-gui: fix spelling error in sshkey.tcl
upload-archive: use start_command instead of fork
compat/win32/poll.c: upgrade from upstream
mingw: move poll out of sys-folder
blame.c: Properly initialize strbuf after calling, textconv_object()
clone: Quote user supplied path in a single quote pair
tree_entry_interesting: make use of local pointer "item"
tree_entry_interesting(): give meaningful names to return values
read_directory_recursive: reduce one indentation level
tree-walk.c: do not leak internal structure in tree_entry_len()
completion: fix issue with process substitution not working on Git for Windows
Reindent closing bracket using tab instead of spaces
pretty.c: use original commit message if reencoding fails
pretty.c: free get_header() return value
RelNotes/1.7.7.1: setgid bit patch is about fixing "git init" via Makefile setting
Add simple test for Git::config_path() in t/t9700-perl-git.sh
submodule::module_clone(): silence die() message from module_name()
submodule: whitespace fix
pack-objects: don't traverse objects unnecessarily
t/t3000-ls-files-others.sh: use $SHELL_PATH to run git-new-workdir script
strbuf.c: remove unnecessary strbuf_grow() from strbuf_getwholeline()
inet_ntop.c: Work around GCC 4.6's detection of uninitialized variables
pack-objects: rewrite add_descendants_to_write_order() iteratively
pack-objects: use unsigned int for counter and offset values
pack-objects: mark add_to_write_order() as inline
gitweb: Add gitweb manpages to 'gitweb' package in git.spec
Documentation: Add gitweb config variables to git-config(1)
Documentation: Link to gitweb(1) and gitweb.conf(5) in other manpages
gitweb: Add gitweb(1) manpage for gitweb itself
git svn dcommit: new option --interactive.
send-email: Honour SMTP domain when using TLS
git-svn: On MSYS, escape and quote SVN_SSH also if set by the user
send-email: Fix %config_path_settings handling
Teach merge the '[-e|--edit]' option
t5403: convert leading spaces to tabs
attr.c: respect core.ignorecase when matching attribute patterns
git-difftool: allow skipping file by typing 'n' at prompt
refs.c: free duplicate entries in the ref array instead of leaking them
refs.c: abort ref search if ref array is empty
refs.c: ensure struct whose member may be passed to realloc is initialized
Makefile: fix permissions of mergetools/ checked out with permissive umask
gitk: Make vi-style keybindings more vi-like
fetch: plug two leaks on error exit in store_updated_refs
mingw: avoid using strbuf in syslog
cherry-pick: do not give irrelevant advice when cherry-pick punted
revert.c: defer writing CHERRY_PICK_HEAD till it is safe to do so
builtin/mv.c: plug miniscule memory leak
cleanup: use internal memory allocation wrapper functions everywhere
attr.c: avoid inappropriate access to strbuf "buf" member
merge-one-file: fix "expr: non-numeric argument"
ident: do not retrieve default ident when unnecessary
Add test showing git-fetch groks gitfiles
Teach transport about the gitfile mechanism
Learn to handle gitfiles in enter_repo
enter_repo: do not modify input
log --children
daemon: log errors if we could not use some sockets
daemon: return "access denied" if a service is not allowed
pack-protocol: document "ERR" line
Makefile: do not set setgid bit on directories on GNU/kFreeBSD
ident: check /etc/mailname if email is unknown
git-web--browse: avoid the use of eval
receive-pack: don't pass non-existent refs to post-{receive,update} hooks
tree-walk: micro-optimization in tree_entry_interesting
tree-walk: drop unused parameter from match_dir_prefix
git-read-tree.txt: update sparse checkout examples
describe: Refresh the index when run with --dirty
Teach '--cached' option to check-attr
fast-import: don't allow to note on empty branch
fast-import: don't allow to tag empty branch
Add explanation why we do not allow to sparse checkout to empty working tree
sparse checkout: show error messages when worktree shaping fails
Documentation/git-update-index: refer to 'ls-files'
git-mergetool: check return value from read
Accept tags in HEAD or MERGE_HEAD
merge: remove global variable head[]
merge: use return value of resolve_ref() to determine if HEAD is invalid
Disambiguate duplicate t9160* tests
gitweb: Strip non-printable characters from syntax highlighter output
date.c: Support iso8601 timezone formats
format-patch: ignore ui.color
remote: only update remote-tracking branch if updating refspec
remote rename: warn when refspec was not updated
remote: "rename o foo" should not rename ref "origin/bar"
remote: write correct fetch spec when renaming remote 'remote'
SubmittingPathces: remove Cogito reference
http: avoid empty error messages for some curl errors
http: remove extra newline in error message
xdiff/xprepare: initialise xdlclassifier_t cf in xdl_prepare_env()
t6030: use $SHELL_PATH to invoke user's preferred shell instead of bare sh
bisect: take advantage of gettextln, eval_gettextln.
Makefile: Improve compiler header dependency check
Documentation/remote-helpers: explain capabilities first
am: preliminary support for hg patches
am: fix stgit patch mangling
am: format is in $patch_format, not parse_patch
obstack: Fix portability issues
git-stash: remove untracked/ignored directories when stashed
t/t3905: add missing '&&' linkage
git-stash.sh: fix typo in error message
t/t3905: use the name 'actual' for test output, swap arguments to test_cmp
merge: keep stash[] a local variable
update-ref: whitespace fix
get_indexed_object can return NULL if nothing is in that slot; check for it
fast-import: allow to tag newly created objects
fast-import: add tests for tagging blobs
git-p4: Add simple test case for branch import
git-p4: Allow branch definition with git config
git-p4: Allow filtering Perforce branches by user
git-p4: Correct branch base depot path detection
Show interpreted branch name in error messages
Prevent force-updating of the current branch
clone: allow to clone from .git file
fast-import: treat cat-blob as a delta base hint for next blob
fast-import: count and report # of calls to diff_delta in stats
git-p4: Process detectCopiesHarder with --bool
git-p4: Add test case for copy detection
git-p4: Add test case for rename detection
git-p4: Add description of rename/copy detection options
git-p4: Allow setting rename/copy detection threshold
Use kwset in grep
Use kwset in pickaxe
Adapt the kwset code to Git
Add string search routines from GNU grep
Add obstack.[ch] from EGLIBC 2.10
log: decorate "replaced" on to replaced commits
mergetools/meld: Use '--output' when available
mergetool--lib: Refactor tools into separate files
mergetool--lib: Make style consistent with git
difftool--helper: Make style consistent with git
Makefile: Use computed header dependencies if the compiler supports it
fetch-pack: check for valid commit from server
log: decorate grafted commits with "grafted"
Move write_shallow_commits to fetch-pack.c
Add for_each_commit_graft() to iterate all grafts
decoration: do not mis-decorate refs with same prefix
xdiff/xprepare: improve O(n*m) performance in xdl_cleanup_records()
doc/fast-import: document feature import-marks-if-exists
checkout-index: remove obsolete comment
merge-recursive: take advantage of hardcoded empty tree
revert: plug memory leak in "cherry-pick root commit" codepath
fast-import: prevent producing bad delta
fast-import: add a test for tree delta base corruption
merge-recursive: Don't re-sort a list whose order we depend upon
merge-recursive: Fix virtual merge base for rename/rename(1to2)/add-dest
t6036: criss-cross + rename/rename(1to2)/add-dest + simple modify
merge-recursive: Avoid unnecessary file rewrites
t6022: Additional tests checking for unnecessary updates of files
merge-recursive: Fix spurious 'refusing to lose untracked file...' messages
t6022: Add testcase for spurious "refusing to lose untracked" messages
merge-recursive: Fix working copy handling for rename/rename/add/add
merge-recursive: add handling for rename/rename/add-dest/add-dest
merge-recursive: Have conflict_rename_delete reuse modify/delete code
merge-recursive: Make modify/delete handling code reusable
merge-recursive: Consider modifications in rename/rename(2to1) conflicts
merge-recursive: Create function for merging with branchname:file markers
merge-recursive: Record more data needed for merging with dual renames
merge-recursive: Defer rename/rename(2to1) handling until process_entry
merge-recursive: Small cleanups for conflict_rename_rename_1to2
merge-recursive: Fix rename/rename(1to2) resolution for virtual merge base
merge-recursive: Introduce a merge_file convenience function
merge-recursive: Fix modify/delete resolution in the recursive case
merge-recursive: When we detect we can skip an update, actually skip it
merge-recursive: Provide more info in conflict markers with file renames
merge-recursive: Cleanup and consolidation of rename_conflict_info
merge-recursive: Consolidate process_entry() and process_df_entry()
merge-recursive: Improve handling of rename target vs. directory addition
merge-recursive: Add comments about handling rename/add-source cases
merge-recursive: Make dead code for rename/rename(2to1) conflicts undead
merge-recursive: Fix deletion of untracked file in rename/delete conflicts
merge-recursive: Split update_stages_and_entry; only update stages at end
merge-recursive: Allow make_room_for_path() to remove D/F entries
merge-recursive: Split was_tracked() out of would_lose_untracked()
merge-recursive: Save D/F conflict filenames instead of unlinking them
merge-recursive: Fix code checking for D/F conflicts still being present
merge-recursive: Fix sorting order and directory change assumptions
merge-recursive: Fix recursive case with D/F conflict via add/add conflict
merge-recursive: Avoid working directory changes during recursive case
merge-recursive: Remember to free generated unique path names
merge-recursive: Consolidate different update_stages functions
merge-recursive: Mark some diff_filespec struct arguments const
merge-recursive: Correct a comment
merge-recursive: Make BUG message more legible by adding a newline
t6022: Add testcase for merging a renamed file with a simple change
t6022: New tests checking for unnecessary updates of files
t6022: Remove unnecessary untracked files to make test cleaner
t6036: criss-cross + rename/rename(1to2)/add-source + modify/modify
t6036: criss-cross w/ rename/rename(1to2)/modify+rename/rename(2to1)/modify
t6036: tests for criss-cross merges with various directory/file conflicts
t6036: criss-cross with weird content can fool git into clean merge
t6036: Add differently resolved modify/delete conflict in criss-cross test
t6042: Add failing testcases for rename/rename/add-{source,dest} conflicts
t6042: Ensure rename/rename conflicts leave index and workdir in sane state
t6042: Add tests for content issues with modify/rename/directory conflicts
t6042: Add a testcase where undetected rename causes silent file deletion
t6042: Add a pair of cases where undetected renames cause issues
t6042: Add failing testcase for rename/modify/add-source conflict
t6042: Add a testcase where git deletes an untracked file
describe: Refresh the index when run with --dirty
fsck: improve committer/author check
fsck: add a few committer name tests
fast-import: check committer name more strictly
fast-import: don't fail on omitted committer name
fast-import: add input format tests
Reduce parse-options.o dependencies
parse-options: export opterr, optbug
bisect: add support for bisecting bare repositories
xdiff/xhistogram: drop need for additional variable
xdiff/xhistogram: rely on xdl_trim_ends()
xdiff/xhistogram: rework handling of recursed results
filter-branch: Export variable `workdir' for --commit-filter
submodule: take advantage of gettextln and eval_gettextln.
stash: take advantage of eval_gettextln
pull: take advantage of eval_gettextln
git-am: take advantage of gettextln and eval_gettextln.
gettext: add gettextln, eval_gettextln to encode common idiom
test: cope better with use of return for errors
test: simplify return value of test_run_
revert: Propagate errors upwards from do_pick_commit
revert: Introduce --continue to continue the operation
revert: Don't implicitly stomp pending sequencer operation
revert: Remove sequencer state when no commits are pending
reset: Make reset remove the sequencer state
misc-sh: fix up whitespace in some other .sh files.
bisect: replace "; then" with "\n<tab>*then"
bisect: cleanup whitespace errors in git-bisect.sh.
revert: Introduce --reset to remove sequencer state
revert: Make pick_commits functionally act on a commit list
revert: Save command-line options for continuing operation
revert: Save data for continuing after conflict resolution
revert: Don't create invalid replay_opts in parse_args
revert: Separate cmdline parsing from functional code
revert: Introduce struct to keep command-line options
revert: Eliminate global "commit" variable
revert: Rename no_replay to record_origin
revert: Don't check lone argument in get_encoding
revert: Simplify and inline add_message_to_msg
config: Introduce functions to write non-standard file
advice: Introduce error_resolve_conflict
bisect: add documentation for --no-checkout option.
bisect: add tests for the --no-checkout option.
bisect: introduce --no-checkout support into porcelain.
bisect: introduce support for --no-checkout option.
bisect: add tests to document expected behaviour in presence of broken trees.
bisect: use && to connect statements that are deferred with eval.
bisect: move argument parsing before state modification.
Makefile: some changes for http-related flag documentation
http.c: fix an invalid free()
xdiff: do away with xdl_mmfile_next()
connect: only log if all attempts failed (ipv4)
connect: correctly number ipv6 network adapter
Break down no-lstat() condition checks in verify_uptodate()
gitweb: Git config keys are case insensitive, make config search too
Ensure git ls-tree exits with a non-zero exit code if read_tree_recursive fails.
gitweb: Introduce common system-wide settings for convenience
Add a test to check that git ls-tree sets non-zero exit code on error.
gitk: Show modified files with separate work tree
gitk: Simplify calculation of gitdir
gitk: Run 'git rev-parse --git-dir' only once
gitk: Put temporary directory inside .git
gitk: Fix "External diff" with separate work tree
gitk: Fix "blame parent commit" with separate work tree
gitk: Fix "show origin of this line" with separate work tree
gitk: Fix file highlight when run in subdirectory
doc/fast-import: clarify notemodify command
Documentation: minor grammatical fix in rev-list-options.txt
git-config: Remove extra whitespaces
tests: cleanup binary test vector files
transport-helper: die early on encountering deleted refs
transport-helper: implement marks location as capability
transport-helper: Use capname for refspec capability too
transport-helper: change import semantics
transport-helper: update ref status after push with export
transport-helper: use the new done feature where possible
transport-helper: check status code of finish_command
transport-helper: factor out push_update_refs_status
fast-export: support done feature
fast-import: introduce 'done' command
git-remote-testgit: fix error handling
git-remote-testgit: only push for non-local repositories
remote-curl: accept empty line as terminator
remote-helpers: export GIT_DIR variable to helpers
t5800: use skip_all instead of prereq
rebase: clarify "restore the original branch"
xdiff/xprepare: use a smaller sample size for histogram diff
xdiff/xprepare: skip classification
teach --histogram to diff
Fix typo: existant->existent
t4033-diff-patience: factor out tests
xdiff/xpatience: factor out fall-back-diff function
xdiff/xprepare: refactor abort cleanups
xdiff/xprepare: use memset()
Documentation: use [verse] for SYNOPSIS sections
branch -v: honor core.abbrev
gitweb: Serve */*+xml 'blob_plain' as text/plain with $prevent_xss
gitweb: Serve text/* 'blob_plain' as text/plain with $prevent_xss
git-submodule.sh: preserve stdin for the command spawned by foreach
t/t7407: demonstrate that the command called by 'submodule foreach' loses stdin
Documentation/i18n: quote double-dash for AsciiDoc
Documentation: quote double-dash for AsciiDoc
git-instaweb: Check that correct config file exists for (re)start
git-instaweb: Move all actions at the end of script
git-instaweb: Use $conf, not $fqgitdir/gitweb/httpd.conf
git-instaweb: Extract configuring web server into configure_httpd
completion: replace core.abbrevguard to core.abbrev
vcs-svn: reset first_commit_done in fast_export_init
git-remote.txt: fix wrong remote refspec
gitweb: Refactor git_header_html
Makefile: Track changes to LDFLAGS and relink when necessary
gitweb: Make git_search_* subroutines render whole pages
gitweb: Clean up code in git_search_* subroutines
gitweb: Split body of git_search into subroutines
gitweb: Check permissions first in git_search
gitweb: 'pickaxe' and 'grep' features requires 'search' to be enabled
Merge branch 'db/text-delta' into svn-fe
vcs-svn: do not initialize report_buffer twice
rebase -i -p: include non-first-parent commits in todo list
sh-i18n--envsubst.c: do not #include getopt.h
Fix typo: existant->existent
Merge branch 'db/text-delta' into svn-fe
vcs-svn: avoid hangs from corrupt deltas
vcs-svn: guard against overflow when computing preimage length
Merge branch 'db/delta-applier' into db/text-delta
Merge branch 'db/delta-applier' into svn-fe
vcs-svn: cap number of bytes read from sliding view
test-svn-fe: split off "test-svn-fe -d" into a separate function
gitweb: do not misparse nonnumeric content tag files that contain a digit
t3703: skip more tests using colons in file names on Windows
gitweb: Fix usability of $prevent_xss
gitweb: Move "Requirements" up in gitweb/INSTALL
gitweb: Describe CSSMIN and JSMIN in gitweb/INSTALL
gitweb: Move information about installation from README to INSTALL
t/t7503-pre-commit-hook.sh: Add GIT_PREFIX tests
Documentation: do not misinterpret refspecs as bold text
git-sh-i18n--envsubst: add SYNOPSIS section to the documentation
git-grep: Fix problems with recently added tests
builtin/commit.c: set status_format _after_ option parsing
t7508: demonstrate status's failure to use --porcelain format with -z
gitweb.js: use setTimeout rather than setInterval in blame_incremental.js
gitweb.js: No need for loop in blame_incremental's handleResponse()
gitweb.js: No need for inProgress in blame_incremental.js
verify_path: consider dos drive prefix
git-mergetool--lib: Make vimdiff retain the current directory
git: Remove handling for GIT_PREFIX
setup: Provide GIT_PREFIX to built-ins
git-submodule.sh: separate parens by a space to avoid confusing some shells
Documentation/technical/api-diff.txt: correct name of diff_unmerge()
Merge branch 'db/delta-applier' into db/text-delta
Merge branch 'db/svn-fe-code-purge' into svn-fe
Merge branch 'db/vcs-svn-incremental' into svn-fe
gitweb: Refactor reading and parsing config file into read_config_file
init/clone: remove short option -L and document --separate-git-dir
gitweb: Make JavaScript ability to adjust timezones configurable
gitweb: Unify the way long timestamp is displayed
gitweb: Refactor generating of long dates into format_timestamp_html
gitweb.js: Provide getElementsByClassName method (if it not exists)
gitweb.js: Introduce code to handle cookies from JavaScript
gitweb.js: Extract and improve datetime handling
gitweb.js: Provide default values for padding in padLeftStr and padLeft
gitweb.js: Update and improve comments in JavaScript files
gitweb: Split JavaScript for maintability, combining on build
git-grep: Update tests (mainly for -P)
userdiff/perl: tighten BEGIN/END block pattern to reject here-doc delimiters
tests: make test_expect_code quieter on success
userdiff/perl: catch sub with brace on second line
userdiff/perl: match full line of POD headers
userdiff/perl: anchor "sub" and "package" patterns on the left
t4018 (funcname patterns): minor cleanups
t4018 (funcname patterns): make configuration easier to track
t4018 (funcname patterns): make .gitattributes state easier to track
i18n: git-bisect bisect_next_check "You need to" message
i18n: git-bisect [Y/n] messages
i18n: git-bisect bisect_replay + $1 messages
i18n: git-bisect bisect_reset + $1 messages
i18n: git-bisect bisect_run + $@ messages
i18n: git-bisect die + eval_gettext messages
i18n: git-bisect die + gettext messages
i18n: git-bisect echo + eval_gettext message
i18n: git-bisect echo + gettext messages
i18n: git-bisect gettext + echo message
i18n: git-bisect add git-sh-i18n
i18n: git-stash drop_stash say/die messages
i18n: git-stash "unknown option" message
i18n: git-stash die + eval_gettext $1 messages
i18n: git-stash die + eval_gettext $* messages
i18n: git-stash die + eval_gettext messages
i18n: git-stash die + gettext messages
i18n: git-stash say + gettext messages
i18n: git-stash echo + gettext message
i18n: git-stash add git-sh-i18n
i18n: git-submodule "blob" and "submodule" messages
i18n: git-submodule "path not initialized" message
i18n: git-submodule "[...] path is ignored" message
i18n: git-submodule "Entering [...]" message
i18n: git-submodule $errmsg messages
i18n: git-submodule "Submodule change[...]" messages
i18n: git-submodule "cached cannot be used" message
i18n: git-submodule $update_module say + die messages
i18n: git-submodule die + eval_gettext messages
i18n: git-submodule say + eval_gettext messages
i18n: git-submodule echo + eval_gettext messages
i18n: git-submodule add git-sh-i18n
i18n: git-pull eval_gettext + warning message
i18n: git-pull eval_gettext + die message
i18n: git-pull die messages
i18n: git-pull add git-sh-i18n
i18n: git-am printf(1) message to eval_gettext
i18n: git-am core say messages
i18n: git-am "Falling back" say message
i18n: git-am "Apply?" message
i18n: git-am clean_abort messages
i18n: git-am cannot_fallback messages
i18n: git-am die messages
i18n: git-am gettext + gettext to stderr message
i18n: git-am eval_gettext messages
i18n: git-am multi-line getttext $msg; echo
i18n: git-am one-line gettext $msg; echo
i18n: git-am add git-sh-i18n
provide a copy of the LGPLv2.1
Add log.abbrevCommit config variable
"git log -h": typofix misspelled 'suppress'
git-gui: Corrected a typo in the Swedish translation of 'Continue'
Makefile: add xgettext target for *.sh files
git-sh-i18n.sh: add GIT_GETTEXT_POISON support
git-sh-i18n.sh: add no-op gettext() and eval_gettext() wrappers
git-sh-i18n--envsubst: our own envsubst(1) for eval_gettext()
add, merge, diff: do not use strcasecmp to compare config variable names
Do not strip empty lines / trailing spaces from a commit message template
git-completion: fix regression in zsh support
Test atomic git-commit --interactive
t3703, t4208: add test cases for magic pathspec
sparse checkout: do not eagerly decide the fate for whole directory
t1011: fix sparse-checkout initialization and add new file
Add commit to list of config.singlekey commands
Add support for -p/--patch to git-commit
Allow git commit --interactive with paths
git-grep: Bail out when -P is used with -F or -E
grep: Add basic tests
configure: Check for libpcre
git-grep: Learn PCRE
grep: Extract compile_regexp_failed() from compile_regexp()
grep: Fix a typo in a comment
completion: move private shopt shim for zsh to __git_ namespace
Use a temporary index for git commit --interactive
Remove gitweb/gitweb.cgi and other legacy targets from main Makefile
git-instaweb: Simplify build dependency on gitweb
tests: check git does not barf on merge.ff values for future versions of git
tests: teach verify_parents to check for extra parents
tests: eliminate unnecessary setup test assertions
Remove duplicated "is a"
fast-import: fix option parser for no-arg options
shell: add missing initialization of argv0_path
grep: Put calls to fixmatch() and regmatch() into patmatch()
contrib/completion: --line-number to git grep
Documentation: Add --line-number to git-grep synopsis
t5541-http-push: add test for chunked
http-push: refactor curl_easy_setup madness
http-push: use const for strings in signatures
http: make curl callbacks match contracts from curl header
Merge commit 'v1.7.5' into svn-fe
Documentation: clarify meaning of --html-path, --man-path, and --info-path
git: add --info-path and --man-path options
Pass empty file to p4merge where no base is suitable.
gitweb: Mark matched 'ctag' / contents tag (?by_tag=foo)
gitweb: Change the way "content tags" ('ctags') are handled
gitweb: Restructure projects list generation
git-rebase--interactive.sh: preserve-merges fails on merges created with no-ff
revisions: allow --glob and friends in parse_options-enabled commands
revisions: split out handle_revision_pseudo_opt function
run-command: handle short writes and EINTR in die_child
tests: check error message from run_command
doc: Clarify that "cherry-pick -x" does not use "git notes"
Documentation: publicize hints for sending patches with GMail
Documentation: publicize KMail hints for sending patches inline
Documentation: hints for sending patches inline with Thunderbird
Documentation: explain how to check for patch corruption
Documentation: describe the format of messages with inline patches
Restructure documentation for git-merge-base.
revert: Hide '-r' option in default usage
i18n: mark init-db messages for translation
i18n: mark checkout plural warning for translation
i18n: mark checkout --detach messages for translation
i18n: mark clone nonexistent repository message for translation
i18n: mark merge CHERRY_PICK_HEAD messages for translation
i18n: mark merge "upstream" messages for translation
i18n: mark merge "Could not read from" message for translation
config: support values longer than 1023 bytes
strbuf: make sure buffer is zero-terminated
Makefile: extract Q_() source strings as ngettext()
stash: ensure --no-keep-index and --patch can be used in any order
stash: add two more tests for --no-keep-index
Documentation: Allow custom diff tools to be specified in 'diff.tool'
Documentation: Add diff.<driver>.* to config
Documentation: Move diff.<driver>.* from config.txt to diff-config.txt
Documentation: Add filter.<driver>.* to config
blame: add --abbrev command line option and make it honor core.abbrev
stash: fix false positive in the invalid ref test.
Share color list between graph and show-branch
gitweb: Fix parsing of negative fractional timezones in JavaScript
compat: add missing #include <sys/resource.h>
t2019-checkout-ambiguous-ref.sh: depend on C_LOCALE_OUTPUT
Fix two unused variable warnings in gcc 4.6
Remove old binaries from .gitignore
sparse: Fix errors and silence warnings
clean: unreadable directory may still be rmdir-able if it is empty
grep: allow -E and -n to be turned on by default via configuration
strbuf.h: remove a tad stale docs-in-comment and reference api-doc instead
Typos: t/README
Revert "t0081 (line-buffer): add buffering tests"
git-pack-objects.txt: fix grammatical errors
parse-remote: replace unnecessary sed invocation
vcs-svn: a void function shouldn't try to return something
HOME must be set before calling git-init when creating test repositories
tests: make sure input to sed is newline terminated
Kill off get_relative_cwd()
setup: return correct prefix if worktree is '/'
git tag documentation grammar fixes and readability updates
grep: Add the option '--line-number'
Improve test for pthreads flag
vcs-svn: add missing cast to printf argument
vcs-svn: let deltas use data from preimage
vcs-svn: let deltas use data from postimage
vcs-svn: verify that deltas consume all inline data
vcs-svn: implement copyfrom_data delta instruction
vcs-svn: read instructions from deltas
vcs-svn: read inline data from deltas
vcs-svn: read the preimage when applying deltas
vcs-svn: parse svndiff0 window header
vcs-svn: skeleton of an svn delta parser
vcs-svn: make buffer_read_binary API more convenient
vcs-svn: learn to maintain a sliding view of a file
Makefile: list one vcs-svn/xdiff object or header per line
vcs-svn: add missing cast to printf argument
vcs-svn: handle log message with embedded NUL
vcs-svn: avoid unnecessary copying of log message and author
vcs-svn: remove buffer_read_string
vcs-svn: make reading of properties binary-safe
gitweb: Fix handling of fractional timezones in parse_date
Improve tree_entry_interesting() handling code
Convert read_tree{,_recursive} to support struct pathspec
Reimplement read_tree_recursive() using tree_entry_interesting()
tests: avoid nonportable {foo,bar} glob
merge: match the help text with the documentation
diffcore-rename: don't consider unmerged path as source
Merge branch 'db/length-as-hash' into svn-fe
Merge branch 'db/strbufs-for-metadata' into db/svn-fe-code-purge
Merge branch 'db/length-as-hash' (early part) into db/svn-fe-code-purge
vcs-svn: improve reporting of input errors
vcs-svn: make buffer_copy_bytes return length read
vcs-svn: make buffer_skip_bytes return length read
vcs-svn: improve support for reading large files
Fix sparse warnings
Makefile: Cover more files with make check
Add test: git stash shows status relative to current dir
init, clone: support --separate-git-dir for .git file
git-init.txt: move description section up
gitweb: Always call parse_date with timezone parameter
gitweb: fix #patchNN anchors when path_info is enabled
docs: fix grammar in gitattributes.txt
run-command: prettify -D_FORTIFY_SOURCE workaround
unbreak and eliminate NO_C99_FORMAT
mktag: avoid %td in format string
gitweb: highlight: replace tabs with spaces
vcs-svn: remove spurious semicolons
diff --submodule: split into bite-sized pieces
cherry: split off function to print output lines
branch: split off function that writes tracking info and commit subject
standardize brace placement in struct definitions
compat: make gcc bswap an inline function
enums: omit trailing comma for portability
declare 1-bit bitfields to be unsigned
git-p4: Fix error message crash in P4Sync.commit.
Teach git-p4 to ignore case in perforce filenames if configured.
git-p4: Teach gitConfig method about arguments.
Documentation: running test with --debug keeps "trash" directory
tests: scrub environment of GIT_* variables
config: drop support for GIT_CONFIG_NOGLOBAL
gitattributes: drop support for GIT_ATTR_NOGLOBAL
tests: suppress system gitattributes
tests: stop worrying about obsolete environment variables
git stash: show status relative to current directory
i18n: git-shortlog basic messages
i18n: git-revert split up "could not revert/apply" message
i18n: git-revert literal "me" messages
i18n: git-revert "Your local changes" message
i18n: git-revert basic messages
i18n: git-notes GIT_NOTES_REWRITE_MODE error message
i18n: git-notes basic commands
i18n: git-gc "Auto packing the repository" message
i18n: git-gc basic messages
i18n: git-describe basic messages
i18n: git-clean clean.requireForce messages
i18n: git-clean basic messages
i18n: git-bundle basic messages
i18n: git-archive basic messages
i18n: git-status "renamed: " message
i18n: git-status "Initial commit" message
i18n: git-status "Changes to be committed" message
i18n: git-status shortstatus messages
i18n: git-status "nothing to commit" messages
i18n: git-status basic messages
i18n: git-push "prevent you from losing" message
i18n: git-push basic messages
i18n: git-tag tag_template message
i18n: git-tag basic messages
i18n: git-reset "Unstaged changes after reset" message
i18n: git-reset reset_type_names messages
i18n: git-reset basic messages
i18n: git-rm basic messages
i18n: git-mv "bad" messages
i18n: git-mv basic messages
i18n: git-merge "Wonderful" message
i18n: git-merge "You have not concluded your merge" messages
i18n: git-merge "Updating %s..%s" message
i18n: git-merge basic messages
i18n: git-log "--OPT does not make sense" messages
i18n: git-log basic messages
i18n: git-grep "--open-files-in-pager" message
i18n: git-grep basic messages
i18n: git-fetch split up "(non-fast-forward)" message
i18n: git-fetch update_local_ref messages
i18n: git-fetch formatting messages
i18n: git-fetch basic messages
i18n: git-diff basic messages
i18n: git-commit advice messages
i18n: git-commit "enter the commit message" message
i18n: git-commit print_summary messages
i18n: git-commit formatting messages
i18n: git-commit "middle of a merge" message
i18n: git-commit basic messages
i18n: git-checkout "Switched to a .. branch" message
i18n: git-checkout "HEAD is now at" message
i18n: git-checkout describe_detached_head messages
i18n: git-checkout: our/their version message
i18n: git-checkout basic messages
i18n: git-branch "(no branch)" message
i18n: git-branch "git branch -v" messages
i18n: git-branch "Deleted branch [...]" message
i18n: git-branch "remote branch '%s' not found" message
i18n: git-branch basic messages
i18n: git-add "Unstaged changes" message
i18n: git-add "remove '%s'" message
i18n: git-add "did not match any files" message
i18n: git-add "The following paths are ignored" message
i18n: git-add basic messages
i18n: git-clone "Cloning into" message
i18n: git-clone "Cloning into" message
i18n: git-clone basic messages
i18n: git-init "Initialized [...] repository" message
i18n: git-init basic messages
i18n: "make distclean" should clean up after "make pot"
i18n: Makefile: "pot" target to extract messages marked for translation
i18n: add stub Q_() wrapper for ngettext
ls-remote documentation: <refs> argument is optional
Add Author and Documentation sections to git-for-each-ref.txt
Documentation: remove redundant colons in git-for-each-ref.txt
diff format documentation: clarify --cc and -c
commit, status: use status_printf{,_ln,_more} helpers
commit: refer to commit template as s->fp
wt-status: add helpers for printing wt-status lines
i18n: do not poison translations unless GIT_GETTEXT_POISON envvar is set
i18n: add GETTEXT_POISON to simulate unfriendly translator
i18n: add no-op _() and N_() wrappers
commit, status: use status_printf{,_ln,_more} helpers
commit: refer to commit template as s->fp
wt-status: add helpers for printing wt-status lines
compat: fall back on __va_copy if available
vcs-svn: handle filenames with dq correctly
vcs-svn: eliminate repo_tree structure
vcs-svn: add a comment before each commit
vcs-svn: save marks for imported commits
vcs-svn: use higher mark numbers for blobs
vcs-svn: allow input errors to be detected promptly
vcs-svn: simplify repo_modify_path and repo_copy
vcs-svn: handle_node: use repo_read_path
vcs-svn: introduce repo_read_path to check the content at a path
rebase: define options in OPTIONS_SPEC
Documentation: fix a typo in git-apply.txt
init: remove unnecessary check
merge-recursive: When we detect we can skip an update, actually skip it
t6022: New test checking for unnecessary updates of files in D/F conflicts
t6022: New test checking for unnecessary updates of renamed+modified files
mingw: add minimum getrlimit() compatibility stub
Skip commit objects that should be trees, rather than copying them.
It's also okay if an expected tree object is actually a commit.
fast-import: make code "-Wpointer-arith" clean
mergetool--lib: Add Beyond Compare 3 as a tool
mergetool--lib: Sort tools alphabetically for easier lookup
git-instaweb: Change how gitweb.psgi is made runnable as standalone app
gitweb: Make i18n (encoding) tests in t9500 leave clean state
doc: technical details about the index file format
mergetool--lib: Add Beyond Compare 3 as a tool
mergetool--lib: Sort tools alphabetically for easier lookup
branch_merged: fix grammar in warning
Merge commit 'jn/svn-fe' of git://github.com/gitster/git into svn-fe
vcs-svn: teach line_buffer about temporary files
vcs-svn: allow input from file descriptor
vcs-svn: allow character-oriented input
vcs-svn: add binary-safe read function
t0081 (line-buffer): add buffering tests
vcs-svn: tweak test-line-buffer to not assume line-oriented input
tests: give vcs-svn/line_buffer its own test script
vcs-svn: make test-line-buffer input format more flexible
vcs-svn: teach line_buffer to handle multiple input files
vcs-svn: collect line_buffer data in a struct
vcs-svn: replace buffer_read_string memory pool with a strbuf
vcs-svn: eliminate global byte_buffer
Makefile: do not install sourced rebase scripts
commit: error out for missing commit message template
update-index --refresh --porcelain: add missing const
checkout: add missing const to describe_detached_head
Teach commit about CHERRY_PICK_HEAD
bash: teach __git_ps1 about CHERRY_PICK_HEAD
Introduce CHERRY_PICK_HEAD
t3507: introduce pristine-detach helper
git-checkout.txt: improve detached HEAD documentation
git-p4: Add copy detection support
git-p4: Improve rename detection support
t/t7500-commit.sh: use test_cmp instead of test
t/gitweb-lib.sh: Ensure that errors are shown for --debug --immediate
gitweb/gitweb.perl: don't call S_ISREG() with undef
gitweb/gitweb.perl: remove use of qw(...) as parentheses
tests: skip terminal output tests on OS X
mergetool: don't skip modify/remove conflicts
rerere "remaining"
parse_tag_buffer(): do not prefixcmp() out of range
git.c: reorder builtin command list
merge: honor prepare-commit-msg hook
perl: command_bidi_pipe() method should set-up git environmens
correct type of EMPTY_TREE_SHA1_BIN
gitignore: add test-mktemp to ignore list
clone: fixup recurse_submodules option
svn-fe: warn about experimental status
rebase: use @{upstream} if no upstream specified
rebase -i: remove unnecessary state rebase-root
rebase -i: don't read unused variable preserve_merges
git-rebase--am: remove unnecessary --3way option
rebase -m: don't print exit code 2 when merge fails
rebase -m: remember allow_rerere_autoupdate option
rebase: remember strategy and strategy options
rebase: remember verbose option
rebase: extract code for writing basic state
rebase: factor out sub command handling
rebase: make -v a tiny bit more verbose
rebase -i: align variable names
rebase: show consistent conflict resolution hint
rebase: extract am code to new source file
rebase: extract merge code to new source file
rebase: remove $branch as synonym for $orig_head
rebase -i: support --stat
rebase: factor out call to pre-rebase hook
rebase: factor out clean work tree check
rebase: factor out reference parsing
rebase: reorder validation steps
rebase -i: remove now unnecessary directory checks
rebase: factor out command line option processing
rebase: align variable content
rebase: align variable names
rebase: stricter check of standalone sub command
rebase: act on command line outside parsing loop
rebase: improve detection of rebase in progress
rebase: remove unused rebase state 'prev_head'
rebase: read state outside loop
rebase: refactor reading of state
rebase: clearer names for directory variables
compat: helper for detecting unsigned overflow
fast-import: introduce "feature notes" command
fast-import: clarify documentation of "feature" command
checkout: rearrange update_refs_for_switch for clarity
checkout: split off a function to peel away branchname arg
quote.h: simplify the inclusion
sha1_object_info: examine cached_object store too
sha1_file.c: move find_cached_object up so sha1_object_info can use it
Make hash-object more robust against malformed objects
Add const to parse_{commit,tag}_buffer()
diff: support --cached on unborn branches
gitweb: Mention optional Perl modules in INSTALL
post-receive-email: suppress error if description file missing
Add testcases showing how pathspecs are handled with rev-list --objects
Make rev-list --objects work together with pathspecs
t7810: overlapping pathspecs and depth limit
grep: drop pathspec_matches() in favor of tree_entry_interesting()
grep: use writable strbuf from caller for grep_tree()
grep: use match_pathspec_depth() for cache/worktree grepping
grep: convert to use struct pathspec
Convert ce_path_match() to use match_pathspec_depth()
Convert ce_path_match() to use struct pathspec
struct rev_info: convert prune_data to struct pathspec
pathspec: add match_pathspec_depth()
tree_entry_interesting(): optimize wildcard matching when base is matched
tree_entry_interesting(): support wildcard matching
tree_entry_interesting(): fix depth limit with overlapping pathspecs
tree_entry_interesting(): support depth limit
tree_entry_interesting(): refactor into separate smaller functions
diff-tree: convert base+baselen to writable strbuf
glossary: define pathspec
Move tree_entry_interesting() to tree-walk.c and export it
tree_entry_interesting(): remove dependency on struct diff_options
Convert struct diff_options to use struct pathspec
diff-no-index: use diff_tree_setup_paths()
Add struct pathspec
rebase -i: clarify in-editor documentation of "exec"
fast-import: treat filemodify with empty tree as delete
git-gui: update russian translation
git-gui: update russian translation
git-gui: fix russian translation typos
t1510: fix typo in the comment of a test
Subject: setup: officially support --work-tree without --git-dir
Documentation: do not treat reset --keep as a special case
tests: compress the setup tests
tests: cosmetic improvements to the repo-setup test
exec_cmd: remove unused extern
Documentation/fast-import: put explanation of M 040000 <dataref> "" in context
remote-ext: do not segfault for blank lines
Documentation/fast-import: capitalize beginning of sentence
t4034 (diff --word-diff): style suggestions
userdiff: simplify word-diff safeguard
fast-import: Introduce --import-marks-if-exists
ll-merge: simplify opts == NULL case
unpack-trees: handle lstat failure for existing file
unpack-trees: handle lstat failure for existing directory
t9010: svnadmin can fail even if available
git svn: fix the final example in man page
alias: use run_command api to execute aliases
t3032: limit sed branch labels to 8 characters
t0001,t1510,t3301: use sane_unset which always returns with status 0
trace.c: ensure NULL is not passed to printf
daemon: support <directory> arguments again
gitweb: make logo optional
gitweb: skip logo in atom feed when there is none
cherry-pick/revert: add support for -X/--strategy-option
t9001: use older Getopt::Long boolean prefix '--no' rather than '--no-'
diff: funcname and word patterns for perl
setup_work_tree: adjust relative $GIT_WORK_TREE after moving cwd
Makefile: add NO_FNMATCH_CASEFOLD to IRIX sections
test-lib.sh/test_decode_color(): use octal not hex in awk script
git.txt: correct where --work-tree path is relative to
Revert "Documentation: always respect core.worktree if set"
t0001: test git init when run via an alias
Remove all logic from get_git_work_tree()
setup: rework setup_explicit_git_dir()
setup: clean up setup_discovered_git_dir()
setup: clean up setup_bare_git_dir()
setup: limit get_git_work_tree()'s to explicit setup case only
Use git_config_early() instead of git_config() during repo setup
Add git_config_early()
t0050: fix printf format strings for portability
completion: add missing configuration variables
t9300: use perl "head -c" clone in place of "dd bs=1 count=16000" kluge
builtin/rm.c: Use ALLOC_GROW instead of alloc_nr and xrealloc.
builtin/branch.c: Use ALLOC_GROW instead of alloc_nr and xrealloc.
gitweb: Include links to feeds in HTML header only for '200 OK' response
fsck docs: remove outdated and useless diagnostic
trace.c: mark file-local function static
bash completion: add basic support for git-reflog
Fix typo in git-gc document.
get_sha1: handle special case $commit^{/}
gitweb: Introduce esc_attr to escape attributes of HTML elements
Merge branch 'master' (early part) into pd/bash-4-completion
bash: simple reimplementation of _get_comp_words_by_ref
get_sha1: support $commit^{/regex} syntax
gitweb: Fix handling of whitespace in generated links
t9300: avoid short reads from dd
get_sha1_oneline: make callers prepare the commit list to traverse
Makefile: transport-helper uses thread-utils.h
git-svn: allow the mergeinfo property to be set
vcs-svn: Allow change nodes for root of tree (/)
vcs-svn: fix intermittent repo_tree corruption
treap: make treap_insert return inserted node
get_sha1: support relative path ":path" syntax
Make prefix_path() return char* without const
update-index: migrate to parse-options API
setup: save prefix (original cwd relative to toplevel) in startup_info
parse-options: make resuming easier after PARSE_OPT_STOP_AT_NON_OPTION
parse-options: allow git commands to invent new option types
parse-options: never suppress arghelp if LITERAL_ARGHELP is set
parse-options: do not infer PARSE_OPT_NOARG from option type
parse-options: sanity check PARSE_OPT_NOARG flag
parse-options: move NODASH sanity checks to parse_options_check
parse-options: clearer reporting of API misuse
Makefile: dependencies for vcs-svn tests
parse-options: Don't call parse_options_check() so much
git submodule -b ... of current HEAD fails
help: always suggest common-cmds if prefix of cmd
CodingGuidelines: mention whitespace preferences for shell scripts
Documentation: do not misinterpret pull refspec as bold text
web--browse: better support for chromium
web--browse: support opera, seamonkey and elinks
web--browse: split valid_tool list
web--browse: coding style
add: introduce add.ignoreerrors synonym for add.ignore-errors
fast-import: Allow cat-blob requests at arbitrary points in stream
fast-import: clarify documentation of "feature" command
fast-import: stricter parsing of integer options
Revert "excluded_1(): support exclude files in index"
unpack-trees: fix sparse checkout's "unable to match directories"
gitweb: document $per_request_config better
gitweb: selectable configurations that change with each request
Use reflog in 'pull --rebase . foo'
rebase: only show stat if configured to true
entry.c: remove "checkout-index" from error messages
commit: Add commit_list prefix in two function names.
unpack-trees: move all skip-worktree checks back to unpack_trees()
dir.c: add free_excludes()
cache.h: realign and use (1 << x) form for CE_* constants
git-rev-parse.txt: clarify --git-dir
t1510: setup case #31
t1510: setup case #30
t1510: setup case #29
t1510: setup case #28
t1510: setup case #27
t1510: setup case #26
t1510: setup case #25
t1510: setup case #24
t1510: setup case #23
t1510: setup case #22
t1510: setup case #21
t1510: setup case #20
t1510: setup case #19
t1510: setup case #18
t1510: setup case #17
t1510: setup case #16
t1510: setup case #15
t1510: setup case #14
t1510: setup case #13
t1510: setup case #12
t1510: setup case #11
t1510: setup case #10
t1510: setup case #9
t1510: setup case #8
t1510: setup case #7
t1510: setup case #6
t1510: setup case #5
t1510: setup case #4
t1510: setup case #3
t1510: setup case #2
t1510: setup case #1
t1510: setup case #0
Add t1510 and basic rules that run repo setup
builtins: print setup info if repo is found
http-fetch: rework url handling
http-push: add trailing slash at arg-parse time, instead of later on
http-push: check path length before using it
http-push: Normalise directory names when pushing to some WebDAV servers
http-backend: use end_url_with_slash()
url: add str wrapper for end_url_with_slash()
shift end_url_with_slash() from http.[ch] to url.[ch]
t5550-http-fetch: add test for http-fetch
t5550-http-fetch: add missing '&&'
fast-import: treat SIGUSR1 as a request to access objects early
vcs-svn: Sharpen parsing of property lines
vcs-svn: Split off function for handling of individual properties
vcs-svn: Make source easier to read on small screens
vcs-svn: More dump format sanity checks
vcs-svn: Reject path nodes without Node-action
vcs-svn: Delay read of per-path properties
vcs-svn: Combine repo_replace and repo_modify functions
vcs-svn: Replace = Delete + Add
vcs-svn: handle_node: Handle deletion case early
vcs-svn: Use mark to indicate nodes with included text
vcs-svn: Unclutter handle_node by introducing have_props var
vcs-svn: Eliminate node_ctx.mark global
vcs-svn: Eliminate node_ctx.srcRev global
vcs-svn: Check for errors from open()
vcs-svn: Error out for v3 dumps
imap-send: link against libcrypto for HMAC and others
rebase --abort: do not update branch ref
t9010 (svn-fe): Eliminate dependency on svn perl bindings
get_cwd_relative(): do not misinterpret root path
mingw: do not set errno to 0 on success
win32: use our own dirent.h
msvc: opendir: handle paths ending with a slash
win32: dirent: handle errors
msvc: opendir: do not start the search
msvc: opendir: allocate enough memory
msvc: opendir: fix malloc-failure
format-patch: page output with --stdout
rebase: support --verify
clean: remove redundant variable baselen
Documentation/git-pull: clarify configuration
git instaweb: enable remote_heads
gitweb: group remote heads by remote
gitweb: provide a routine to display (sub)sections
gitweb: refactor repository URL printing
gitweb: remotes view for a single remote
gitweb: allow action specialization in page header
gitweb: nagivation menu for tags, heads and remotes
gitweb: separate heads and remotes lists
gitweb: git_get_heads_list accepts an optional list of refs
gitweb: introduce remote_heads feature
gitweb: use fullname as hash_base in heads link
clean: avoid quoting twice
Describe various forms of "be quiet" using OPT__QUIET
tests: use test_cmp instead of piping to diff(1)
t7004-tag.sh: re-arrange git tag comment for clarity
add: do not rely on dtype being NULL behavior
Documentation: point to related commands from gitignore
Documentation: split gitignore page into sections
gitweb: Time::HiRes is in core for Perl 5.8
Remove pack file handling dependency from wrapper.o
pack-objects: mark file-local variable static
wrapper: give zlib wrappers their own translation unit
strbuf: move strbuf_branchname to sha1_name.c
path helpers: move git_mkstemp* to wrapper.c
wrapper: move odb_* to environment.c
wrapper: move xmmap() to sha1_file.c
rebase -X: do not clobber strategy
cherry-pick/revert: transparently refresh index
apply: handle patches with funny filename and colon in timezone
Added check to order of processed commits.
Split cmd now processes commits in topo order.
t4124 (apply --whitespace): use test_might_fail
t3404 (rebase -i): introduce helper to check position of HEAD
t3404 (rebase -i): move comment to description
t3404 (rebase -i): unroll test_commit loops
t3301 (notes): use test_expect_code for clarity
t1400 (update-ref): use test_must_fail
t1502 (rev-parse --parseopt): test exit code from "-h"
t6022 (renaming merge): chain test commands with &&
test-lib: introduce test_line_count to measure files
tests: add missing &&, batch 2
tests: add missing &&
Documentation: document show -s
dir.c: fix EXC_FLAG_MUSTBEDIR match in sparse checkout
diff,difftool: Don't use the {0,2} notation in usage strings
CodingGuidelines: Add a section on writing documentation
daemon: opt-out on features that require posix
daemon: make --inetd and --detach incompatible
daemon: use socklen_t
mingw: use poll-emulation from gnulib
mingw: import poll-emulation from gnulib
daemon: get remote host address from root-process
daemon: use full buffered mode for stderr
daemon: use run-command api for async serving
mingw: add kill emulation
mingw: support waitpid with pid > 0 and WNOHANG
mingw: use real pid
inet_ntop: fix a couple of old-style decls
compat: add inet_pton and inet_ntop prototypes
mingw: implement syslog
mingw: add network-wrappers for daemon
add tests of commit --squash
commit: --squash option for use with rebase --autosquash
add tests of commit --fixup
commit: --fixup option for use with rebase --autosquash
pretty.c: teach format_commit_message() to reencode the output
commit: helper methods to reduce redundant blocks of code
user-manual: remote-tracking can be checked out, with detached HEAD
Fix a formatting error in git-merge.txt
Porcelain scripts: Rewrite cryptic "needs update" error message
completion: fix zsh check under bash with 'set -u'
update-index -h: show usage even with corrupt index
merge -h: show usage even with corrupt index
ls-files -h: show usage even with corrupt index
gc -h: show usage even with broken configuration
commit/status -h: show usage even with broken configuration
checkout-index -h: show usage even in an invalid repository
branch -h: show usage even in an invalid repository
Fix a few typos/grammar-o's in the preceding commit.
docs: Description, synopsys, options and examples changes.
fast-import: do not clear notes in do_change_note_fanout()
t9300 (fast-import): another test for the "replace root" feature
fast-import: tighten M 040000 syntax
fast-import: filemodify after M 040000 <tree> "" crashes
t5523-push-upstream: test progress messages
t5523-push-upstream: add function to ensure fresh upstream repo
test_terminal: ensure redirections work reliably
test_terminal: catch use without TTY prerequisite
test-lib: allow test code to check the list of declared prerequisites
send-pack: avoid redundant "pack-objects died with strange error"
t4203 (mailmap): stop hardcoding commit ids and dates
Documentation: update implicit "--no-index" behavior in "git diff"
Documentation: expand 'git diff' SEE ALSO section
Documentation: diff can compare blobs
Documentation: gitrevisions is in section 7
gitweb: Improve behavior for actionless path_info gitweb URLs
gitweb: Fix bug in evaluate_path_info
gitweb: Fix test of highlighting support in t9500
Documentation: No argument of ALLOC_GROW should have side-effects
Fix {update,checkout}-index usage strings
Put a space between `<' and argument in pack-objects usage string
Remove stray quotes in --pretty and --format documentation
Use parentheses and `...' where appropriate
Fix odd markup in --diff-filter documentation
Use angles for placeholders consistently
commit-tree: free commit message before exiting
SubmittingPatches: Document some extra tags used in commit messages
diffcore-pickaxe.c: a void function shouldn't try to return something
Introduce sane_unset and use it to ensure proper && chaining
t7800 (difftool): add missing &&
t7601 (merge-pull-config): add missing &&
t7001 (mv): add missing &&
t6016 (rev-list-graph-simplify-history): add missing &&
t5602 (clone-remote-exec): add missing &&
t4026 (color): remove unneeded and unchained command
t4019 (diff-wserror): add lots of missing &&
t4202 (log): Replace '<git-command> || :' with test_might_fail
t4002 (diff-basic): use test_might_fail for commands that might fail
t100[12] (read-tree-m-2way, read_tree_m_u_2way): add missing &&
t4017 (diff-retval): replace manual exit code check with test_expect_code
test-lib: make test_expect_code a test command
Makefile & configure: add a NO_FNMATCH_CASEFOLD flag
Makefile & configure: add a NO_FNMATCH flag
do not depend on signed integer overflow
xdiff: cast arguments for ctype functions to unsigned char
init: plug tiny one-time memory leak
diffcore-pickaxe.c: remove unnecessary curly braces
On Windows, avoid git-gui to call Cygwin's nice utility
send-email: Don't leak To: headers between patches
t3020 (ls-files-error-unmatch): remove stray '1' from end of file
setup: make sure git dir path is in a permanent buffer
environment.c: remove unused variable
mingw: do not crash on open(NULL, ...)
MinGW: Add missing file mode bit defines
MinGW: Use pid_t more consequently, introduce uid_t for greater compatibility
send-email: extract_valid_address use qr// regexes
send-email: is_rfc2047_quoted use qr// regexes
send-email: use Perl idioms in while loop
send-email: make_message_id use "require" instead of "use"
send-email: send_message die on $!, not $?
send-email: use (?:) instead of () if no match variables are needed
send-email: sanitize_address use qq["foo"], not "\"foo\""
send-email: sanitize_address use $foo, not "$foo"
send-email: use \E***\Q instead of \*\*\*
send-email: cleanup_compose_files doesn't need a prototype
send-email: unique_email_list doesn't need a prototype
send-email: file_declares_8bit_cte doesn't need a prototype
send-email: get_patch_subject doesn't need a prototype
send-email: use lexical filehandles during sending
send-email: use lexical filehandles for $compose
send-email: use lexical filehandle for opendir
gitweb/Makefile: Include gitweb/config.mak
gitweb/Makefile: Add 'test' and 'test-installed' targets
t/gitweb-lib.sh: Add support for GITWEB_TEST_INSTALLED
gitweb: Move call to evaluate_git_version after evaluate_gitweb_config
t0004 (unwritable files): simplify error handling
merge-recursive: Remove redundant path clearing for D/F conflicts
merge-recursive: Make room for directories in D/F conflicts
handle_delete_modify(): Check whether D/F conflicts are still present
merge_content(): Check whether D/F conflicts are still present
conflict_rename_rename_1to2(): Fix checks for presence of D/F conflicts
conflict_rename_delete(): Check whether D/F conflicts are still present
merge-recursive: Delay modify/delete conflicts if D/F conflict present
merge-recursive: Delay content merging for renames
merge-recursive: Delay handling of rename/delete conflicts
merge-recursive: Move handling of double rename of one file to other file
merge-recursive: Move handling of double rename of one file to two
merge-recursive: Avoid doubly merging rename/add conflict contents
merge-recursive: Update merge_content() call signature
merge-recursive: Update conflict_rename_rename_1to2() call signature
merge-recursive: Structure process_df_entry() to handle more cases
merge-recursive: Have process_entry() skip D/F or rename entries
merge-recursive: New function to assist resolving renames in-core only
merge-recursive: New data structures for deferring of D/F conflicts
merge-recursive: Move process_entry's content merging into a function
merge-recursive: Move delete/modify handling into dedicated function
merge-recursive: Move rename/delete handling into dedicated function
merge-recursive: Nuke rename/directory conflict detection
merge-recursive: Rename conflict_rename_rename*() for clarity
merge-recursive: Small code clarification -- variable name and comments
t6036: Add testcase for undetected conflict
t6036: Add a second testcase similar to the first but with content changes
t6036: Test index and worktree state, not just that merge fails
t6020: Add a testcase for modify/delete + directory/file conflict
t6020: Modernize style a bit
t6022: Add tests for rename/rename combined with D/F conflicts
t6022: Add paired rename+D/F conflict: (two/file, one/file) -> (one, two)
t6022: Add tests with both rename source & dest involved in D/F conflicts
t6022: Add tests for reversing order of merges when D/F conflicts present
t6022: Add test combinations of {content conflict?, D/F conflict remains?}
t6032: Add a test checking for excessive output from merge
send-email: Use To: headers in patch files
stash: simplify parsing fixes
mergetool-lib: make the three-way diff the default for vim/gvim
stash: fix git stash branch regression when branch creation fails
perl: use "use warnings" instead of -w
perl: bump the required Perl version to 5.8 from 5.6.[21]
Makefile: add CC to TRACK_CFLAGS
dir.c: squelch false uninitialized memory warning
git-send-email.perl: ensure $domain is defined before using it
wt-status.c: don't leak directory entries when processing untracked,ignored
smart-http: Don't change POST to GET when following redirect
strbuf.h: fix comment typo
builtin/revert.c: don't dereference a NULL pointer
t/t3903-stash: improve testing of git-stash show
t/t7300: workaround ancient touch by rearranging arguments
git-ls-files.txt: clarify -x/--exclude option
mergetool-lib: add a three-way diff view for vim/gvim
mergetool-lib: combine vimdiff and gvimdiff run blocks
send-email: use catfile() to concatenate files
t/gitweb-lib.sh: Use tabs for indent consistently
t/gitweb-lib.sh: Use GIT_BUILD_DIR
userdiff.c: add builtin fortran regex patterns
config.txt: fix placement of diff.noprefix
t/t4018: avoid two unnecessary sub-shell invocations
t/t4018: test whether the word_regex patterns compile
xdiff-interface.c: always trim trailing space from xfuncname matches
diff.c: call regfree to free memory allocated by regcomp when necessary
t/t5510-fetch.sh: improve testing with explicit URL and merge spec
builtin/fetch.c: comment that branch->remote_name is usable when has_merge
Makefile: use compat regex on IRIX 6.5
t/t7008: workaround broken handling of \000 by printf on IRIX
merge-recursive: D/F conflicts where was_a_dir/file -> was_a_dir
t3509: Add rename + D/F conflict testcase that recursive strategy fails
t2016 (checkout -p): add missing &&
t1302 (core.repositoryversion): style tweaks
t2105 (gitfile): add missing &&
t1450 (fsck): remove dangling objects
tests: subshell indentation stylefix
completion: make compatible with zsh
t6200-fmt-merge-msg: Exercise '--log' to configure shortlog length
t6200-fmt-merge-msg: Exercise 'merge.log' to configure shortlog length
merge: Make 'merge.log' an integer or boolean option
merge: Make '--log' an integer option for number of shortlog entries
fmt_merge_msg: Change fmt_merge_msg API to accept shortlog_len
revert: Fix trivial comment style issue
cache_tree_free: Fix small memory leak
builtin/clean.c: Use STRING_LIST_INIT_NODUP.
Fix whitespace issue in object.c
parse_object: pass on the original sha1, not the replaced one
builtin/merge_recursive.c: Add an usage string and make use of it.
Add global and system-wide gitattributes
builtin.h: Move two functions definitions to help.h.
test-lib: use subshell instead of cd $new && .. && cd $old
tests: simplify "missing PREREQ" message
t/t0000-basic.sh: Run the passing TODO test inside its own test-lib
test-lib: Allow overriding of TEST_DIRECTORY
test-lib: Use "$GIT_BUILD_DIR" instead of "$TEST_DIRECTORY"/../
test-lib: Use $TEST_DIRECTORY or $GIT_BUILD_DIR instead of $(pwd) and ../
tests: make test_might_fail fail on missing commands
tests: make test_might_fail more verbose
t3903: fix broken test_must_fail calls
t1503: fix broken test_must_fail calls
object.h: Add OBJECT_ARRAY_INIT macro and make use of it.
format-patch: Don't go over merge commits
t4014-format-patch: Call test_tick before committing
for-each-ref: fix objectname:short bug
diff_tree(): Skip skip_uninteresting() when all remaining paths interesting
tree_entry_interesting(): Make return value more specific
tree-walk: Correct bitrotted comment about tree_entry()
Document pre-condition for tree_entry_interesting
ll-merge: replace flag argument with options struct
merge-recursive: expose merge options for builtin merge
tree-walk: Correct bitrotted comment about tree_entry()
builtin/fetch.c: ignore merge config when not fetching from branch's remote
t/t5510: demonstrate failure to fetch when current branch has merge ref
shell: Rewrite documentation and improve error message
rev-parse: tests git rev-parse --verify master@{n}, for various n
sha1_name.c: use warning in preference to fprintf(stderr
rev-parse: exit with non-zero status if ref@{n} is not valid.
parse-options: clarify PARSE_OPT_NOARG description
t3302 (notes): Port to Solaris
do not pass "git -c foo=bar" params to transport helpers
clone: warn users --depth is ignored in local clones
detached-stash: update Documentation
detached-stash: tests of git stash with stash-like arguments
detached-stash: simplify git stash show
detached-stash: simplify git stash branch
detached-stash: refactor git stash pop implementation
detached-stash: simplify stash_drop
detached-stash: simplify stash_apply
detached-stash: work around git rev-parse failure to detect bad log refs
detached-stash: introduce parse_flags_and_revs function
reset: suggest what to do upon "git reset --mixed <paths>"
apply: handle traditional patches with space in filename
tests: exercise "git apply" with weird filenames
apply: split quoted filename handling into new function
Documentation: remove stray backslash in show-branch discussion
Documentation: remove stray backslashes from "Fighting regressions" article
Documentation: do not convert ... operator to ellipses
Documentation: avoid stray backslash in user manual
Documentation: avoid stray backslashes in core tutorial
Documentation: remove stray backslashes in rev-parse manual
Documentation: remove backslash before ~ in fast-import manual
Documentation: remove stray backslash from "git bundle" manual
Documentation/technical: avoid stray backslash in parse-options API docs
Documentation: remove backslashes in manpage synopses
Documentation: clarify quoting in gitignore docs
Documentation: clarify quoting in "git rm" example
Documentation: add missing quotes to "git grep" examples
Documentation: clarify quoting in "git add" example
Documentation: unbreak regex in show-ref manual
Documentation: quoting trouble in "git rm" discussion
Documentation: tweak description of log.date
builtin/checkout: Fix message when switching to an existing branch
Documentation: set a !DOCTYPE for user manual
merge-recursive: Avoid excessive output for and reprocessing of renames
autoconf: don't use platform regex if it lacks REG_STARTEND
t/t7008-grep-binary.sh: un-TODO a test that needs REG_STARTEND
t/t9010-svn-fe.sh: add an +x bit to this test
compat/regex: define out variables only used under RE_ENABLE_I18N
Change regerror() declaration from K&R style to ANSI C (C89)
compat/regex: get the gawk regex engine to compile within git
compat/regex: use the regex engine from gawk for compat
merge script: learn --[no-]rerere-autoupdate
merge script: notice @{-1} shorthand
merge script: handle --no-ff --no-commit correctly
merge script: --ff-only to disallow true merge
merge script: handle many-way octopus
merge script: handle -m --log correctly
merge script: forbid merge -s index
merge script: allow custom strategies
merge script: merge -X<option>
merge script: improve log message subject
merge script: refuse to merge during merge
merge script: tweak unmerged files message to match builtin
merge script: --squash, --ff from unborn branch are errors
fmt-merge-msg -m to override merge title
merge-base --independent to print reduced parent list in a merge
merge-base --octopus to mimic show-branch --merge-base
Documentation: add a SEE ALSO section for merge-base
t6200 (fmt-merge-msg): style nitpicks
t6010 (merge-base): modernize style
t7600 (merge): test merge from branch yet to be born
t7600 (merge): check reflog entry
t7600 (merge): do not launch gitk for --debug
t7600 (merge): modernize style
merge: do not mistake (ancestor of) tag for branch
submodule sync: Update "submodule.<name>.url"
tests: fix syntax error in "Use advise() for hints" test
t/t9602-cvsimport-branches-tags.sh: Add a PERL prerequisite
t/t9601-cvsimport-vendor-branch.sh: Add a PERL prerequisite
t/t7105-reset-patch.sh: Add a PERL prerequisite
t/t9001-send-email.sh: convert setup code to tests
t/t9001-send-email.sh: change from skip_all=* to prereq skip
t/t9001-send-email.sh: Remove needless PROG=* assignment
t/t9600-cvsimport.sh: change from skip_all=* to prereq skip
lib-patch-mode tests: change from skip_all=* to prereq skip
t/t3701-add-interactive.sh: change from skip_all=* to prereq skip
tests: Move FILEMODE prerequisite to lib-prereq-FILEMODE.sh
t/Makefile: Create test-results dir for smoke target
git-notes: Run partial expensive test everywhere
t/t3300-funny-names: change from skip_all=* to prereq skip
t/t3902-quoted: change from skip_all=* to prereq skip
t/t4016-diff-quote: change from skip_all=* to prereq skip
t/t5503-tagfollow: change from skip_all=* to prereq skip
t/t7005-editor: change from skip_all=* to prereq skip
t/t5705-clone-2gb: change from skip_all=* to prereq skip
t/t1304-default-acl: change from skip_all=* to prereq skip
t/README: Update "Skipping tests" to align with best practices
t/t7800-difftool.sh: Skip with prereq on no PERL
t/t5800-remote-helpers.sh: Skip with prereq on python <2.4
t/t4004-diff-rename-symlink.sh: use three-arg <prereq>
tests: implicitly skip SYMLINKS tests using <prereq>
t/README: Add a note about the dangers of coverage chasing
t/README: A new section about test coverage
Makefile: Add cover_db_html target
Makefile: Add cover_db target
Makefile: Split out the untested functions target
Makefile: Include subdirectories in "make cover" reports
gitignore: Ignore files generated by "make coverage"
t/README: Add SMOKE_{COMMENT,TAGS}= to smoke_report target
t/Makefile: Can't include GIT-BUILD-OPTIONS, it's a .sh
t/README: Document the Smoke testing
tests: Infrastructure for Git smoke testing
test-lib: Multi-prereq support only checked the last prereq
tests: A SANITY test prereq for testing if we're root
t/README: Document the predefined test prerequisites
test-lib: Print missing prerequisites in test output
test-lib: Add support for multiple test prerequisites
test-lib: Don't write test-results when HARNESS_ACTIVE
merge-recursive: Fix multiple file rename across D/F conflict
t6031: Add a testcase covering multiple renames across a D/F conflict
merge-recursive: Fix typo
mergetool: Skip autoresolved paths
Userdiff patterns for C#
t7006 (pager): add missing TTY prerequisites
merge: let custom strategies intervene in trivial merges
t7606 (merge-theirs): modernize style
merge-file: run setup_git_directory_gently() sooner
var: run setup_git_directory_gently() sooner
ls-remote: run setup_git_directory_gently() sooner
index-pack: run setup_git_directory_gently() sooner
config: run setup_git_directory_gently() sooner
bundle: run setup_git_directory_gently() sooner
apply: run setup_git_directory_gently() sooner
log: test for regression introduced in v1.7.2-rc0~103^2~2
cherry-pick/revert: Use advise() for hints
cherry-pick/revert: Use error() for failure message
Introduce advise() to print hints
Eliminate “Finished cherry-pick/revert” message
t9010 (svn-fe): avoid symlinks in test
t9010 (svn-fe): use Unix-style path in URI
vcs-svn: Avoid %z in format string
vcs-svn: Rename dirent pool to build on Windows
compat: add strtok_r()
treap: style fix
vcs-svn: remove build artifacts on "make clean"
svn-fe manual: Clarify warning about deltas in dump files
Update svn-fe manual
Introduce vcs-svn lib
fetch: allow command line --tags to override config
git-rebase--interactive.sh: use printf instead of echo to print commit message
git-rebase--interactive.sh: rework skip_unnecessary_picks
perl/Makefile: Unset INSTALL_BASE when making perl.mak
Mark tests that use symlinks as needing SYMLINKS prerequisite
pull --rebase: Avoid spurious conflicts and reapplying unnecessary patches
t5520-pull: Add testcases showing spurious conflicts from git pull --rebase
Standardize do { ... } while (0) style
t/t7003: replace \t with literal tab in sed expression
Fix typo: an -> a
t/lib-git-svn.sh: use $PERL_PATH for perl, not perl from $PATH
write-tree: Avoid leak when index refers to an invalid object
read-tree: stop leaking tree objects
core: Stop leaking ondisk_cache_entrys
diff: strip extra "/" when stripping prefix
grep: run setup_git_directory_gently() sooner
shortlog: run setup_git_directory_gently() sooner
git wrapper: allow setup_git_directory_gently() be called earlier
setup: remember whether repository was found
git wrapper: introduce startup_info struct
gitweb: clarify search results page when no matching commit found
builtin/checkout: handle -B from detached HEAD correctly
Documentation: add a FILES section for show-ref
unpack-trees: mark new entries skip-worktree appropriately
unpack-trees: do not check for conflict entries too early
unpack-trees: let read-tree -u remove index entries outside sparse area
unpack-trees: only clear CE_UPDATE|CE_REMOVE when skip-worktree is always set
Makefile: add missing dependency on http.h
Makefile: add missing dependencies on url.h
imap-send: Fix sprintf usage
Allow "check-ref-format --branch" from subdirectory
check-ref-format: handle subcommands in separate functions
merge-recursive --renormalize
rerere: never renormalize
rerere: migrate to parse-options API
t4200 (rerere): modernize style
ll-merge: let caller decide whether to renormalize
ll-merge: make flag easier to populate
Documentation/technical: document ll_merge
merge-trees: let caller decide whether to renormalize
merge-trees: push choice to renormalize away from low level
t6038 (merge.renormalize): check that it can be turned off
t6038 (merge.renormalize): try checkout -m and cherry-pick
t6038 (merge.renormalize): style nitpicks
diff: split off a function for --stat-* option parsing
config: add --local option
setup: split off a function to handle ordinary .git directories
Revert "rehabilitate 'git index-pack' inside the object store"
setup: do not forget working dir from subdir of gitdir
t4111 (apply): refresh index before applying patches to it
contrib/svn-fe: Add the svn-fe target to .gitignore
contrib/svn-fe: Fix IncludePath
Documentation: flesh out “git pull” description
upload-pack: Improve error message when bad ref requested
Document git-instaweb start/stop/restart
gitweb: Fix typo in run() subroutine
test-lib: Remove 3 year old no-op --no-python option
test-lib: Ignore --quiet under a TAP harness
builtin/push.c: remove useless temporary variable
gitweb: allow configurations that change with each request
t1011 (sparse checkout): style nitpicks
SubmittingPatches: Cite the 50 char subject limit
SubmittingPatches: Clarify the Signed-off-by rules
upload-pack: remove unused "create_full_pack" code in do_rev_list
examples/commit: use --abbrev for commit summary
checkout, commit: remove confusing assignments to rev.abbrev
archive: abbreviate substituted commit ids again
t/t6035-merge-dir-to-symlink.sh: Remove TODO on passing test
config --get --path: check for unset $HOME
commit: remove full stop from usage help for -u
tests: Ignore the Test::Harness .prove file
git-read-tree.txt: acknowledge the directory matching bug in sparse checkout
INSTALL: configure /etc/xml/catalog to build docs on Cygwin
git-rebase--interactive.sh: use printf instead of echo to print commit message
Add a google-chrome option for web--browse
Makefile: make hard/symbolic links for non-builtins too
Makefile: link builtins residing in bin directory to main git binary too
setup: split off get_device_or_die helper
setup: split off a function to handle hitting ceiling in repo search
setup: split off code to handle stumbling upon a repository
setup: split off a function to checks working dir for .git file
setup: split off $GIT_DIR-set case from setup_git_directory_gently
tests: try git apply from subdir of toplevel
t1501 (rev-parse): clarify
request-pull.txt: Document -p option
t3400 (rebase): whitespace cleanup
t4150 (am): futureproof against failing tests
t4150 (am): style fix
git-instaweb: Don't assume Apache executable is named apache2
git-instaweb: Fix Apache environment variable passing
git-instaweb: Fix custom apache log placement
t/: work around one-shot variable assignment with test_must_fail
t/README: correct an exception when breaking a && chain in tests
Add test for git clean -e.
Add -e/--exclude to git-clean.
Convert "! git" to "test_must_fail git"
t/{t5541,lib-httpd}: replace problematic '!()' notation with test_must_fail
t/t3700: convert two uses of negation operator '!' to use test_must_fail
t/README: clarify test_must_fail description
fast-export: Add a --full-tree option
fast-export: Fix dropping of files with --import-marks and path limiting
git add: Add --ignore-missing to SYNOPSIS
git submodule add: Remove old docs about implicit -f
Documentation: Explain git-mergetool's use of temporary files
Add a sample user for the svndump library
Export parse_date_basic() to convert a date string to timestamp
Documentation: add submodule.* to the big configuration variable list
gitmodules.5: url can be a relative path
gitweb: fix esc_url
git --paginate: paginate external commands again
sha1_file: Show the the type and path to corrupt objects
MERGE_RR is in .git, not .git/rr-cache
merge-tree: fix where two branches share no changes
add basic tests for merge-tree
t3000 (ls-files -o): modernize style
fast-import: Improve robustness when D->F changes provided in wrong order
fast-export: Fix output order of D/F changes
merge_recursive: Fix renames across paths below D/F conflicts
merge-recursive: Fix D/F conflicts
Add a rename + D/F conflict testcase
Add additional testcases for D/F conflicts
diff.c: fix a graph output bug
tests: Use skip_all=* to skip tests
t9118 (git-svn): prevent early failure from taking down later tests
grep -O: Do not pass color sequences as filenames to pager
t/t0006: specify timezone as EST5 not EST to comply with POSIX
t/README: document more test helpers
Makefile: work around ksh's failure to handle missing list argument to for loop
xdiff: optimise for no whitespace difference when ignoring whitespace.
gitweb: Move evaluate_gitweb_config out of run_request
Teach fast-import to import subtrees named by tree id
git submodule: add submodules with git add -f <path>
string_list: Add STRING_LIST_INIT macro and make use of it.
Convert the users of for_each_string_list to for_each_string_list_item macro
Add a for_each_string_list_item macro
t/README: Document the do's and don'ts of tests
t/README: Add a section about skipping tests
t/README: Document test_expect_code
t/README: Document test_external*
t/README: Document the prereq functions, and 3-arg test_*
t/README: Typo: paralell -> parallel
t/README: The trash is in 't/trash directory.$name'
Makefile: remove some unnecessary curly braces
Don't expand CRLFs when normalizing text during merge
Try normalizing files to avoid delete/modify conflicts when merging
Avoid conflicts when merging branches with mixed normalization
Documentation/git-gc.txt: add reference to githooks
Add test for correct coloring of git log --decoration
revert: do not rebuild argv on heap
t/t9700/test.pl: don't access private object members, use public access methods
t/t9001: use egrep when regular expressions are involved
git --paginate: do not commit pager choice too early
tests: local config file should be honored from subdirs of toplevel
t7006: test pager configuration for several git commands
t7006 (pager): introduce helper for parameterized tests
t9700: Use Test::More->builder, not $Test::Builder::Test
builtin/checkout: learn -B
builtin/checkout: reword hint for -b
add tests for checkout -b
tests: Say "pass" rather than "ok" on empty lines for TAP
tests: Skip tests in a way that makes sense under TAP
test-lib: output a newline before "ok" under a TAP harness
test-lib: Make the test_external_* functions TAP-aware
test-lib: Adjust output to be valid TAP format
Another fix for PATH and msysgit.
Allow customizable commit decorations colors
Merge remote branch 'origin/master'
(Hopefully) fix PATH setting for msysgit.
t/t7811-grep-open.sh: remove broken/redundant creation of fake "less" script
t/t7811-grep-open.sh: ensure fake "less" is made executable
t/lib-pager.sh: remove unnecessary '^' from 'expr' regular expression
git-cvsserver: fix error for invalid password formats
git-cvsserver: typo in a comment: bas -> has
log --decorate: Colorize commit decorations
log-tree.c: Use struct name_decoration's type for classifying decoration
commit.h: add 'type' to struct name_decoration
gitweb/Makefile: fix typo in gitweb.min.css rule
completion: Add --signature and format.signature
format-patch: Add a signature option (--signature)
am: use get_author_ident_from_commit instead of mailinfo when rebasing
notes: Initialize variable to appease Sun Studio
gitweb: Return or exit after done serving request
t3508 (cherry-pick): futureproof against unmerged files
git-svn: strip off leading slashes on --trunk argument
Remove python 2.5'isms
Makefile: add PYTHON_PATH to GIT-BUILD-OPTIONS
add-interactive: Clarify “remaining hunks in the file”
gitweb: Fix typo in hash key name in %opts in git_header_html
commit::print_summary(): don't use format_commit_message()
grep: refactor grep_objects loop into its own function
gitweb: Run in FastCGI mode if gitweb script has .fcgi extension
Documentation/checkout: clarify description
rebase -i -p: document shortcomings
Refactor parse_date for approxidate functions
commit.txt: clarify how --author argument is used
Add "core.eol" config variable
bash completion: add --orphan to 'git checkout'
t3200: test -l with core.logAllRefUpdates options
checkout --orphan: respect -l option always
git-instaweb: Add support for running gitweb via 'plackup'
git-instaweb: Wait for server to start before running web browser
git-instaweb: Remove pidfile after stopping web server
refs: split log_ref_write logic into log_ref_setup
Documentation: alter checkout --orphan description
Documentation/pretty-{formats,options}: better reference for "format:<string>"
git am: Remove stray error message from sed
git am: Display some help text when patch is empty
git am: Set cmdline globally
t/aggregate-results: accomodate systems with small max argument list length
t/t7006: ignore return status of shell's unset builtin
t/t5150: remove space from sed script
git-request-pull.sh: remove -e switch to shell interpreter which breaks ksh
t/t5800: skip if python version is older than 2.5
DWIM 'git show -5' to 'git show --do-walk -5'
gitignore.5: Clarify matching rules
Documentation/SubmittingPatches: Fix typo in GMail section
git-web--browse: Add support for google chrome and chromium
Make --color-words work well with --graph
graph.c: register a callback for graph output
Emit a whole line in one go
diff.c: Output the text graph padding before each diff line
Output the graph columns at the end of the commit message
Add a prefix output callback to diff output
git-instaweb: Configure it to work with new gitweb structure
git-instaweb: Put httpd logs in a "$httpd_only" subdirectory
gitweb: Set default destination directory for installing gitweb in Makefile
gitweb: Move static files into seperate subdirectory
rebase: improve error message when upstream argument is missing
Documentation/checkout: clarify description
Makefile: remove redundant munging of @@INSTLIBDIR@@
t7502-commit: add summary output tests for empty and merge commits
t7502-commit: add tests for summary output
fsck: fix bogus commit header check
show-branch: use DEFAULT_ABBREV instead of 7
t7502-commit: fix spelling
git-submodule foreach: Add $toplevel variable
start_command: close cmd->err descriptor when fork/spawn fails
Fix "Out of memory? mmap failed" for files larger than 4GB on Windows
git-cvsserver: test for pserver authentication support
git-cvsserver: document making a password without htpasswd
git-cvsserver: Improved error handling for pserver
git-cvsserver: indent & clean up authdb code
git-cvsserver: authentication support for pserver
Add git remote set-branches
post-receive-email: document command-line mode
Rename the "crlf" attribute "text"
Add per-repository eol normalization
Add tests for per-repository eol normalization
diff-options: make --patch a synonym for -p
hash_object: correction for zero length file
gitweb: Use @diff_opts while using format-patch
GIT-VERSION-GEN: restrict tags used
ls-remote: print URL when no repo is specified
merge: --log appends shortlog to message if specified
fmt-merge-msg: add function to append shortlog only
fmt-merge-msg: refactor merge title formatting
fmt-merge-msg: minor refactor of fmt_merge_msg()
merge: rename variable
merge: update comment
t7604-merge-custom-message: show that --log doesn't append to -m
t7604-merge-custom-message: shift expected output creation
git-svn: Remove unused use of File::Temp
git-svn documentation: minor grammar fix
git svn: avoid uninitialized var in 'reset'
Makefile: let header dependency checker override COMPUTE_HEADER_DEPENDENCIES
Makefile: fix header dependency checker to allow NO_CURL builds
Documentation/notes: nitpicks
Documentation/notes: clean up description of rewriting configuration
Documentation/notes: simplify treatment of default display refs
Documentation/log: add a CONFIGURATION section
Documentation/notes: simplify treatment of default notes ref
Documentation/notes: add configuration section
Documentation/notes: describe content of notes blobs
Documentation/notes: document format of notes trees
gitweb: Put all per-connection code in run() subroutine
cherry-pick: do not dump core when iconv fails
pretty: initialize new cmt_fmt_map to 0
Turn setup code in t2007-checkout-symlink.sh into a test
Move t6000lib.sh to lib-*
adapt request-pull tests for new pull request format
blame-options.txt: Add default value for `-M/-C` options.
Make git log --follow find copies among unmodified files.
Make diffcore_std only can run once before a diff_flush
Add a macro DIFF_QUEUE_CLEAR.
test-lib: some shells do not let $? propagate into an eval
pretty: Respect --abbrev option
shortlog: Document and test --format option
t4201 (shortlog): Test output format with multiple authors
t4201 (shortlog): guard setup with test_expect_success
Documentation/shortlog: scripted users should not rely on implicit HEAD
commit --amend: cope with missing display name
test-lib: Let tests specify commands to be run at end of test
Documentation/git-send-email: Add "Use gmail as the smtp server"
pretty: add aliases for pretty formats
pretty: add infrastructure for commit format aliases
pretty: make it easier to add new formats
gitweb: Refactor syntax highlighting support
Gitweb: ignore built file
gitweb: Create install target for gitweb in Makefile
gitweb: Improve installation instructions in gitweb/INSTALL
gitweb: Silence 'Variable VAR may be unavailable' warnings
fsck: check ident lines in commit objects
gitweb: Move generating page title to separate subroutine
gitweb: Add custom error handler using die_error
gitweb: Use nonlocal jump instead of 'exit' in die_error
gitweb: href(..., -path_info => 0|1)
Export more test-related variables when running external tests
xdiff/xmerge.c: use memset() instead of explicit for-loop
request-pull: protect against OPTIONS_KEEPDASHDASH from environment
tests for request-pull
Documentation/Makefile: fix interrupted builds of user-manual.xml
t5516-fetch-push.sh: style cleanup
receive-pack: detect aliased updates which can occur with symrefs
receive-pack: switch global variable 'commands' to a parameter
fix "bundle --stdin" segfault
t5704 (bundle): add tests for bundle --stdin
http.c::new_http_pack_request: do away with the temp variable filename
SubmittingPatches: Add new section about what to base work on
Documentation/remote-helpers: Fix typos and improve language
Fixup: Second argument may be any arbitrary string
Documentation/remote-helpers: Add invocation section
Documentation/urls: Rewrite to accomodate <transport>::<address>
Documentation/remote-helpers: Rewrite description
tag -v: use RUN_GIT_CMD to run verify-tag
documentation: clarify direction of core.autocrlf
autoconf: Check if <paths.h> exists and set HAVE_PATHS_H
Document new "already-merged" rule for branch -d
Add .depend directories to .gitignore
t7006: guard cleanup with test_expect_success
Documentation/config.txt: default gc.aggressiveWindow is 250, not 10
t5800: testgit helper requires Python support
t3507: Make test executable
t7400: clarify submodule update tests
t7400: clarify 'submodule add' tests
t7400: split setup into multiple tests
fetch/push: fix usage strings
remote-curl: ensure that URLs have a trailing slash
http: make end_url_with_slash() public
t5541-http-push: add test for URLs with trailing slash
branch: say "Reset to" in reflog entries for 'git branch -f' operations
ls-remote: fall-back to default remotes when no remote specified
apply: Allow blank *trailing* context lines to match beyond EOF
Add option to git-commit to allow empty log messages
notes.h: declare bit field as unsigned to silence compiler complaints
remote-helpers: add tests for testgit helper
pack-protocol.txt: fix pkt-line lengths
pack-protocol.txt: fix spelling
Teach mailinfo %< as an alternative scissors mark
Makefile: future-proof Cygwin version check
Prompt for a username when an HTTP request 401s
remote-helpers: add testgit helper
remote-helpers: add support for an export command
gitweb: git_get_project_config requires only $git_dir, not also $project
remote-helpers: allow requesing the path to the .git directory
fast-import: always create marks_file directories
clone: also configure url for bare clones
clone: pass the remote name to remote_get
Makefile: Remove usage of deprecated Python "has_key" method
Use strbufs instead of open-coded string manipulation
Allow passing of configuration parameters in the command line
difftool: Fix '--gui' when diff.guitool is unconfigured
fast-export: don't segfault when marks file cannot be opened
fmt-merge-msg: hide summary option
fmt-merge-msg: remove custom string_list implementation
string-list: add unsorted_string_list_lookup()
fmt-merge-msg: use pretty.c routines
t6200: test fmt-merge-msg more
t6200: modernize with test_tick
fmt-merge-msg: be quiet if nothing to merge
imap-send: Remove limitation on message body
git checkout: create unparented branch by --orphan
merge-recursive: add a label for ancestor
cherry-pick, revert: add a label for ancestor
revert: clarify label on conflict hunks
compat: add mempcpy()
checkout -m --conflict=diff3: add a label for ancestor
merge_trees(): add ancestor label parameter for diff3-style output
merge_file(): add comment explaining behavior wrt conflict style
checkout --conflict=diff3: add a label for ancestor
ll_merge(): add ancestor label parameter for diff3-style output
merge-file --diff3: add a label for ancestor
xdl_merge(): move file1 and file2 labels to xmparam structure
xdl_merge(): add optional ancestor label to diff3-style output
tests: document cherry-pick behavior in face of conflicts
tests: document format of conflicts from checkout -m
revert: fix tiny memory leak in cherry-pick --ff
daemon: parse_host_and_port SIGSEGV if port is specified
Makefile: Fix occasional GIT-CFLAGS breakage
Makefile: Fix CDPATH problem
t/t5505-remote.sh: escape * to prevent interpretation by shell as glob
t5505: add missing &&
t5505: remove unnecessary subshell invocations
notes.c: remove inappropriate call to return
pull: replace unnecessary sed invocation
gitk: Don't clobber "Remember this view" setting
gitk: Add comments to explain encode_view_opts and decode_view_opts
daemon.c: avoid accessing ss_family member of struct sockaddr_storage
t/t1304: make a second colon optional in the mask ACL check
t/t1304: set the ACL effective rights mask
t/t1304: use 'test -r' to test readability rather than looking at mode bits
t/t1304: set the Default ACL base entries
t/t1304: avoid -d option to setfacl
t9150,t9151: Add rewrite-root option to init
git-svn: Fix merge detecting with rewrite-root
notes: rework subcommands and parse options
send-email: add --no-cc, --no-to, and --no-bcc
format-patch: add --no-cc, --no-to, and --no-add-headers
format-patch: use a string_list for headers
grep: Colorize selected, context, and function lines
grep: Colorize filename, line number, and separator
Add GIT_COLOR_BOLD_* and GIT_COLOR_BG_*
t3417: Add test cases for "rebase --whitespace=fix"
t4124: Add additional tests of --whitespace=fix
apply: Allow blank context lines to match beyond EOF
apply: Remove the quick rejection test
apply: Don't unnecessarily update line lengths in the preimage
t7406: Fix submodule init config tests
git-core: Support retrieving passwords with GIT_ASKPASS
run-command.c: fix build warnings on Ubuntu
git-svn: Support retrieving passwords with GIT_ASKPASS
fallback SSH_ASKPASS when GIT_ASKPASS not set
gitweb: Fix project-specific feature override behavior
remote-curl: init walker only when needed
remote-curl: use http_fetch_ref() instead of walker wrapper
http: init and cleanup separately from http-walker
http-walker: cleanup more thoroughly
http-push: remove "|| 1" to enable verbose check
t554[01]-http-push: refactor, add non-ff tests
t5541-http-push: check that ref is unchanged for non-ff test
Remove reference to GREP_COLORS from documentation
Makefile: clarify definition of TEST_OBJS
git-svn: Fix discarding of extra parents from svn:mergeinfo
t9151: Add two new svn:mergeinfo test cases
t9151: Fix a few commits in the SVN dump
grep docs: document --no-index option
grep docs: --cached and <tree>... are incompatible
grep docs: use AsciiDoc literals consistently
grep docs: pluralize "Example" section
is_submodule_modified(): clear environment properly
submodules: ensure clean environment when operating in a submodule
shell setup: clear_local_git_env() function
rev-parse: --local-env-vars option
Refactor list of of repo-local env vars
transport: update flags to be in running order
fetch and pull: learn --progress
push: learn --progress
transport->progress: use flag authoritatively
clone: support multiple levels of verbosity
push: support multiple levels of verbosity
fetch: refactor verbosity option handling into transport.[ch]
Documentation/git-push: put --quiet before --verbose
Documentation/git-pull: put verbosity options before merge/fetch ones
Documentation/git-clone: mention progress in -v
am: remove rebase-apply directory before gc
tests: Fix race condition in t7006-pager
hash-object: don't use mmap() for small files
t7006-pager: if stdout is not a terminal, make a new one
tests: Add tests for automatic use of pager
git-p4: fix bug in symlink handling
Documentation: Fix indentation problem in git-commit(1)
Add an optional argument for --color options
Documentation: describe --thin more accurately
refactor duplicated encode_header in pack-objects and fast-import
refactor duplicated fill_mm() in checkout and merge-recursive
refactor duplicated code in builtin-send-pack.c and transport.c
connect.c: move duplicated code to a new function 'get_host_and_port'
gitweb: Protect escaping functions against calling on undef
gitweb: esc_html (short) error message in die_error
require_work_tree broken with NONGIT_OK
grep documentation: clarify what files match
test for add with non-existent pathspec
transport: add got_remote_refs flag
Add test for using Git at root of file system
Support working directory located at root
Move offset_1st_component() to path.c
am: Fix launching of pager
gitweb: Die if there are parsing errors in config file
git svn: Fix launching of pager
git.1: Clarify the behavior of the --paginate option
Make 'git var GIT_PAGER' always print the configured pager
Fix 'git var' usage synopsis
init-db, rev-parse --git-dir: do not append redundant slash
make_absolute_path(): Do not append redundant slash
filter-branch: Fix error message for --prune-empty --commit-filter
blame: prevent a segv when -L given start > EOF
Some recent tests accidentally depended on very new versions of git.
Oops.  Apparently I didn't run 'make test' after most recent change.
Improve checking for existence of the --prefix directory.
Make tests pass with recent git (1.7.0 and up).
bash: support the --autosquash option for rebase
run-command: support custom fd-set in async
git-gui: update french translation
Jakub's changes broke the progress message slightly.
Merge branch 'master' of git://github.com/psionides/git-subtree
Makefile: always remove .depend directories on 'make clean'
Makefile: tuck away generated makefile fragments in .depend
Do not install shell libraries executable
Make NO_PTHREADS the sole thread configuration variable
gitweb: Make running t9501 test with '--debug' reliable and usable
grep: Fix two memory leaks
If deriving SVN_SSH from GIT_SSH on msys, also add quotes
gitk: Add French translation
Teach Makefile to check header dependencies
Makefile: list standalone program object files in PROGRAM_OBJS
fix portability issues with $ in double quotes
Threaded grep
Makefile: lazily compute header dependencies
Makefile: list generated object files in OBJECTS
Makefile: disable default implicit rules
Makefile: rearrange dependency rules
Makefile: transport.o depends on branch.h now
Merge branch 'master' of git://repo.or.cz/alt-git into jn/autodep
Makefile: drop dependency on $(wildcard */*.h)
Makefile: clean up http-walker.o dependency rules
Makefile: remove wt-status.h from LIB_H
Makefile: make sure test helpers are rebuilt when headers change
Makefile: add missing header file dependencies
am: fix patch format detection for Thunderbird "Save As" emails
t0022: replace non-portable literal CR
tests: consolidate CR removal/addition functions
commit-tree: remove unused #define
t5541-http-push: make grep expression check for one line only
rebase: replace antiquated sed invocation
Add test-run-command to .gitignore
gitweb.js: Workaround for IE8 bug
Windows: Remove dependency on pthreadGC2.dll
Documentation: merge: use MERGE_HEAD to refer to the remote branch
Documentation: simplify How Merge Works
Documentation: merge: add a section about fast-forward
Documentation: emphasize when git merge terminates early
Documentation: merge: add an overview
Documentation: merge: move merge strategy list to end
Documentation: suggest `reset --merge` in How Merge Works section
Documentation: merge: move configuration section to end
git-gui: set GIT_DIR and GIT_WORK_TREE after setup
git-gui: update shortcut tools to use _gitworktree
git-gui: handle bare repos correctly
git-gui: handle non-standard worktree locations
git-gui: work from the .git dir
git-svn: allow subset of branches/tags to be specified in glob spec
git-svn: allow UUID to be manually remapped via rewriteUUID
git-svn: document --username/commit-url for branch/tag
git-svn: add --username/commit-url options for branch/tag
git-svn: respect commiturl option for branch/tag
git-svn: fix mismatched src/dst errors for branch/tag
t7800-difftool.sh: Test mergetool.prompt fallback
Make difftool.prompt fall back to mergetool.prompt
retry request without query when info/refs?query fails
Fix memory corruption when .gitignore does not end by \n
ident.c: replace fprintf with fputs to suppress compiler warning
rm: only refresh entries that we may touch
Extend merge-subtree tests to test -Xsubtree=dir.
Teach git-pull to pass -X<option> to git-merge
git merge -X<option>
MSVC: Windows-native implementation for subset of Pthreads API
Documentation: Update git core tutorial clarifying reference to scripts
difftool: Update copyright notices to list each year separately
Test t5560: Fix test when run with dash
status: only touch path we may need to check
difftool: Use eval to expand '--extcmd' expressions
difftool: Add '-x' and as an alias for '--extcmd'
t7800-difftool.sh: Simplify the --extcmd test
Document git-blame triple -C option
fast-import: tag may point to any object type
improved rev_is_descendant_of_branch() function
added temporary test dirs to gitignore
added tests for recent changes
fixed bug in commit message for split
changed alias for --prefix from -p to -P
Add missing #include to support TIOCGWINSZ on Solaris
Documentation: tiny git config manual tweaks
Documentation: git gc packs refs by default now
fix for subtree split not finding proper base for new commits
allow using --branch with existing branches if it makes sense
added -m/--message option for setting merge commit message
string-list: rename the include guard to STRING_LIST_H
transport-helper.c::push_refs(): emit "no refs" error message
transport-helper.c::push_refs(): ignore helper-reported status if ref is not to be pushed
transport.c::transport_push(): make ref status affect return value
refactor ref status logic for pushing
t5541-http-push.sh: add test for unmatched, non-fast-forwarded refs
t5541-http-push.sh: add tests for non-fast-forward pushes
git-diff.txt: Link to git-difftool
difftool: Allow specifying unconfigured commands with --extcmd
difftool--helper: Remove use of the GIT_MERGE_TOOL variable
difftool--helper: Update copyright and remove distracting comments
Documentation: tiny git config manual tweaks
Documentation: git gc packs refs by default now
git-rm doc: Describe how to sync index & work tree
t7002: test for not using external grep on skip-worktree paths
t7002: set test prerequisite "external-grep" if supported
git-gui: Makefile: consolidate .FORCE-* targets
added -p alias for --prefix
Makefile: consolidate .FORCE-* targets
Makefile: learn to generate listings for targets requiring special flags
Makefile: use target-specific variable to pass flags to cc
Makefile: regenerate assembler listings when asked
Smart-http tests: Test http-backend without curl or a webserver
Smart-http tests: Break test t5560-http-backend into pieces
Smart-http tests: Improve coverage in test t5560
Smart-http: check if repository is OK to export before serving it
t/lib-http.sh: Restructure finding of default httpd location
Makefile: make ppc/sha1ppc.o depend on GIT-CFLAGS
Use warning function instead of fprintf(stderr, "Warning: ...").
git-difftool: Add '--gui' for selecting a GUI tool
t7800-difftool: Set a bogus tool for use by tests
Fix "git remote update" with remotes.defalt set
grep: do not do external grep on skip-worktree entries
Add completion for git-svn mkdirs,reset,and gc
t7102: make the test fail if one of its check fails
Documentation: always respect core.worktree if set
clone: use --progress to force progress reporting
clone: set transport->verbose when -v/--verbose is used
git-clone.txt: reword description of progress behaviour
check stderr with isatty() instead of stdout when deciding to show progress
Add git-http-backend to command-list.
git svn: add test for a git svn gc followed by a git svn mkdirs
rebase -i: abort cleanly if the editor fails to launch
technical-docs: document hash API
api-strbuf.txt: fix typos and document launch_editor()
commit: correctly respect skip-worktree bit
ie_match_stat(): do not ignore skip-worktree bit with CE_MATCH_IGNORE_VALID
octopus: remove dead code
octopus: reenable fast-forward merges
octopus: make merge process simpler to follow
bash: Support new 'git fetch' options
git-add/rm doc: Consistently back-quote
git-gui: suppress RenderBadPicture X error caused by Tk bug
Documentation: 'git add -A' can remove files
git-gui: Increase blame viewer usability on MacOS.
fast-import: add (non-)relative-marks feature
fast-import: allow for multiple --import-marks= arguments
fast-import: test the new option command
fast-import: add option command
fast-import: add feature command
fast-import: put marks reading in its own function
fast-import: put option parsing code in separate functions
builtin-push: don't access freed transport->url
gitweb: Describe (possible) gitweb.js minification in gitweb/README
General --quiet improvements
t9001: use older Getopt::Long boolean prefix '--no' rather than '--no-'
t4201: use ISO8859-1 rather than ISO-8859-1
help: Do not unnecessarily look for a repository
gitweb: Add link to other blame implementation in blame views
gitweb: Make linking to actions requiring JavaScript a feature
builtin-merge.c: call exclude_cmds() correctly.
Makefile: do not clean arm directory
send-email: automatic envelope sender
http: maintain curl sessions
format-patch: add test for parsing of "--"
format-patch: fix parsing of "--" on the command line
gitworkflows: Consistently back-quote git commands
gitweb.js: fix padLeftStr() and its usage
gitweb.js: Harden setting blamed commit info in incremental blame
Add Python support library for remote helpers
instaweb: restart server if already running
remote-curl.c: fix rpc_out()
Fix over-simplified documentation for 'git log -z'
User Manual: Write "Git" instead of "GIT"
Fix truncated usage messages
apply: Use the term "working tree" consistently
apply: Format all options using back-quotes
apply: apply works outside a repository
Clarify and correct -z
git am/mailinfo: Don't look at in-body headers when rebasing
git remote: Separate usage strings for subcommands
submodule.c: Squelch a "use before assignment" warning
Weird, I forgot to have 'make test' call test.sh.
gitweb.js: fix null object exception in initials calculation
ls-tree: migrate to parse-options
Fix various memory leaks in transport-helper.c
Speed up bash completion loading
t3101: test more ls-tree options
grep: Allow case insensitive search of fixed-strings
http-backend: Let gcc check the format of more printf-type functions.
http-backend: Fix access beyond end of string.
Check the format of more printf-type functions
Update 'git remote update' usage string to match man page.
Oops, forgot a COPYING file.  It's GPLv2.
bash: add the merge option --ff-only
gitweb: Make 'history' view (re)use git_log_generic()
gitweb: Refactor common parts of 'log' and 'shortlog' views
gitweb: Refactor 'log' action generation, adding git_log_body()
gitk: Update Japanese translation
gitk: Disable checkout of remote branches
git-add.txt: fix formatting of --patch section
Provide a build time default-editor setting
am -i, git-svn: use "git var GIT_PAGER"
add -i, send-email, svn, p4, etc: use "git var GIT_EDITOR"
Teach git var about GIT_PAGER
Teach git var about GIT_EDITOR
Suppress warnings from "git var -l"
Do not use VISUAL editor on dumb terminals
Update packfile transfer protocol documentation
diff --no-index: make the usage string less scary
merge-{recursive,subtree}: use usagef() to print usage
Introduce usagef() that takes a printf-style format
Let 'git <command> -h' show usage without a git dir
Show usage string for 'git http-push -h'
format-patch: Add "--no-stat" as a synonym for "-p"
format-patch documentation: Fix formatting
format-patch documentation: Remove diff options that are not useful
format-patch: Always generate a patch
Let 'git http-fetch -h' show usage outside any git repository
Show usage string for 'git stripspace -h'
Show usage string for 'git unpack-file -h'
Show usage string for 'git show-index -h'
Show usage string for 'git rev-parse -h'
Show usage string for 'git merge-one-file -h'
Show usage string for 'git mailsplit -h'
Show usage string for 'git imap-send -h'
Show usage string for 'git get-tar-commit-id -h'
Show usage string for 'git fast-import -h'
Show usage string for 'git check-ref-format -h'
http-fetch: add missing initialization of argv0_path
merge: do not setup worktree twice
check-ref-format: update usage string
git-update-index.txt: Document the --really-refresh option.
Re-implement 'git remote update' using 'git fetch'
builtin-fetch: add --dry-run option
builtin-fetch: add --prune option
teach warn_dangling_symref to take a FILE argument
remote: refactor some logic into get_stale_heads()
Add missing test for 'git remote update --prune'
Add the configuration option skipFetchAll
Teach the --multiple option to 'git fetch'
Teach the --all option to 'git fetch'
Show usage string for 'git show-ref -h'
Show usage string for 'git merge-ours -h'
Show usage string for 'git commit-tree -h'
Show usage string for 'git cherry -h'
Show usage string for 'git grep -h'
Retire fetch--tool helper to contrib/examples
gitweb: Document current snapshot rules via new tests
Add intermediate build products to .gitignore
t1200: Make documentation and test agree
t1200: cleanup and modernize test style
t5540-http-push: remove redundant fetches
http-backend: more explict LocationMatch
http-backend: add example for gitweb on same URL
http-backend: use mod_alias instead of mod_rewrite
http-backend: reword some documentation
http-backend: add GIT_PROJECT_ROOT environment var
commit -c/-C/--amend: reset timestamp and authorship to committer with --reset-author
Add some tips for how to install.
gitk: Add Japanese translation
t1402: Make test executable
http-push: fix check condition on http.c::finish_http_pack_request()
Handle more shell metacharacters in editor names
t/gitweb-lib.sh: Split gitweb output into headers and body
Teach 'git merge' and 'git pull' the option --ff-only
clone: detect extra arguments
Make the MSVC projects use PDB/IDB files named after the project
Use faster byte swapping when compiling with MSVC
mergetool--lib: add p4merge as a pre-configured mergetool option
bash: complete more options for 'git rebase'
Do not try to remove directories when removing old links
Use 'fast-forward' all over the place
MSVC: Enable OpenSSL, and translate -lcrypto
git-clone.txt: Fix grammar and formatting
gitweb: linkify author/committer names with search
rebase -i: fix reword when using a terminal editor
gitweb: fix esc_param
check-ref-format: simplify --print implementation
Documentation: describe check-ref-format --branch
Add tests for git check-ref-format
diff.c: stylefix
Documentation: clone: clarify discussion of initial branch
bash: add support for 'git replace'
completion: fix alias listings with newlines
completion: fix completion of git <TAB><TAB>
gitweb: Do not show 'patch' link for merge commits
racy-git.txt: explain nsec problem in more detail
Documentation: clarify "working tree" definition
Documentation: clarify branch creation
Documentation: branch: update --merged description
Documentation: clarify mergeoptions description
Documentation: git fmt-merge-msg does not have to be a script
Describe DOCBOOK_XSL_172, ASCIIDOC_NO_ROFF options in Makefile
git-svn: Avoid spurious errors when rewriteRoot is used.
Makefile: add a note about the NO_MMAP setting on IRIX and IRIX64
Makefile: enable THREADED_DELTA_SEARCH on IRIX and IRIX64
completion: add dirstat and friends to diff options
completion: update am, commit, and log
Makefile: enable THREADED_DELTA_SEARCH on SunOS
Teach 'rebase -i' the command "reword"
cmd_pull didn't support --squash correctly.
Fix a minor problem in identifying squashes vs. normal splits.
If someone provides a --prefix that ends with slash, strip the slash.
Merge branch 'master' of git://github.com/voxpelli/git-subtree
Add a README that says to email me instead of using github mail.
filter-branch: add --prune-empty to option summary
Documentation: update pt-BR
send-email: fix mutt regex for grouped aliases
Make just opening the generated MSVC solution file not modify it
Make generated MSVC solution file open from Windows Explorer
generators/vcproj.pm: remove UNICODE from build
Documentation/git-gc.txt: default --aggressive window is 250, not 10
Correct minor typo in post-receive hook template
send-email: fix obscure error when encryption=tls and smtp cannot connect
perl/Makefile.PL: detect MakeMaker versions incompatible with DESTDIR
Update "describe" documentation to match reality
Tag GIT_VERSION when Git is built with MSVC
Add scripts to generate projects for other buildsystems (MSVC vcproj, QMake)
Add README for MSVC build
Add MSVC to Makefile
Define strncasecmp and ftruncate for MSVC
Make usage of windows.h lean and mean
Add platform files for porting to MSVC
Add MinGW header files to build git with MSVC
Add empty header files for MSVC port
Test for WIN32 instead of __MINGW32_
Fix __stdcall placement and function prototype
Change regerror() declaration from K&R style to ANSI C (C89)
Add include guards to compat/win32.h
Avoid declaration after statement
pack-objects: remove SP at the end of usage string
Update the usage bundle string.
git-archive: infer output format from filename when unspecified
git-archive: add '-o' as a alias for '--output'
svn: properly escape arguments for authors-prog
git-gui: store wm state and fix wm geometry
http.c: remove verification of remote packs
git.el: Use git-add-file for unmerged files, remove git-resolve-file
git-pull: do not mention --quiet and --verbose twice
gitweb: Add 'show-sizes' feature to show blob sizes in tree view
gitweb: Minify gitweb.js if JSMIN is defined
gitweb: Create links leading to 'blame_incremental' using JavaScript
gitweb: Colorize 'blame_incremental' view during processing
gitweb: Incremental blame (using JavaScript)
gitweb: Add optional "time to generate page" info in footer
Style fixes, add a space after if/for/while.
Add date formatting and parsing functions relative to a given time
http.c: set slot callback members to NULL when releasing object
t/test-lib.sh: provide a shell implementation of the 'yes' utility
commit.c: rename variable named 'n' which masks previous declaration
abspath.c: move declaration of 'len' into inner block and use appropriate type
Makefile: remove pointless conditional assignment in SunOS section
git-log: allow --decorate[=short|full]
Fix behaviour if you have a branch named the same as your --prefix
Improve patch to use git --exec-path: add to PATH instead.
sparse checkout: inhibit empty worktree
Add tests for sparse checkout
read-tree: add --no-sparse-checkout to disable sparse checkout support
unpack-trees(): ignore worktree check outside checkout area
unpack_trees(): apply $GIT_DIR/info/sparse-checkout to the final index
unpack-trees(): "enable" sparse checkout and load $GIT_DIR/info/sparse-checkout
unpack-trees.c: generalize verify_* functions
unpack-trees(): add CE_WT_REMOVE to remove on worktree alone
Introduce "sparse checkout"
dir.c: export excluded_1() and add_excludes_from_file_1()
excluded_1(): support exclude files in index
unpack-trees(): carry skip-worktree bit over in merged_entry()
Read .gitignore from index if it is skip-worktree
Avoid writing to buffer in add_excludes_from_file_1()
Teach Git to respect skip-worktree bit (writing part)
Teach Git to respect skip-worktree bit (reading part)
Introduce "skip-worktree" bit in index, teach Git to get/set this bit
Add test-index-version
update-index: refactor mark_valid() in preparation for new options
gitweb: pull ref markes pull out of subject <a> element
git-compat-util.h: remove superfluous test for __sun__
git-svn.txt: Fix location of parent argument
http.c: don't assume that urls don't end with slash
git-log: allow --decorate[=short|full]
Documentaqtion/git-submodule.txt: Typofix
git-cvsimport: add support for cvs pserver password scrambling.
block-sha1/sha1.c: silence compiler complaints by casting void * to char *
svn: allow branches outside of refs/remotes
sort assertion to make it more generic
fixed order of assertion in tests
git-gui: Update russian translation
Prevent diff machinery from examining assume-unchanged entries on worktree
Fix typos in git-remote.txt and git-symbolic-ref.txt
Check return value of ftruncate call in http.c
http.c: replace usage of temporary variable for urls
http.c: free preq when aborting
svn: Honor --prefix option in init without --stdlayout
svn: Add && to t9107-git-svn-migrate.sh
gitweb/README: Document $base_url
builtin-mailsplit.c: remove read_line_with_nul() since it is no longer used
builtin-mailinfo,builtin-mailsplit: use strbufs
strbuf: add new function strbuf_getwholeline()
git apply: option to ignore whitespace differences
gitweb: fix 'Use of uninitialized value' error in href()
technical-docs: document tree-walking API
todo: idea for a 'git subtree grafts' command
todo
Fix typos on pt_BR/gittutorial.txt translation
Add a reminder test case for a merge with F/D transition
config.txt: document add.ignore-errors
git svn: add gc command
gitweb: Use light/dark for class names also in 'blame' view
gitweb: Add author initials in 'blame' view, a la "git gui blame"
gitweb: Mark commits with no "previous" in 'blame' view
gitweb: Use "previous" header of git-blame -p in 'blame' view
gitweb: Mark boundary commits in 'blame' view
gitweb: Make .error style generic
configure.ac: properly unset NEEDS_SSL_WITH_CRYPTO when sha1 func is missing
configure.ac: rework/fix the NEEDS_RESOLV and NEEDS_LIBGEN tests
grep: Add --max-depth option.
sha1_name.c: avoid unnecessary strbuf_release
refs.c: release file descriptor on error return
todo^
init-db: migrate to parse-options
prune-packed: migrate to parse-options
verify-pack: migrate to parse-options
verify-tag: migrate to parse-options
write-tree: migrate to parse-options
todo
Docs: when pushing to github, the repo path needs to end in .git
Documentation: update description of shell aliases
todo
completion: __git_config_get_set_variables() handle values with spaces
Some todo items reported by pmccurdy
git.c: avoid allocating one-too-many elements for new argv array
completion: add missing config variables
gitweb: add empty alt text to avatar img
gitweb: picon avatar provider
gitweb: gravatar url cache
gitweb: (gr)avatar support
gitweb: use git_print_authorship_rows in 'tag' view too
gitweb: uniform author info for commit and commitdiff
gitweb: refactor author name insertion
read-tree: migrate to parse-options
read-tree: convert unhelpful usage()'s to helpful die()'s
fast-export: Document the fact that git-rev-list arguments are accepted
Add new fast-export testcases
fast-export: Add a --tag-of-filtered-object option for newly dangling tags
fast-export: Do parent rewriting to avoid dropping relevant commits
fast-export: Make sure we show actual ref names instead of "(null)"
fast-export: Omit tags that tag trees
fast-export: Set revs.topo_order before calling setup_revisions
gitweb/README: fix AliasMatch in example
fread does not return negative on error
t/t9001-send-email.sh: ensure generated script is executed with $SHELL_PATH
show-ref: migrate to parse-options
git-show-ref.txt: remove word and make consistent
Makefile: Solaris needs HAVE_ALLOCA_H for alloca()
add: allow configurations to be overriden by command line
stash: teach quiet option
am, rebase: teach quiet option
http.c: add http.sslCertPasswordProtected option
http.c: prompt for SSL client certificate password
http.c: fix compiling with libcurl 7.9.2
submodule, repack: migrate to git-sh-setup's say()
git-sh-setup: introduce say() for quiet options
am: suppress apply errors when using 3-way
t4150: test applying with a newline in subject
update todo
pull, rebase: simplify to use die()
git-am: refactor 'cleaning up and aborting'
diff-tree -r -t: include added/removed directories in the output
git-rerere.txt: grammatical fixups and cleanups
Shift object enumeration out of upload-pack
show-branch: don't use LASTARG_DEFAULT with OPTARG
send-email: use UTF-8 rather than utf-8 for consistency
git-send-email.perl: improve detection of MIME encoded-words
git-compat-util.h: avoid using c99 flex array feature with Sun compiler 5.8
parse-options: simplify usage argh handling
parse-options: make OPT_INTEGER's argh explicit
Makefile: add section for SunOS 5.7
Makefile: define __sun__ on SunOS
git-compat-util.h: tweak the way _XOPEN_SOURCE is set on Solaris
On Solaris choose the OLD_ICONV iconv() declaration based on the UNIX spec
Makefile: add NEEDS_RESOLV to optionally add -lresolv to compile arguments
http*: add helper methods for fetching objects (loose)
http*: add helper methods for fetching packs
http: use new http API in fetch_index()
http*: add http_get_info_packs
http: create function end_url_with_slash
http*: move common variables and macros to http.[ch]
http-push: do not SEGV after fetching a bad pack idx file
http*: copy string returned by sha1_to_hex
http-walker: verify remote packs
http-push, http-walker: style fixes
t5550-http-fetch: test fetching of packed objects
http-push: fix missing "#ifdef USE_CURL_MULTI" around "is_running_queue"
http-push: send out fetch requests on queue
t5540-http-push: test fetching of packed objects
t5540-http-push: test fetching of loose objects
http*: cleanup slot->local after fclose
git-show-branch.txt: document --date-order option
diff: generate pretty filenames in prep_temp_blob()
compat: add a basename() compatibility function
compat: add a mkstemps() compatibility function
Add git-replace to .gitignore
config.txt: document add.ignore-errors
man page: add an EXAMPLES section.
Add basic git-subtree manpage in asciidoc format.
Make --squash work with the 'add' command too.
Fix splitting after using a squash merge.
Don't squash-merge if the old and new commits are the same.
Basic "subtree merge --squash" support.
merge_msg() is really more like rejoin_msg().
FIXME help for --squash option
slightly rearrange help message for split.
New --branch option to split command.
typo in comment
t9120: don't expect failure with SVN_HTTPD_PORT unset
Makefile: use /usr/ucb/install on SunOS platforms rather than ginstall
git-am foreign patch support: StGIT support
git-am foreign patch support: autodetect some patch formats
git-am foreign patch support: introduce patch_format
t8005: fix typo, it's ISO-8859-5, not KOI8-R
t5500: Modernize test style
parse-opts: add OPT_FILENAME and transition builtins
parse-opts: prepare for OPT_FILENAME
More to-do items based on feedback
mergetool--lib: add support for araxis merge
http-push.c::remove_locks(): fix use after free
t/t3400-rebase.sh: add more tests to help migrating git-rebase.sh to C
apply, fmt-merge-msg: use relative filenames
commit: -F overrides -t
show-branch: migrate to parse-options API
parse-options: add PARSE_OPT_LITERAL_ARGHELP for complicated argh's
gitweb: Sanitize title attribute in format_subject_html
Terminate argv with NULL before calling setup_revisions()
doc/git-rebase.txt: remove mention of multiple strategies
git-svn: add --authors-prog option
completion: use git rev-parse to detect bare repos
Unify signedness in hashing calls
format-patch: migrate to parse-options API
show-branch: Fix die message in parse_reflog_param()
completion: add missing options to show-branch and show
Fix type-punning issues
Improve the naming of guessed target repository for git clone
Use UTF-8 instead of utf8 for backward compatibility
Splitting a hunk that adds a line at the top fails in "add -p"
builtin-checkout: Don't tell user that HEAD has moved before it has
tests: Add tests for missing format-patch long options
api-parse-options.txt: use 'func' instead of 'funct'
mktree: validate entry type in input
mktree --batch: build more than one tree object
mktree --missing: updated usage message and man page
gitk: Make more options easily accessible from Edit View dialog
Prettify log decorations even more
Change prettify_ref to prettify_refname
Quote LF in urls git fetch saves in FETCH_HEAD
bash completion: complete variable names for "git config" with options
gitweb: Remove unused $hash_base parameter from normalize_link_target
gitweb: Simplify snapshot format detection logic in evaluate_path_info
gitweb: Use capturing parentheses only when you intend to capture
gitweb: Replace wrongly added tabs with spaces
gitweb: Use block form of map/grep in a few cases more
gitweb: Always use three argument form of open
gitweb: Always use three argument form of open
gitweb: Do not use bareword filehandles
ls-tree manpage: output of ls-tree is compatible with update-index
ls-tree manpage: use "unless" instead of "when ... is not"
allow -t abbreviation for --track in git branch
mergetool--lib: specialize diff options for emerge and ecmerge
gitweb: Remove function prototypes (cleanup)
Documentation: cloning to empty directory is allowed
Clarify kind of conflict in merge-one-file helper
git config: clarify --add and --get-color
t4029: use sh instead of bash
improve error message in config.c
t4018-diff-funcname: add cpp xfuncname pattern to syntax test
git-am.txt: reword extra headers in message body
git-am.txt: Use date or value instead of time or timestamp
git-am.txt: add an 'a', say what 'it' is, simplify a sentence
completion: complete values for send-email
completion: complete values for log.date
completion: complete values for help.format
completion: add {gui,diff,merge}tool, man, and pager config variables
completion: add missing configuration variables to _git_config()
dir.c: Fix two minor grammatical errors in comments
Fix a bunch of pointer declarations (codestyle)
Abort if --rejoin fails.
gitk: Add Russian translation
Clarify kind of conflict in merge-one-file helper
improve error message in config.c
print unlink(2) errno in copy_or_link_directory
replace direct calls to unlink(2) with unlink_or_warn
Introduce an unlink(2) wrapper which gives warning if unlink failed
git config: error when editing a repo config and not being in one
git-gui: Update Russian translation
Documentation: fix a grammatical error in api-builtin.txt
builtin-merge: fix a typo in an error message
Add semicolon to curly brace group in main Makefile
debug messages are off by default; use -d to enable.
test.sh: oops, never intended to count the raw number of commits.
Simplify merges even more aggressively.
test.sh: make sure no commit changes more than one file at a time.
Only copy a commit if it has at least one nonidentical parent.
Trim some extra merge commits that don't need to go into the split tree.
test.sh tweak
Add some basic assertions to test.sh.
Add a 'create' helper function in test.sh.
Clarify why we can't do 'git rev-list' with a path.
Typo when searching for existing splits.
Add --annotate option, and create recognizable file content during tests.
todo list
Remove obsolete bug warning in man git-update-server-info
Change test.sh to test the new add, merge, and pull commands.
Handle it successfully if a given parent commit has no parents.
Add 'git subtree merge' and 'git subtree pull'.
Add a new 'git subtree add' command for adding subtrees from a given rev.
Pass the path using the --prefix option instead of on the command line.
Okay, that was a little too aggressive.
Even more aggressive commit trimming.
Prune out some extra merge commits by comparing their parents correctly.
Quick test script for generating reasonably complex merge scenarios.
Skip over empty commits.
Hmm... can't actually filter rev-list on the subdir name.
Added a --onto option, but it's so complicated I can't tell if it works.
Use information about prior splits to make sure merges work right.
Add a new --rejoin option.
Print out the newly created commitid at the end, for use in other scripts.
We now copy the other stuff about a commit (changelog, author, etc).
'git subtree split' now basically works.
basic options parsing and whatnot.
Explain seemingly pointless use of system in difftool
config.txt: Make configuration paragraph more consistent
config.txt: clarify sentences in the configuration and syntax sections
config.txt: add missing 'the's and make words plural
git-format-patch.txt: general rewordings and cleanups
git-show-branch.txt: cleanup example description
Documentation: use lowercase for shallow and deep threading
config.txt: add missing format.{subjectprefix,cc,attach} variables
test-genrandom: Add newline to usage string
Wait for git diff to finish in git difftool
graph API: Use horizontal lines for more compact graphs
graph API: fix a bug in the rendering of octopus merges
graph API: fix extra space during pre_commit_line state
t4202-log: extend test coverage of graphing
tests: make test-apply-criss-cross-rename more robust
builtin-apply: keep information about files to be deleted
tests: test applying criss-cross rename patch
Makefile: remove {fetch,send}-pack from PROGRAMS as they are builtins
builtin-fast-export.c: handle nested tags
builtin-fast-export.c: fix crash on tagged trees
builtin-fast-export.c: turn error into warning
test-suite: adding a test for fast-export with tag variants
archive: do not read .gitattributes in working directory
attr: add GIT_ATTR_INDEX "direction"
get_local_heads(): do not return random pointer if there is no head
Documentation: boolean value may be given by on/off
builtin-apply: keep information about files to be deleted
send-email: Remove superfluous `my $editor = ...'
send-email: 'References:' should only reference what is sent
send-email: Handle "GIT:" rather than "GIT: " during --compose
Docs: send-email: --smtp-server-port can take symbolic ports
Docs: send-email: Refer to CONFIGURATION section for sendemail.multiedit
Docs: send-email: Put options back into alphabetical order
graph API: Added logic for colored edges
tests: test applying criss-cross rename patch
mergetool--lib: simplify API usage by removing more global variables
State the effect of filter-branch on graft explicitly
Update delta compression message to be less misleading
git-svn: speed up blame command
difftool/mergetool: refactor commands to use git-mergetool--lib
mergetool: use $( ... ) instead of `backticks`
bash completion: add git-difftool
difftool: add support for a difftool.prompt config variable
difftool: add various git-difftool tests
difftool: move 'git-difftool' out of contrib
difftool: add a -y shortcut for --no-prompt
difftool: use perl built-ins when testing for msys
difftool: remove the backup file feature
difftool: remove merge options for opendiff, tkdiff, kdiff3 and xxdiff
user-manual: the name of the hash function is SHA-1, not sha1
docbook: change css style
user-manual: remove some git-foo usage
git-repack: use non-dashed update-server-info
send-email: fix nasty bug in ask() function
send-email: ensure quoted addresses are rfc2047 encoded
send-email: correct two tests which were going interactive
send-email: ask_default should apply to all emails, not just the first
send-email: don't attempt to prompt if tty is closed
format_sanitized_subject: Don't trim past initial length of strbuf
Fix bash completion in path with spaces
Documentation: update graph api example.
send-email: add tests for refactored prompting
send-email: refactor and ensure prompting doesn't loop forever
builtin-fast-export.c: handle nested tags
builtin-fast-export.c: fix crash on tagged trees
builtin-fast-export.c: turn error into warning
test-suite: adding a test for fast-export with tag variants
fast-export: Avoid dropping files from commits
Correct missing SP characters in grammar comment at top of fast-import.c
git-filter-branch: avoid collisions with variables in eval'ed commands
completion: add --thread=deep/shallow to format-patch
completion: add --cc and --no-attachment option to format-patch
completion: add --annotate option to send-email
gitk: Provide a 32x32 window icon based on the git logo
gitk: Provide a window icon if possible
format-patch: --numbered-files and --stdout aren't mutually exclusive
format-patch: --attach/inline uses filename instead of SHA1
format-patch: move get_patch_filename() into log-tree
format-patch: pass a commit to reopen_stdout()
format-patch: construct patch filename in one function
pretty.c: add %f format specifier to format_commit_message()
Add --staged to bash completion for git diff
Improve error message about fetch into current branch
everyday: use the dashless form of git-init
format-patch: --numbered-files and --stdout aren't mutually exclusive
pack-objects: don't loosen objects available in alternate or kept packs
t7700: demonstrate repack flaw which may loosen objects unnecessarily
git-branch: display "was sha1" on branch deletion rather than just "sha1"
Microoptimize strbuf_cmp
Produce a nicer output in case of sha1_object_info failures in ls-tree -l
import-tars: separate author from committer
http-push.c: use a faux remote to pass to http_init
Do not name "repo" struct "remote" in push_http.c
MinGW: implement mmap
grep: prefer builtin over external one when coloring results
git-send-email.txt: describe --compose better
disable post-checkout test on Cygwin
config: test for --replace-all with one argument and fix documentation.
MinGW: a hardlink implementation
MinGW: a helper function that translates Win32 API error codes
contrib/difftool: use a separate config namespace for difftool commands
connect.c: remove a few globals by using git_config callback data
Append ampersand to "Target" of lnk files created by do_cygwin_shortcut
git-svn: support intermediate paths when matching tags/branches
http.c: use strbuf API in quote_ref_url
bash completion: teach fetch, pull, and push to complete their options
bash completion: refactor --strategy completion
bash completion: fix completion issues with fetch, pull, and push
Documentation - More examples for git bisect
Make the 'lock file' exists error more informative
Improve error message for git-filter-branch
Google has renamed the imap folder
Modify description file to say what this file is
Documentation/git-archive.txt: Note attributes
send-email: add --confirm option and configuration setting
git-pull: Allow --stat and --no-stat to be used with --rebase
git-rebase: Add --stat and --no-stat for producing diffstat on rebase
Ensure proper setup of git_dir for git-hash-object
builtin-remote: new show output style for push refspecs
builtin-remote: new show output style
builtin-remote: add set-head subcommand
builtin-remote: teach show to display remote HEAD
builtin-remote: fix two inconsistencies in the output of "show <remote>"
builtin-remote: make get_remote_ref_states() always populate states.tracked
builtin-remote: rename variables and eliminate redundant function call
builtin-remote: remove unused code in get_ref_states
builtin-remote: refactor duplicated cleanup code
string-list: new for_each_string_list() function
remote: make match_refs() not short-circuit
remote: make match_refs() copy src ref before assigning to peer_ref
remote: let guess_remote_head() optionally return all matches
remote: make copy_ref() perform a deep copy
t5540-http-push.sh: avoid non-portable grep -P
remote: simplify guess_remote_head()
move locate_head() to remote.c
move duplicated ref_newer() to remote.c
move duplicated get_local_heads() to remote.c
Allow HTTP tests to run on Darwin
sha1_file.c: fix typo
git add: trivial codestyle cleanup
trace: Fixed a minor typo in an error message.
Add tests for git log --pretty, --format and --oneline.
send-email: don't create temporary compose file until it is needed
git config: don't allow --get-color* and variable type
git config: don't allow extra arguments for -e or -l.
git config: don't allow multiple variable types
git config: don't allow multiple config file locations
git config: reorganize to use parseopt
git config: reorganize get_color*
git config: trivial rename in preparation for parseopt
git_config(): not having a per-repo config file is not an error
git config: codestyle cleanups
disallow providing multiple upstream branches to rebase, pull --rebase
gitweb: fix wrong base URL when non-root DirectoryIndex
use a hash of the lock token as the suffix for PUT/MOVE
send-email: --suppress-cc improvements
send-email: handle multiple Cc addresses when reading mbox message
send-email: allow send-email to run outside a repo
Teach rebase to rebase even if upstream is up to date
builtin-branch: improve output when displaying remote branches
Add 'rm -f' equivalent to 'git rm' example of filter-branch --index-filter
Bugfix: GIT_EXTERNAL_DIFF with more than one changed files
fast-export: ensure we traverse commits in topological order
Documentation: clarify commits affected by gitk --merge
config: Add new option to open an editor.
git-gui: Support more git version notations.
git-gui: Avoid an infinite rescan loop in handle_empty_diff.
gitweb: Better regexp for SHA-1 committag match
tree.c: allow read_tree_recursive() to traverse gitlink entries
Makefile: minor improvements for Mac OS X (Darwin)
Replace deprecated dashed git commands in usage
builtin-remote: make rm operation safer in mirrored repository
http-push: wrap signature of get_remote_object_url
http-push: add back underscore separator before lock token
User-manual: "git stash <comment>" form is long gone
add test-dump-cache-tree in Makefile
fix typo in Documentation
builtin-remote: make rm() use properly named variable to hold return value
In add --patch, Handle K,k,J,j slightly more gracefully.
Add / command in add --patch
git-add -i/-p: Change prompt separater from slash to comma
gitweb: Update README that gitweb works better with PATH_INFO
git-gui: Fix post-commit status with subject in non-locale encoding
contrib/difftool: Don't repeat merge tool candidates
http-push: refactor request url creation
git-cvsserver: run post-update hook *after* update.
gitweb: align comments to code
gitweb: webserver config for PATH_INFO
gitweb: make static files accessible with PATH_INFO
git-cvsserver: handle CVS 'noop' command.
gitweb: check if-modified-since for feeds
gitweb: last-modified time should be commiter, not author
gitweb: rss channel date
gitweb: rss feed managingEditor
gitweb: feed generator metadata
gitweb: channel image in rss feed
git-am: minor cleanups
http-push: refactor lock-related headers creation for curl requests
Allow cloning an empty repository
difftool: put the cursor on the editable file for Vim
difftool: fix documentation problems
contrib: add 'git difftool' for launching common merge tools
fast-import: Cleanup mode setting.
Git.pm: call Error::Simple() properly
Allow cloning to an existing empty directory
add is_dot_or_dotdot inline function
gitweb: suggest name for OPML view
bash completion: Use 'git add' completions for 'git stage'
bash completion: Add '--intent-to-add' long option for 'git add'
gitweb: don't use pathinfo for global actions
remove trailing LF in die() messages
gitweb: use href() when generating URLs in OPML
grep: grep cache entries if they are "assume unchanged"
grep: support --no-ext-grep to test builtin grep
Always show which directory is not a git repository
Make help entries alphabetical
gitk: Map / to focus the search box
gitweb: link to patch(es) view in commit(diff) and (short)log view
gitweb: add patches view
gitweb: change call pattern for git_commitdiff
gitweb: add patch view
git-mergetool: properly handle "git mergetool -- filename"
bash completion: Sync config variables with their man pages
bash completion: Sort config completion variables
Documentation: Describe git-gui Tools menu configuration options.
gitweb: cache $parent_commit info in git_blame()
Fix typo in comment in builtin-add.c
gitweb: A bit of code cleanup in git_blame()
gitweb: Move 'lineno' id from link to row element in git_blame
Fix typos in documentation
git-p4: Fix regression in p4Where method.
Define linkgit macro in [macros] section
gitweb: Fix bug in insert_file() subroutine
git-gui: Fix commit encoding handling.
git-gui: Fix handling of relative paths in blame.
gitweb: Make project specific override for 'grep' feature work
git-p4: Fix bug in p4Where method.
Report symlink failures in merge-recursive
Make chdir failures visible
Make some of fwrite/fclose/write/close failures visible
Add 'g' command to go to a hunk
Add subroutine to display one-line summary of hunks
gitweb: Fix handling of non-ASCII characters in inserted HTML files
Add a built-in alias for 'stage' to the 'add' command
Update comment on gitweb_check/get_feature
gitk: Add a menu option to start git gui
gitk: Make line origin search update the busy status
generate-cmdlist.sh: avoid selecting synopsis at wrong place
gitweb: make gitweb_check_feature a boolean wrapper
Fix t4030-diff-textconv.sh
Fix handle leak in sha1_file/unpack_objects if there were damaged object data
Retain multiple -q/-v occurrences in git pull
git-remote: add verbose mode to git remote update
gitk: Avoid handling the Return key twice in Add Branch
git-remote: match usage string with the manual pages
git-gui: Fix the search bar destruction handler.
git-gui: Implement automatic rescan after Tool execution.
git-gui: Allow Tools request arguments from the user.
git-gui: Add a Tools menu for arbitrary commands.
git-gui: Fix the after callback execution in rescan.
git-gui: Implement system-wide configuration handling.
git-gui: try to provide a window icon under X
Documentation: New GUI configuration and command-line options.
Teach/Fix pull/fetch -q/-v options
gitk: Fix commit encoding support
gitk: Fix transient windows on Win32 and MacOS
gitk: Add accelerators to frequently used menu commands
pack-objects: extend --local to mean ignore non-local loose objects too
sha1_file.c: split has_loose_object() into local and non-local counterparts
t7700: demonstrate mishandling of loose objects in an alternate ODB
packed_git: convert pack_local flag into a bitfield and add pack_keep
t7700: demonstrate mishandling of objects in packs with a .keep file
git-diff: Add --staged as a synonym for --cached.
git-gui: Request blame metadata in utf-8.
git-gui: Add the Show SSH Key item to the clone dialog.
git-gui: Fix focus transition in the blame viewer.
Update RPM spec for the new location of git-cvsserver.
gitk: Implement a user-friendly Edit View dialog
gitk: Make cherry-pick call git-citool on conflicts
gitk: Make gitk dialog windows transient
gitk: Add Return and Escape bindings to dialogs
gitweb: Fix mod_perl support.
gitweb: Add a per-repository authorization hook.
gitweb: Use single implementation of export_ok check.
Windows: Make OpenSSH properly detect tty detachment.
gitweb: embed snapshot format parameter in PATH_INFO
gitweb: retrieve snapshot format from PATH_INFO
Document that git-log takes --all-match.
gitweb: make the supported snapshot formats array global
Documentation/gitattributes: Add subsection header for each attribute
git-gui: Add a simple implementation of SSH_ASKPASS.
git-gui: Add a dialog that shows the OpenSSH public key.
Use test-chmtime -v instead of perl in t5000 to get mtime of a file
Add --verbose|-v to test-chmtime
Use git_pathdup instead of xstrdup(git_path(...))
git_pathdup: returns xstrdup-ed copy of the formatted path
Fix potentially dangerous use of git_path in ref.c
Add git_snpath: a .git path formatting routine with output buffer
Plug a memleak in builtin-revert
Fix potentially dangerous uses of mkpath and git_path
Fix potentially dangerous uses of mkpath and git_path
Fix mkpath abuse in dwim_ref and dwim_log of sha1_name.c
Add mksnpath which allows you to specify the output buffer
gitk: Allow starting gui blame for a specific line
gitweb: generate parent..current URLs
gitweb: parse parent..current syntax from PATH_INFO
gitweb: use_pathinfo filenames start with /
gitweb: generate project/action/hash URLs
gitweb: parse project/action/hash_base:filename PATH_INFO
builtin-blame: Reencode commit messages according to git-log rules.
gitk: Fix file list context menu for merge commits
gitk: Allow forcing branch creation if it already exists
workflows documentation: fix link to git-request-pull[1]
bash completion: Add 'workflows' to 'git help'
contrib: update packinfo.pl to not use dashed commands
t4018-diff-funcname: demonstrate end of line funcname matching flaw
t4018-diff-funcname: rework negated last expression test
Typo "does not exists" when git remote update remote.
gitk: Bind Key-Return to create on new branch dialog
gitk: Implement batch lookup and caching of encoding attrs
gitk: Enhance file encoding support
compat/cygwin.c - Use cygwin's stat if core.filemode == true
gitweb: refactor input parameters parse/validation
gitweb: Better processing format string in custom links in navbar
check-attr: Add --stdin option
check-attr: add an internal check_attr() function
Extend index to save more flags
print an error message for invalid path
git-gui: Fix the blame viewer destroy handler.
git-gui: Add a search command to the blame viewer.
git-gui: Fix the blame window shape.
builtin-apply: fix typo leading to stack corruption
Fix a few typos in relnotes
do not segfault if make_cache_entry failed
do not segfault if make_cache_entry failed
make prefix_path() never return NULL
Fix fetch/clone --quiet when stdout is connected
builtin-blame: Fix blame -C -C with submodules.
tests: add a testcase for "git submodule sync"
gitweb: Add path_info tests to t/t9500-gitweb-standalone-no-errors.sh
gitweb: Fix two 'uninitialized value' warnings in git_tree()
gitweb: remove PATH_INFO from $my_url and $my_uri
cygwin: Use native Win32 API for stat
mingw: move common functionality to win32.h
add have_git_dir() function
git-gui: Make Ctrl-T safe to use for conflicting files.
Clarify commit error message for unmerged files
mingw: remove use of _getdrive() from lstat/fstat
Use remove_path from dir.c instead of own implementation
Add remove_path: a function to remove as much as possible of a path
git-submodule: Fix "Unable to checkout" for the initial 'update'
Cleanup remove_path
Remove empty directories in recursive merge
gitweb: shortlog now also obeys $hash_parent
git-gui: Reenable staging unmerged files by clicking the icon.
git-gui: Support the encoding menu in gui blame.
git-gui: Optimize encoding name resolution using a lookup table.
git-gui: Allow forcing display encoding for diffs using a submenu.
git-gui: Add a menu of available encodings.
git-gui: Cleanup handling of the default encoding.
git-gui: Add more integration options to citool.
gitk: Fix a bug in collapsing deeply nested trees
git-repack uses --no-repack-object, not --no-repack-delta.
Typo "bogos" in format-patch error message.
completion: git commit should list --interactive
Update RPM spec for the new location of git-cvsserver.
git-gui: Restore ability to Stage Working Copy for conflicts.
git-gui: Fix Blame Parent & Context for working copy lines.
Use xmalloc() and friends to catch allocation failures
git-rebase--interactive: auto amend only edited commit
git-rebase-interactive: do not squash commits on abort
Correct output of git-count-objects.
git-gui: Show special diffs for complex conflict cases.
git-gui: Make F5 reselect a diff, if an untracked file is selected.
git-gui: Reimplement and enhance auto-selection of diffs.
git-gui: Support conflict states _U & UT.
git-gui: Support more merge tools.
git-gui: Don't allow staging files with conflicts.
git-gui: Support calling merge tools.
git-gui: Support resolving conflicts via the diff context menu.
gitweb: ref markers link to named shortlogs
git-gui: Fix string escaping in po2msg.sh
Add help.autocorrect to enable/disable autocorrecting
setup_git_directory(): fix move to worktree toplevel directory
update-index: fix worktree setup
Fix use of hardlinks in "make install"
git-p4: Fix checkout bug when using --import-local.
tutorial: gentler illustration of Alice/Bob workflow using gitk
read-tree: setup worktree if merge is required
grep: fix worktree setup
list_commands: only call git_exec_path if it is needed
Allow git help work without PATH set
Make main_cmds and other_cmds local to builtin-help.c
Remove useless memset of static command name lists in builtin-merge.c
Remove calculation of the longest command name from where it is not used
diff*: fix worktree setup
index-pack: setup git repository
gitk: Add menu item for calling git gui blame
gitk: Add option to specify the default commit on command line
git-submodule: add "sync" command
git-gui: Allow specifying an initial line for git gui blame.
git-gui: Better positioning in Blame Parent Commit
git-gui: Support passing blame to a parent commit.
git-gui: Support starting gitk from Gui Blame
git-submodule - Use "get_default_remote" from git-parse-remote
Respect core.autocrlf in combined diff
git-p4: Fix one-liner in p4_write_pipe function.
git-submodule: replace duplicated code with a module_list function
Extend "checkout --track" DWIM to support more cases
Completion: add missing '=' for 'diff --diff-filter'
git-submodule.sh - Remove trailing / from URL if found
git-submodule.sh - Remove trailing / from URL if found
Add hints to revert documentation about other ways to undo changes
adapt git-cvsserver manpage to dash-free syntax
configure: auto detect dynamic library path switches
git-submodule - Add 'foreach' subcommand
Make push more verbose about illegal combination of options
git-p4: chdir now properly sets PWD environment variable in msysGit
Fix t3700 on filesystems which do not support question marks in names
bash completion: Add '--merge' long option for 'git log'
bash completion: Add completion for 'git mergetool'
bash completion: 'git apply' should use 'fix' not 'strip'
git-bisect: fix wrong usage of read(1)
Fix typo in comments of longest_ancestor_length()
gitk: Allow safely calling nukefile from a run queue handler
bash completion: Add completion for 'git mv'
bash completion: Add completion for 'git ls-files'
bash completion: Add completion for 'git archive'
bash completion: More completions for 'git stash'
bash completion: Add completion for 'git revert'
bash completion: Add completion for 'git init'
bash completion: Add completion for 'git clean'
bash completion: Add completion for 'git clone'
correct access right for git-svn-dcommit test
bash completion: Add completion for 'git grep'
git-svn: Abort with an error if 'fetch' parameter is invalid.
gitk: Update swedish translation.
add --no-filters option to git hash-object
add --path option to git hash-object
use parse_options() in git hash-object
correct usage help string for git-hash-object
correct argument checking test for git hash-object
teach index_fd to work with pipes
git-gui: Update swedish translation.
diff: chapter and part in funcname for tex
Teach "git diff -p" Pascal/Delphi funcname pattern
diff: add ruby funcname pattern
bash completion: Add more long options for 'git log'
bash completion: remove unused function _git_diff_tree
gitk: Fallback to selecting the head commit upon load
gitk: Fixed automatic row selection during load
gitk: Fixed broken exception handling in diff
gitk: On Windows, use a Cygwin-specific flag for kill
gitk: Arrange to kill diff-files & diff-index on quit
gitk: Kill back-end processes on window close
Support copy and rename detection in fast-export.
Make use of stat.ctime configurable
builtin-branch: fix -v for --[no-]merged
builtin-branch: factor out merge_filter matching
builtin-branch: remove duplicated code
gitweb: More about how gitweb gets 'owner' of repository
bash completion: Add completion for 'git help'
git-gui: Preserve scroll position on reshow_diff.
git-gui: Fix the Remote menu separator.
Documentation: Improve documentation for git-imap-send(1)
imap-send.c: style fixes
git-imap-send: Support SSL
git-imap-send: Allow the program to be run from subdirectories of a git tree
bash completion: Add long options for 'git rm'
Allow pager of diff command be enabled/disabled
git-svn: fix git svn info to work without arguments
Support gitlinks in fast-import.
Teach lookup_prog not to select directories
Add a menu item to invoke full copy detection in blame.
Kill the blame back-end on window close.
Add options to control the search for copies in blame.
Fix pre-commit hooks under MinGW/MSYS
Reword "your branch has diverged..." lines to reduce line length
Fix buffer overflow in prepare_attr_stack
Fix buffer overflow in git diff
Fix buffer overflow in git-grep
t/Makefile: use specified shell when running aggregation script
Do not try to detect move/copy for entries below threshold.
Avoid rescanning unchanged entries in search for copies.
git-submodule - register submodule URL if adding in place
git-submodule - make "submodule add" more strict, and document it
git-svn: typofix
tutorial: use prompt with user names in example, to clarify who is doing what
reduce_heads(): thinkofix
Fix quadratic performance in rewrite_one.
We need to check for msys as well as Windows in add--interactive.
Fixed text file auto-detection: treat EOF character 032 at the end of file as printable
git-send-email: Fix authenticating on some servers when using TLS.
t7701-repack-unpack-unreachable.sh: check timestamp of unpacked objects
completion: add branch options --contains --merged --no-merged
git-submodule - Fix bugs in adding an existing repo as a module
install-doc-quick - use git --exec-path to find git-sh-setup
Documentation: tweak use case in "git stash save --keep-index"
gitweb: Describe projects_index format in more detail
Teach git-bundle to read revision arguments from stdin like git-rev-list.
completion.bash: add 'skip' and 'run' to git-bisect
git-clone: remove leftover debugging fprintf().
Fix grammar in git-rev-parse(1).
Move read_revisions_from_stdin from builtin-rev-list.c to revision.c
git-svn: avoid filling up the disk with temp files.
GIT-VERSION-GEN: do not fail if a 'HEAD' file exists in the working copy
shrink git-shell by avoiding redundant dependencies
test-lib.sh: show git init output when in verbose mode
update-hook-example: optionally allow non-fast-forward
Fix use of "perl -i" on Windows
fix update-hook-example to work with packed tag references
t/README: Add 'Skipping Tests' section below 'Running Tests'
Print errno upon failure to open the COMMIT_EDITMSG file
git-gui: Fix accidental staged state toggle when clicking top pixel row
gitweb: standarize HTTP status codes
completion: add --graph to log command completion
Move all dashed-form commands to libexecdir
Git.pm: add test suite
t/test-lib.sh: add test_external and test_external_without_stderr
test-lib.sh: add --long-tests option
gitweb: remove unused parse_ref method
gitweb: quote commands properly when calling the shell
Use 'trash directory' thoroughly in t/test-lib.sh
gitweb: Make it work with $GIT containing spaces
git-svn: test that extra blank lines aren't inserted in commit messages.
git-svn: don't append extra newlines at the end of commit messages.
git-submodule - Fix errors regarding resolve_relative_url
t/.gitattributes: only ignore whitespace errors in test files
Typo in RelNotes.
fix typo in tutorial
gitweb: Separate generating 'sort by' table header
gitweb: Separate filling list of projects info
Documentation/git-cat-file.txt: add missing line break
gitweb: remove git_blame and rename git_blame2 to git_blame
cat-file --batch / --batch-check: do not exit if hashes are missing
t1006-cat-file.sh: typo
Hook up the result aggregation in the test makefile.
Modify test-lib.sh to output stats to t/test-results/*
git-for-each-ref.txt: minor improvements
gitweb: Add charset info to "raw" output of 'text/plain' blobs
Fix t5516 on cygwin: it does not like double slashes at the beginning of a path
cat-file --batch: flush stdout also when objects are missing
gitweb: Fix "next" link on bottom of page
Git.pm: fix return value of config method
glossary: improve a few links
Git.pm: fix documentation of hash_object
t/test-lib.sh: resolve symlinks in working directory, for pathname comparisons
Clarify description of <repository> argument to pull/fetch for naming remotes.
gitweb: Remove gitweb/test/ directory
gitweb: only display "next" links in logs if there is a next page
git-gui: Vertically align textboxes with labels
Make git-cvsimport remove ['s from tags, as bad_ref_char doesn't allow them.
Fix t3701 if core.filemode disabled
Fix t6031 on filesystems without working exec bit
t/Makefile: "trash" directory was renamed recently
Ensure that a test is run in the trash directory
builtin-clone.c: Need to closedir() in copy_or_link_directory()
Documentation/git-describe.txt: make description more readable
Add a config option to ignore errors for git-add
Add a test for git-add --ignore-errors
Add --ignore-errors to git-add to allow it to skip files with read errors
Extend interface of add_files_to_cache to allow ignore indexing errors
Make the exit code of add_file_to_index actually useful
Improve reporting of errors in config file routines
revision.c: really honor --first-parent
git-init: autodetect core.ignorecase
builtin-gc.c: deprecate --prune, it now really has no effect
git-gc: always use -A when manually repacking
repack: modify behavior of -A option to leave unreferenced objects unpacked
git-format-patch: add --no-binary to omit binary changes in the patch.
builtin-commit.c: add -u as short name for --untracked-files
git-repack: re-enable parsing of -n command line option
alloc_ref_from_str(): factor out a common pattern of alloc_ref from string
gitk: Allow users to view diffs in external diff viewer
commit: Show committer if automatic
commit: Show author if different from committer
Preparation to call determine_author_info from prepare_to_commit
Add t7506 to test submodule related functions for git-status
t4027: test diff for submodule with empty directory
Documentation on --git-dir and --work-tree
Documentation gitk: Describe what --merge does
Use the modern syntax of git-diff-files in t2002-checkout-cache-u.sh
Fix use after free() in builtin-fetch
Use "=" instead of "==" in condition as it is more portable
Remove 'header' from --signoff option description
bash: Add completion for gitk --merge
gitweb: Use feed link according to current view
Allow cherry-pick (and revert) to add signoff line
Linked glossary from cvs-migration page
git-gc --prune is deprecated
post-receive-email: fix accidental removal of a trailing space in signature line
completion: remove use of dashed git commands
completion: allow 'git remote' subcommand completion
Spelling fixes in the gitweb documentation
Add tests for `branch --[no-]merged`
git-branch.txt: compare --contains, --merged and --no-merged
git-branch: add support for --merged and --no-merged
gitweb: Fix 'history' view for deleted files with history
builtin-apply: Show a more descriptive error on failure when opening a patch
git clean: Add test to verify directories aren't removed with a prefix
git clean: Don't automatically remove directories when run within subdirectory
git-submodule - possibly use branch name to describe a module
builtin-status: Add tests for submodule summary
builtin-status: submodule summary support
git-submodule summary: --for-status option
git-submodule: Avoid 'fatal: cannot describe' message
core-tutorial.txt: Fix showing the current behaviour.
Fix documentation syntax of optional arguments in short options.
Teach GIT-VERSION-GEN about the .git file
Teach git-submodule.sh about the .git file
Teach resolve_gitlink_ref() about the .git file
Add platform-independent .git "symlink"
Add prefix oriented completions for diff and format-patch commands.
Add interactive option in rebase command completion list.
Revert "gitweb: Add 'status_str' to parse_difftree_raw_line output"
Fix the wrong output of `git-show v1.3.0~155^2~4` in documentation.
Fix the wrong output of `git-show v1.3.0~155^2~4` in documentation.
git-gui: update russian translation
git-p4: Use P4EDITOR environment variable when set
git-p4: Unset P4DIFF environment variable when using 'p4 -du diff'
git-cvsimport: fix merging with remote parent branch
gitweb: Fix bug in href(..., -replay=>1) when using 'pathinfo' form
git-submodule summary: test
git-submodule summary: documentation
git-submodule summary: limit summary size
git-submodule summary: show commit summary
git-svn: fix find-rev error message when missing arg
git-submodule summary: code framework
[PATCH] gitk: Don't show local changes when we there is no work tree
ident.c: reword error message when the user name cannot be determined
git-clean: correct printing relative path
Make private quote_path() in wt-status.c available as quote_path_relative()
git-gui: translate the remaining messages in zh_cn.po to chinese
gitweb: Fix and simplify pickaxe search
git-submodule - Allow adding a submodule in-place
Do not use GUID on dir in git init --shared=all on FreeBSD
Make builtin-reset.c use parse_options.
log/show/whatchanged: introduce format.pretty configuration
specify explicit "--pretty=medium" with `git log/show/whatchanged`
whatchanged documentation: share description of --pretty with others
Fix test for cleanup failure in t7300 on Windows
t3903-stash.sh: Add tests for new stash commands drop and pop
git-reflog.txt: Document new commands --updateref and --rewrite
t3903-stash.sh: Add missing '&&' to body of testcase
git-submodule: Fix typo 'url' which should be '$url'
gitweb: Mark first match when searching commit messages
Documentation: Remove --{min,max}-age option from git-log(1)
cleanup: remove unused git_checkout_config
clone: support cloning full bundles
Fix builtin checkout crashing when given an invalid path
send-email: fix In-Reply-To regression
gitweb: Simplify fixed string search
gitweb: Change parse_commits signature to allow for multiple options
git-svn: Don't prompt for client cert password everytime.
git-svn: Don't prompt for client cert password everytime.
git-p4: Support usage of perforce client spec
Add '--fixed-strings' option to "git log --grep" and friends
gitweb: Better cutting matched string and its context
filter-branch documentation: non-zero exit status in command abort the filter
rev-parse: fix potential bus error with --parseopt option spec handling
git-describe: --long shows the object name even for a tagged commit
git-bundle.txt: Add different strategies to create the bundle
gitweb: Fix bugs in git_search_grep_body: it's length(), not len()
pull: pass --strategy along to to rebase
send-email: fix In-Reply-To regression
send-email: squelch warning due to comparing undefined $_ to ""
Correct git-pull documentation
gitweb: Fix bug in href(..., -replay=>1) when using 'pathinfo' form
doc: documentation update for the branch track changes
branch: optionally setup branch.*.merge from upstream local branches
Simplify setup of $GIT_DIR in git-sh-setup.sh
builtin-checkout.c: fix possible usage segfault
gitweb: Add new option -nohtml to quot_xxx subroutines
gitweb: Fix displaying unchopped argument in chop_and_escape_str
git-help--browse: improve browser support under OS X
mailinfo: feed only one line to handle_filter() for QP input
git-gui: support Git Gui.app under OS X 10.5
git-web--browse: fix misplaced quote in init_browser_path()
Avoid a useless prefix lookup in strbuf_expand()
git-web--browse: do not start the browser with nohup
Fix parsing numeric color values
Make git-remote.perl "use strict" compliant
gitweb: Add info about $projectroot and $projects_list to gitweb/README
autoconf: define NO_SYS_SELECT_H on systems without <sys/select.h>.
Makefile: customization for supporting HP-UX
pre-POSIX.1-2001 systems do not have <sys/select.h>
Make t5710 more strict when creating nested repos
Update git-completion for new 'remote rm' option
Move sha1_file_to_archive into libgit
autoconf: Add checking for unsetenv function
treat any file with NUL as binary
hg-to-git: improve popen calls
cvsimport: remove last use of repo-config from git standard tools
Remove usage of git- (dash) commands from email hook
Documentation: rename gitlink macro to linkgit
git-stash: use stdout instead of stderr for non error messages
Document git-reset defaults to HEAD if no commit is given
Allow selection of different cleanup modes for commit messages
gitweb: fix whitespace in config_to_multi (indent with tab)
gitweb: Teach "a=blob" action to be more lenient about blob/file mime type
gitweb: disambiguate heads and tags withs the same name
Fix spelling mistakes in user manual
Fix git-fast-export for zero-sized blobs
autoconf: Check asciidoc version to automatically set ASCIIDOC8
Remove repo version check from setup_git_directory
autoconf: Add test for OLD_ICONV (squelching compiler warning)
Change from using email.com to example.com as example domain, as per RFC 2606.
Do check_repository_format() early (re-fix)
Set OLD_ICONV on Cygwin.
Simplify crud() in ident.c
contrib: Make remotes2config.sh script more robust
install-sh from automake does not like -m without delimiting space
Make git status usage say git status instead of git commit
git-gui: install-sh from automake does not like -m755
gitweb: Update and improve gitweb/README file
git-stash: Display help message if git-stash is run with wrong sub-commands
gitweb: the commitdiff is very commonly used, it's needed on search page, too
Do check_repository_format() early
Mention that git-rm can be an appropriate resolution as well as git-add.
Add config_int() method to the Git perl module
Error out when user doesn't have access permission to the repository
Do not generate full commit log message if it is not going to be used
Print the real filename that we failed to open.
git-merge-ours: make it a builtin.
git-p4: Fix typo in --detect-labels
autoconf: Add tests for memmem, strtoumax and mkdtemp functions
gitweb: Put project README in div.readme, fix its padding
gitweb: Style all tables using CSS
Make builtin-tag.c use parse_options.
Teach git clean to use setup_standard_excludes()
Make git-clean a builtin
Fix dependencies of parse-options test program
Update the tracking references only if they were succesfully updated on remote
Add a test checking if send-pack updated local tracking branches correctly
git-checkout: Test for relative path use.
git-checkout: Support relative paths containing "..".
for-each-ref: fix setup of option-parsing for --sort
stop t1400 hiding errors in tests
Improve accuracy of check for presence of deflateBound.
Remove a couple of duplicated include
Rearrange git-format-patch synopsis to improve clarity.
Add more tests for git-clean
Add missing inside_work_tree setting in setup_git_directory_gently
gitweb: Use config file for repository description and URLs
gitweb: Read repo config using 'git config -z -l'
gitweb: Add tests for overriding gitweb config with repo config
transport.c: squelch a gcc 4.0.1 complaint about an uninitialized variable
git-p4: Detect changes to executable bit and include them in p4 submit.
git-p4: Add a helper function to parse the full git diff-tree output.
Make mailsplit and mailinfo strip whitespace from the start of the input
gitweb: Use href(-replay=>1, action=>...) to generate alternate views
gitweb: Use href(-replay=>1, page=>...) to generate pagination links
gitweb: Easier adding/changing parameters to current URL
gitweb: Remove CGI::Carp::set_programname() call from t9500 gitweb test
gitweb: Add 'status_str' to parse_difftree_raw_line output
gitweb: Always set 'from_file' and 'to_file' in parse_difftree_raw_line
Do no colorify test output if stdout is not a terminal
gitweb: Update config file example for snapshot feature in gitweb/INSTALL
Updated russian translation of git-gui
Make merge-recursive honor diff.renamelimit
gitweb: Fix and simplify "split patch" detection
git-sh-setup.sh: use "git rev-parse --show-cdup" to check for SUBDIRECTORY_OK
Rework make_usage to print the usage message immediately
Teach git-pull about --[no-]ff, --no-squash and --commit
Remove outdated references to cogito in documentation
Fix generation of perl/perl.mak
gitweb: Use chop_and_escape_str in more places.
gitweb: Refactor abbreviation-with-title-attribute code.
More updates and corrections to the russian translation of git-gui
gitweb: Provide title attributes for abbreviated author names.
Updated Russian translation.
git-p4 support for perforce renames.
fixing output of non-fast-forward output of post-receive-email
Add a --dry-run option to git-push.
Add a --dry-run option to git-send-pack.
Fix a crash in ls-remote when refspec expands into nothing
fix t5403-post-checkout-hook.sh: built-in test in dash does not have "=="
Don't checkout the full tree if avoidable
Add a test script for for-each-ref, including test of date formatting
the ar tool is called gar on some systems
post-receive-hook: Remove the From field from the generated email header so that the pusher's name is used
Make for-each-ref's grab_date() support per-atom formatting
Make for-each-ref allow atom names like "<name>:<something>"
parse_date_format(): convert a format name to an enum date_mode
quiltimport: Skip non-existent patches
Move make_cache_entry() from merge-recursive.c into read-cache.c
Fix spelling of overridden in documentation
Make merge-recursive honor diff.renamelimit
gitweb: No difftree output for trivial merge
gitweb: Remove parse_from_to_diffinfo code from git_patchset_body
git-merge: add --ff and --no-ff options
git-merge: add support for --commit and --no-squash
git-merge: add support for branch.<name>.mergeoptions
git-merge: refactor option parsing
git-merge: fix faulty SQUASH_MSG
Add test-script for git-merge porcelain
git-gui: Avoid using bold text in entire gui for some fonts
preserve executable bits in zip archives
contrib/fast-import: add simple shell example
Remove duplicate note about removing commits with git-filter-branch
Make "git reset" a builtin.
Move make_cache_entry() from merge-recursive.c into read-cache.c
Add tests for documented features of "git reset".
git-tag -s must fail if gpg cannot sign the tag.
git-svn: always use --first-parent
git-svn: add support for --first-parent
Function for updating refs.
git-gui: Added initial version of po/glossary/zh_cn.po
git-gui: initial version of russian translation
Italian translation of git-gui
Initial Chinese translation for git-gui
git-tag: Fix -l option to use better shell style globs.
git-filter-branch: document --original option
git-filter-branch: more detailed USAGE
Temporary fix for stack smashing in mailinfo
gitweb: Fix escaping HTML of project owner in 'projects_list' and 'summary' views
Fix breakage in git-rev-list.txt
Fix git-remote for ActiveState Perl
Avoid using va_copy in fast-import: it seems to be unportable.
Fix whitespace in "Format of STDIN stream" of fast-import
git-submodule: re-enable 'status' as the default subcommand
git-add -u paths... now works from subdirectory
Add --log-size to git log to print message size
Allow git-svnimport to take "" as the trunk directory.
git-p4: Fix the sorting of changelists when cloning a Perforce repository.
[PATCH] gitk: Show an error and exit if no .git could be found
[PATCH] gitk: Continue and show error message in new repos
Fix filehandle leak in "git branch -D"
git-stash documentation: add missing backtick
git-stash documentation: stash numbering starts at zero, not one
gitweb: Fix handling of $file_name in feed generation
Fix documentation for core.gitproxy to reflect code
Try to be consistent with capitalization in the documentation
Hack git-add--interactive to make it work with ActiveState Perl
Make verse of git-config manpage more readable
Add a test for git-config --file
Add an option to specify a file to config builtin
make the name of the library directory a config option
add option to find zlib in custom path
gitweb: Allow for multivalued parameters passed to href subroutine
gitweb: Simplify 'opt' parameter validation, add "no merges" feeds
gitweb: Show submodule entries in the 'tree' view
use lockfile.c routines in git_commit_set_multivar()
fully resolve symlinks when creating lockfiles
Make verify-tag a builtin.
git-write-tree should not crash if prefix does not exist
gitweb: More detailed error messages for snapshot format
gitweb: Fix support for legacy gitweb config for snapshots
Avoid to duplicate commit message when is not encoded
gitweb: snapshot cleanups & support for offering multiple formats
builtin-tag.c: Fix two memory leaks and minor notation changes.
Make git tag a builtin.
gitweb cleanup: Move @diff_opts declaration earlier
Rename read_pipe() with read_fd() and make its buffer nul-terminated.
Fix git-branch documentation when using remote refs
Fix git-rebase -i to allow squashing of fast-forwardable commits
Document git commit --untracked-files and --verbose
Document long options '--message=<msg>' and '--no-commit'
Update git-merge documentation.
Documentation for git-log --follow
Function stripspace now gets a buffer instead file descriptors.
t7004: Add tests for the git tag -n option.
t0030: Add tests with consecutive text lines and others with spaces added.
t0030: Remove repeated instructions and add missing &&
Makefile: rebuild git.o on version change, clean up git$X flags
t7004: Skip tests for signed tags in an old version of gpg.
user-manual: fix directory name in git-archive example
user-manual: grammar and style fixes
gitweb: make "No commits" in project list gray, not bold green
gitweb: make search form generate pathinfo-style URLs
git-submodule(1): update description and key names
fix remote.origin.url in tutorial.txt
Add -v|--verbose to git remote to show remote url
Fix t5516 to create test repo without hooks
Make git-prune submodule aware (and fix a SEGFAULT in the process)
Avoid perl in t1300-repo-config
Add test-script for git-tag
Add test script for git-stripspace.
Fix git-stripspace to process correctly long lines and spaces.
git.spec: RPM failed, looking for wrong files.
cvsserver: Actually implement --export-all
Document git log --full-diff
Document git log --abbrev-commit, as a kind of pretty option
Use tabs for indenting definition list for options in git-log.txt
Document git rev-list --timestamp
Document git reflog --stale-fix
Document git rev-parse --is-inside-git-dir
Document git read-tree --trivial
Document git rev-list --full-history
git-p4 fails when cloning a p4 depo.
Do not use h_errno after connect(2): the function does not set it
Add a local implementation of hstrerror for the system which do not have it
gitmodules(5): remove leading period from synopsis
Generated spec file to be ignored is named git.spec and not git-core.spec
gitview: run blame with -C -C
gitview: Fix the blame interface.
Add gitmodules(5)
git-submodule: give submodules proper names
Rename sections from "module" to "submodule" in .gitmodules
git-submodule: remember to checkout after clone
t7400: barf if git-submodule removes or replaces a file
gitweb: '--cc' for merges in 'commitdiff' view
gitweb: Add links to blobdiffs in from-file/to-file header for merges
gitweb: Create special from-file/to-file header for combined diff
gitweb: Split git_patchset_body into separate subroutines
gitweb: Improve "next" link in commitdiff view
gitweb: Provide links to commitdiff to each parent in 'commitdiff' view
[PATCH] git-mergetool: Allow gvimdiff to be used as a mergetool
Make command description imperative statement, not third-person present.
Fix push with refspecs containing wildcards
Fix clone to setup the origin if its name ends with .git
git-submodule: clone during update, not during init
git-submodule: move cloning into a separate function
Add basic test-script for git-submodule
Use =20 when rfc2047 encoding spaces.
Make the installation target of git-gui a little less chatty
Add test case for $Id$ expanded in the repository
Makefile: Remove git-fsck and git-verify-pack from PROGRAMS
Add git-submodule command
Fix mishandling of $Id$ expanded in the repository copy in convert.c
Documentation: Add definition of "evil merge" to GIT Glossary
Replace the last 'dircache's by 'index'
Documentation: Clean up links in GIT Glossary
Add a configuration option to control diffstat after merge
Add another verbosity level to git-fetch
Verbose connect messages to show the IP addresses used
Ensure git-repack -a -d --max-pack-size=N deletes correct packs
fix memory leak in parse_object when check_sha1_signature fails
Allow environment variables to be unset in the processes started by run_command
Add ability to specify environment extension to run_command
Add run_command_v_opt_cd: chdir into a directory before exec
Fix the progress code to output LF only when it is really needed
pack-objects: clarification & option checks for --max-pack-size
git-repack --max-pack-size: add option parsing to enable feature
git-repack --max-pack-size: split packs as asked by write_{object,one}()
git-repack --max-pack-size: write_{object,one}() respect pack limit
git-repack --max-pack-size: new file statics and code restructuring
Alter sha1close() 3rd argument to request flush only
Add an option to git-ls-tree to display also the size of blob
Teach 'git-apply --whitespace=strip' to remove empty lines at the end of file
gitweb: Add test t9500 for gitweb (as standalone script)
gitweb: Fix "Use of uninitialized value" warning in git_feed
Fix crlf attribute handling to match documentation
gitweb: Fix error in git_patchset_body for deletion in merge commit
gitweb: Empty patch for merge means trivial merge, not no differences
gitweb: Separate search regexp from search text
gitweb: Do not use absolute font sizes
Documentation/branch: fix small typo in -D example
Use $Id$ as the ident attribute keyword rather than $ident$ to be consistent with other VCSs
gitweb: Add a few comments about %feature hash
Documentation: Split description of pretty formats of commit log
gitweb: Fix "Use of unitialized value" warnings in empty repository
gitweb: Check if requested object exists
RPM spec: include files in technical/ to package.
Allow fetching references from any namespace
git-archive: don't die when repository uses subprojects
gitweb: Test if $from_id and $to_id are defined before comparison
Fix an unmatched comment end in arm/sha1_arm.S
Custom compression levels for objects and packs
Added new git-gui library files to rpm spec
Add howto files to rpm packages.
gitweb: Show combined diff for merge commits in 'commit' view
gitweb: Show combined diff for merge commits in 'commitdiff' view
gitweb: Make it possible to use pre-parsed info in git_difftree_body
gitweb: Add combined diff support to git_patchset_body
gitweb: Add combined diff support to git_difftree_body
gitweb: Add parsing of raw combined diff format to parse_difftree_raw_line
Use GIT_OBJECT_DIR for temporary files of pack-objects
Handle return code of parse_commit in revision machinery
Small correction in reading of commit headers
diff format documentation: describe raw combined diff format
Create pack-write.c for common pack writing code
Include mailmap.h in mailmap.c to catch mailmap interface changes
Remove pointless calls to access(2) when checking for .mailmap
Fix read_mailmap to handle a caller uninterested in repo abbreviation
Use strlcpy instead of strncpy in mailmap.c
post-receive-email example hook: sed command for getting description was wrong
post-receive-email example hook: detect rewind-only updates and output sensible message
post-receive-email example hook: fastforward should have been fast_forward
Ignore merged status of the file-level merge
Add a test for merging changed and rename-changed branches
Avoid excessive rewrites in merge-recursive
Fix handle leak in write_tree
Fix crash in t0020 (crlf conversion)
Fix a typo in crlf conversion code
Simplify calling of CR/LF conversion routines
gitview: annotation support
Tests for core subproject support
Fix overwriting of files when applying contextually independent diffs
Use const qualifier for 'sha1' parameter in delete_ref function
Fix permissions on test scripts
Fix t4201: accidental arithmetic expansion
Document -g (--walk-reflogs) option of git-log
Use rev-list --reverse in git-rebase.sh
cvsexportcommit -p : fix the usage of git-apply -C.
Make builtin-branch.c handle the git config file
rename_ref(): only print a warning when config-file update fails
Fix passing of TCLTK_PATH to git-gui
Show binary file size change in diff --stat
gitweb: Fix bug in "blobdiff" view for split (e.g. file to symlink) patches
gitweb: Quote hash keys, and do not use barewords keys
gitweb: Whitespace cleanup - tabs are for indent, spaces are for align (3)
Documentation: A few minor fixes to Git User's Manual
Keep rename/rename conflicts of intermediate merges while doing recursive merge
Reimplement emailing part of hooks--update in contrib/hooks/post-receive-email
gitweb: Support comparing blobs (files) with different names
gitweb: Cleanup and uniquify die_error calls
gitweb: Add example of config file and how to generate projects list to gitweb/INSTALL
Use diff* with --exit-code in git-am, git-rebase and git-merge-ours
Document --quiet option to git-diff
update-hook: remove e-mail sending hook.
gitweb: Add some installation notes in gitweb/INSTALL
gitweb: Fix not marking signoff lines in "log" view
gitweb: Don't escape attributes in CGI.pm HTML methods
gitweb: Fix "next" link in commit view
update-hook: abort early if the project description is unset
git-fetch: Fix single_force in append_fetch_head
git-merge: finish when git-read-tree fails
Allow git-diff exit with codes similar to diff(1)
update-hook: fix incorrect use of git-describe and sed for finding previous tag
t/t5515-fetch-merge-logic.sh: Add two more tests
gitweb: Don't escape attributes in CGI.pm HTML methods
Allow "make -w" generate its usual output
Support of "make -s": do not output anything of the build itself
More build output cleaning up
git-gui: Support of "make -s" in: do not output anything of the build itself
t/t5515-fetch-merge-logic.sh: Added tests for the merge login in git-fetch
Sample update hook: typofix and modernization to use "git log"
fix various doc typos
builtin-fmt-merge-msg: fix bugs in --file option
blameview: Fix the browse behavior in blameview
git-send-email: abort/usage on bad option
Fix minor typos/grammar in user-manual.txt
cvsserver: Make always-binary mode a config file option
cvsserver: Remove trailing "\n" from commithash in checkin function
Documentation: document remote.<name>.tagopt
core.legacyheaders: Use the description used in RelNotes-1.5.0
Fix 'git commit -a' in a newly initialized repository
disable t4016-diff-quote.sh on some filesystems
Documentation/i18n.txt: it is i18n.commitencoding not core.commitencoding
Read the config in rev-list
New autoconf test for iconv
The "table-of-contents" in the update hook script should match the body
Have git-cvsserver call hooks/update before really altering the ref
Only show log entries for new revisions in hooks--update
Fix potential command line overflow in hooks--update
git-gui: fix typo in GIT-VERSION-GEN, "/dev/null" not "/devnull"
blameview: Move the commit info to a pane below the blame window.
git-blame: Change installation instructions
git-blame: Add Emacs Lisp file headers and GNU GPL boilerplate
Avoid ActiveState Perl IO in t800[12]
blameview: Support browsable functionality to blameview.
git-for-each-ref doesn't return "the bit after $GIT_DIR/refs"
doc: hooks.txt said post-commit default sends an email, it doesn't
Fix some documentation typos and grammar
Update git-cat-file documentation
Fix git-update-index to work with relative pathnames.
blameview: Use git-cat-file to read the file content.
git-fetch: Allow fetching the remote HEAD
Heavily expanded update hook to send more useful emails than the old hook
UNIX reference time of 1970-01-01 00:00 is UTC timezone, not local time zone
Allow the tag signing key to be specified in the config file
If abbrev is set to zero in git-describe, don't add the unique suffix
New files in git weren't being downloaded during CVS update
Allow default core.logallrefupdates to be overridden with template's config
Documentation/config.txt: Correct info about subsection name
t/t1300-repo-config.sh: value continued on next line
Documentation/config.txt: Document config file syntax better
Cleanup uninitialized value in chomp
Force Activestate Perl to tie git command pipe handle to a handle class
Insert ACTIVESTATE_STRING in Git.pm
tutorial: Use only separate layout
git-remote: no longer silent on unknown commands.
Speed-up recursive by flushing index only once for all entries
gitweb: Fix git_patchset_body not closing <div class="patch">
git-branch: show detached HEAD
gitweb: Remove superfluous "|" in "commit" view
gitweb: Fix split patches output (e.g. file to symlink)
Revert "gitweb: There can be empty patches (in git_patchset_body)"
gitweb: Fix errors in git_patchset_body for empty patches
gitweb: Fix error in "rename to"/"copy to" git diff header output
gitweb: Fix error in git_patchest_body for file creation/deletion patch
instaweb: Nicer error message when the http daemon isn't found
gitweb: Fix "Use of uninitialized value" warning in git_tags_body
git-tag: add flag to verify a tag
Refactor print-functions in builtin-branch
gitweb: There can be empty patches (in git_patchset_body)
gitweb: Fix bug in git_difftree_body (was '!=' instead of 'ne')
Documentation/tutorial: misc updates
Skip excessive blank lines before commit body
gitweb: Fix error in git_project_index subroutine
Add info about new test families (8 and 9) to t/README
gitweb: Precompile CGI routines for mod_perl
gitweb: Add mod_perl version string to "generator" meta header
git-send-email: default value for "From:" field.
hooks/commit-msg: add example to add Signed-off-by line to message
Documentation/git-branch: new -r to delete remote-tracking branches.
git-branch -d: do not stop at the first failure.
Add config example with respect to branch
Documentation: new option -P for git-svnimport
gitweb: Add "next" link to commit view
gitweb: Add title attribute to ref marker with full ref name
gitweb: Do not show difftree for merges in "commit" view
git-clone documentation
git-status always says what branch it's on
Allow subcommand.color and color.subcommand color configuration
Clarify fetch error for missing objects.
Colourise git-branch output
gitweb: SHA-1 in commit log message links to "object" view
gitweb: Hyperlink target of symbolic link in "tree" view (if possible)
gitweb: Add generic git_object subroutine to display object of any type
gitweb: Show target of symbolic link in "tree" view
gitweb: Don't use Content-Encoding: header in git_snapshot
Explicitly add the default "git pull" behaviour to .git/config on clone
gitweb: Allow PNG, GIF, JPEG images to be displayed in "blob" view
git-branch: let caller specify logmsg
rename_ref: use lstat(2) when testing for symlink
git-branch: add options and tests for branch renaming
Document git-diff whitespace flags -b and -w
git-clone: Rename --use-immingled-remote option to --no-separate-remote
gitweb: Fix Atom feed <logo>: it is $logo, not $logo_url
Make perl/ build procedure ActiveState friendly.
De-emphasise the symbolic link documentation.
Document git-repo-config --bool/--int options.
git-blame: fix rev parameter handling.
Use .git/config for storing "origin" shortcut repository
gitweb: Make project description in projects list link to summary view
gitweb: Use author_epoch for pubdate in gitweb feeds
gitweb: Add author and contributor email to Atom feed
gitweb: Add author and committer email extraction to parse_commit
gitweb: Use git-show-ref instead of git-peek-remote
gitweb: Do not use esc_html in esc_path
Add -v and --abbrev options to git-branch
gitweb: Replace SPC with &nbsp; also in tag comment
Increase length of function name buffer
Add support to git-branch to show local and remote branches
Improve git-prune -n output
Doc: Make comment about merging in tutorial.txt more clear
gitweb: Finish restoring "blob" links in git_difftree_body
gitweb: Refactor feed generation, make output prettier, add Atom feed
gitweb: Add an option to href() to return full URL
gitweb: New improved formatting of chunk header in diff
gitweb: Default to $hash_base or HEAD for $hash in "commit" and "commitdiff"
gitweb: Buffer diff header to deal with split patches + git_patchset_body refactoring
gitweb: Protect against possible warning in git_commitdiff
Teach SubmittingPatches about git-commit -s
gitweb: New improved patchset view
gitweb: Use character or octal escape codes (and add span.cntrl) in esc_path
gitweb: Better git-unquoting and gitweb-quoting of pathnames
Documentation: Transplanting branch with git-rebase --onto
merge-recursive implicitely depends on trust_executable_bit
gitweb: Remove extra "/" in path names for git_get_project_list
gitweb: Better support for non-CSS aware web browsers
gitweb: Output also empty patches in "commitdiff" view
gitweb: Use git-for-each-ref to generate list of heads and/or tags
git-clone documentation didn't mention --origin as equivalent of -o
Minor grammar fixes for git-diff-index.txt
Remove uneccessarily similar printf() from print_ref_list() in builtin-branch
gitweb: Use 's' regexp modifier to secure against filenames with LF
gitweb: Secure against commit-ish/tree-ish with the same name as path
gitweb: Add "next" link to commitdiff view
gitweb: Move git_get_last_activity subroutine earlier
Documentation: Update information about <format> in git-for-each-ref
gitweb: Check git base URLs before generating URL from it
Fix show-ref usagestring
diff-format.txt: Correct information about pathnames quoting in patch format
Make filenames line up in git-status output
gitweb: Use --no-commit-id in git_commit and git_commitdiff
diff-format.txt: Combined diff format documentation supplement
git-fetch.sh printed protocol fix
gitweb: Print commit message without title in commitdiff only if there is any
gitweb: Filter out commit ID from @difftree in git_commit and git_commitdiff
gitweb: Get rid of git_print_simplified_log
Make git-branch a builtin
Documentation for the [remote] config
gitweb: Add '..' (up directory) to tree view if applicable
gitweb: Improve git_print_page_path
gitweb: Do not esc_html $basedir argument to git_print_tree_entry
gitweb: Whitespace cleanup - tabs are for indent, spaces are for align (2)
Fix usagestring for git-branch
Fix typo in show-index.c
Add revspec documentation for ':path', ':[0-3]:path' and git-describe
Reject hexstring longer than 40-bytes in get_short_sha1()
gitweb: Cleanup Git logo and Git logo target generation
Add git-upload-archive to the main git man page
merge and resolve: Output short hashes and .. in "Updating ..."
fetch: Misc output cleanup
fetch: Reset remote refs list each time fetch_main is called
gitweb: Quote filename in HTTP Content-Disposition: header
gitweb: Add git_url subroutine, and use it to quote full URLs
gitweb: Split validate_input into validate_pathname and validate_refname
gitweb: Use "return" instead of "return undef" for some subs
gitweb: Strip trailing slashes from $path in git_get_hash_by_path
git-archive: update documentation
Add test for the default merges in fetch.
fetch: get the remote branches to merge from the branch properties
Fetch: default remote repository from branch properties
gitweb: Make git_get_hash_by_path check type if provided
gitweb: Fix thinko in git_tags and git_heads
gitweb: Make git_get_refs_list do work of git_get_references
gitweb: Always use git-peek-remote in git_get_references
gitweb: Require project for almost all actions
gitweb: Even more support for PATH_INFO based URLs
gitweb: Fix mimetype_guess_file for files with multiple extensions
Fix duplicate xmalloc in builtin-add
upload-archive: monitor child communication even more carefully.
gitweb: Add link to "project_index" view to "project_list" page
gitweb: Allow for href() to be used for links without project param
Fix duplicate xmalloc in builtin-add
gitweb: Add git_project_index for generating index.aux
gitweb: Do not parse refs by hand, use git-peek-remote instead
gitweb: Use File::Find::find in git_get_projects_list
Test return value of finish_connect()
connect.c: finish_connect(): allow null pid parameter
gitweb: Paginate history output
gitweb: Make pickaxe search a feature
Add git-upload-archive
git-archive: wire up ZIP format.
git-archive: wire up TAR format.
Add git-archive
autoconf: Add config.cache to .gitignore
autoconf: Add support for setting NO_ICONV and ICONVDIR
autoconf: Set NO_ICONV if iconv is found neither in libc, nor in libiconv
autoconf: Fix copy'n'paste error
autoconf: Quote AC_CACHE_CHECK arguments
autoconf: Check for subprocess.py
autoconf: Add -liconv to LIBS when NEEDS_LIBICONV
gitweb: Divide page path into directories -- path's "breadcrumbs"
gitweb: Correct typo: '==' instead of 'eq' in git_difftree_body
gitweb: Add GIT favicon, assuming image/png type
gitweb: Change the name of diff to parent link in "commit" view to "diff
gitweb: Fix git_blame
gitweb: Extend parse_difftree_raw_line to save commit info
gitweb: Separate printing of git_tree row into git_print_tree_entry
gitweb: Move git-ls-tree output parsing to parse_ls_tree_line
log-tree.c: cleanup a bit append_signoff()
gitweb: Add local time and timezone to git_print_authorship
gitweb: Add diff tree, with links to patches, to commitdiff view
gitweb: git_print_log: signoff line is non-empty line
gitweb: Add author information to commitdiff view
gitweb: Do not remove signoff lines in git_print_simplified_log
gitweb: Make git_print_log generic; git_print_simplified_log uses it
gitweb: Use @diff_opts, default ('M'), as git-diff and git-diff-tree paramete
gitweb: Remove git_to_hash function
gitweb: Remove unused git_get_{preceding,following}_references
gitweb: Fix typo in git_patchset_body
gitweb: Fix typo in git_difftree_body
gitweb: blobs defined by non-textual hash ids can be cached
gitweb: Improve comments about gitweb features configuration
gitweb: Remove workaround for git-diff bug fixed in f82cd3c
gitweb: git_annotate didn't expect negative numeric timezone
gitweb: Remove creating directory for temporary files
gitweb: Remove git_diff_print subroutine
gitweb: git_blobdiff_plain is git_blobdiff('plain')
gitweb: Use git-diff-tree or git-diff patch output for blobdiff
gitweb: Change here-doc back for style consistency in git_blobdiff
gitweb: Always display link to blobdiff_plain in git_blobdiff
gitweb: Add invisible hyperlink to from-file/to-file diff header
gitweb: Parse two-line from-file/to-file diff header in git_patchset_body
gitweb: Allow for pre-parsed difftree info in git_patchset_body
gitweb: Add support for hash_parent_base parameter for blobdiffs
gitweb: Use git_get_name_rev_tags for commitdiff_plain X-Git-Tag: header
gitweb: Add git_get_rev_name_tags function
gitweb: Faster return from git_get_preceding_references if possible
gitweb: Add git_get_{following,preceding}_references functions
gitweb: Streamify patch output in git_commitdiff
gitweb: Remove invalid comment in format_diff_line
gitweb: Show information about incomplete lines in commitdiff
gitweb: Use git-diff-tree patch output for commitdiff
gitweb: Sort CGI parameters returned by href()
gitweb: Drop the href() params which keys are not in %mapping
gitweb: Use here-doc
gitweb: Route rest of action subroutines through %actions
gitweb: Use underscore instead of hyphen to separate words in HTTP headers names
gitweb: Whitespace cleanup: realign, reindent
gitweb: Replace some presentational HTML by CSS
gitweb: bugfix: a.list formatting regression
gitweb: Use parse_difftree_raw_line in git_difftree_body
gitweb: Added parse_difftree_raw_line function for later use
gitweb: Make blame and snapshot a feature.
gitweb: fix snapshot support
gitweb: Support for snapshot
gitweb: Refactor printing commit message
gitweb: Uniquify version info output, add meta generator in page header
gitweb: Add support for per project git URLs
gitweb: Show project's git URL on summary page
gitweb: Separate printing difftree in git_commit into git_difftree_body
gitweb: True fix: Support for the standard mime.types map in gitweb
gitweb: Skip comments in mime.types like file
gitweb: Change appereance of marker of refs pointing to given object
gitweb: Separate finding project owner into git_get_project_owner
gitweb: Separate main part of git_history into git_history_body
gitweb: Refactor printing shortened title in git_shortlog_body and git_tags_body
gitweb: Separate ref parsing in git_get_refs_list into parse_ref
gitweb: Great subroutines renaming
Add a newline before appending "Signed-off-by: " line
gitweb: Whitespace cleanup - tabs are for indent, spaces are for align
autoconf: Add support for setting CURLDIR, OPENSSLDIR, EXPATDIR
autoconf: It is --without-python, not --no-python
autoconf: Move variables which we always set to config.mak.in
autoconf: Improvements in NO_PYTHON/PYTHON_PATH handling
autoconf: Error out on --without-shell and --without-perl
autoconf: Add configure target to main Makefile
gitweb: Remove unused variables in git_shortlog_body and git_heads
autoconf: Unset NO_STH and NEED_STH when it is detected not needed
gitweb: Skip nonmatching lines in difftree output, consistently
gitweb: fix commitdiff for root commits
gitweb: Refactor untabifying - converting tabs to spaces
gitweb: Inline $rss_link
gitweb: PATH_INFO=/ means no project
gitweb: No error messages with unescaped/unprotected user input
gitweb: No periods for error messages
gitweb: Cleanup and uniquify error messages
gitweb: Don't undefine query parameter related variables before die_error
gitweb: Use undef for die_error to use default first (status) parameter value
gitweb: die_error first (optional) parameter is HTTP status
gitweb: Separate input validation and dispatch, add comment about opml action
autoconf: Set NEEDS_LIBICONV unconditionally if there is no iconv in libc
Copy description of new build configuration variables to configure.ac
autoconf: Typo cleanup, reordering etc.
autoconf: Check for ll hh j z t size specifiers introduced by C99
autoconf: Add support for setting PYTHON_PATH or NO_PYTHON
autoconf: Move site configuration section earlier in configure.ac
autoconf: Add support for setting SHELL_PATH and PERL_PATH
gitweb: Refactoring git_project_list
gitweb: Reordering code and dividing it into categories
gitweb: Remove characters entities entirely when shortening string -- correction
gitweb: do not quote path for list version of open "-|"
gitweb: Refactor generation of shortlog, tags and heads body
gitweb: Ref refactoring - use git_get_referencing for marking tagged/head commits
gitweb: Remove characters entities entirely when shortening string
gitweb: Headers refactoring - use git_header_div for header divs
gitweb: Remove $project from git_get_paging_nav arguments
gitweb: Pager refactoring - use git_get_paging_nav for pagination
gitweb: Add "\n" after <br/> in git_page_nav
gitweb: Show project descriptions with utf-8 characters in project list correctly
gitweb: Replace form-feed character by ^L
gitweb: Navbar refactoring - use git_page_nav to generate navigation bar
gitweb: Add git_page_nav for later use
gitweb: Cleanup - chomp @lines in consistent style
gitweb: Cleanup - chomp $line in consistent style
gitweb: More explicit error messages for open "-|"
gitweb: simplify git_get_hash_by_path
gitweb: Use list for of open for running git commands, thorougly.
gitweb: whitespace cleanup
Defaulting fetch to origin when set in the repo-config
Do not use perl in git-commit.sh
diff: Support 256 colors
diff: Support both attributes and colors
Display help for Git mode after pressing `h' or `?' in *git-status*
Wrap long lines in docstrings in contrib/emacs/git.el
Mention the [user@] part in documentation of ssh:// urls.
Additional merge-base tests (revised)
configure.ac vertical whitespace usage cleanup
autoconf: Checks for some programs
autoconf: Checks for libraries
autoconf: Checks for some library functions.
autoconf: Checks for typedefs, structures, and compiler characteristics.
autoconf: Preparing the way for autodetection
Copy description of build configuration variables to configure.ac
GIT_TRACE: fix a mixed declarations and code warning
Teach make clean about configure and autoconf
send-email: format 2822 datestring ourselves.
Teach rev-parse the ... syntax.
autoconf: Use autoconf to write installation directories to config.mak.autogen
Remove awkward compatibility warts
--name-only, --name-status, --check and -s are mutually exclusive
Rename man1 and man7 variables to man1dir and man7dir
Allow INSTALL, bindir, mandir to be set in main Makefile
Make some strings const
Fix diff-tree -s
log --raw: Don't descend into subdirectories by default
diff-tree: Use ---\n as a message separator
Print empty line between raw, stat, summary and patch
whatchanged: Default to DIFF_FORMAT_RAW
Don't xcalloc() struct diffstat_t
Add msg_sep to diff_options
DIFF_FORMAT_RAW is not default anymore
Set default diff output format after parsing command line
Make --raw option available for all diff commands
Merge with_raw, with_stat and summary variables to output_format
Clean up diff.c
git-merge: Don't use -p when outputting summary
gitweb: whitespace cleanup around '='
gitweb: Use $hash_base as $search_hash if possible
Pass -DDEFAULT_GIT_TEMPLATE_DIR only where actually used.
gitweb: Make use of $PATH_INFO for project parameter
Move $gitbin earlier in gitweb.cgi
Add git version to gitweb output
gitweb: whitespace cleanup
gitweb: style done with stylesheet
gitweb: A couple of page title tweaking
Fix: Support for the standard mime.types map in gitweb
gitweb: add type="text/css" to stylesheet link
Make CSS file gitweb/gitweb.css more readable
Fix gitweb stylesheet
gitweb: text files for 'blob_plain' action without charset by default
gitweb: safely output binary files for 'blob_plain' action
Move gitweb style to gitweb.css
auto-detect changed prefix and/or changed build flags
Update gitweb README: gitweb is now included with git
gitview: Add some useful keybindings.
gitview: Move the console error messages to message dialog
gitview: Add key binding for F5.
[PATCH] gitk: Replace "git-" commands with "git "
Builtin git-cat-file
Add a test-case for git-apply trying to add an ending line
Problem: 'trap...exit' causes error message when /bin/sh is ash.
NO_INET_NTOP and compat/inet_ntop.c for some systems (e.g. old Cygwin).
Document that "git add" only adds non-ignored files.
Builtin git-init-db
read-cache.c: use xcalloc() not calloc()
make update-index --chmod work with multiple files and --stdin
Reintroduce svn pools to solve the memory leak.
Makefile fixups.
Add a Documentation/git-tools.txt
workaround fat/ntfs deficiencies for t3600-rm.sh (git-rm)
gitview: pass the missing argument _show_clicked_cb.
gitview: Use horizontal scroll bar in the tree view
gitview: Set the default width of graph cell
gitview: Some window layout changes.
gitview: Remove trailing white space
gitview: Fix the encoding related bug
Use setenv(), fix warnings
gitview: Fix the graph display .
gitview: Code cleanup
gitview: Bump the rev
gitview: Fix DeprecationWarning
gitview: Display the lines joining commit nodes clearly.
PATCH: simplify calls to git programs in git-fmt-merge-msg
fix t5600-clone-fail-cleanup.sh on windows
gitview: Use monospace font to draw the branch and tag name
gitview: Read tag and branch information using git ls-remote
gitview: typofix
Add a README for gitview
Add contrib/gitview from Aneesh.
avoid echo -e, there are systems where it does not work
fix "test: 2: unexpected operator" on bsd
Add freebsd support in Makefile
use GIT_DIR instead of /var/tmp
trivial: check, if t/trash directory was successfully created
trivial: .gitignore precompiled python modules
trivial: use git-repo-config to detect how to run tests in the test repository
trivial: use git-repo-config to detect if the test can be run on the repository
trivial: remove the dots at the end of file names from merge-one-file
trivial: clarify, what are the config's user.name and user.email about
trivial: typo in git-commit.sh
use result of open(2) to check for presence
fix potential deadlock in create_one_file
trivial: O_EXCL makes O_TRUNC redundant
trivial: retval of waitpid is not errno
\n usage in stderr output
use "git init-db" in tests
git wrapper: more careful argument stuffing
Move couple of ifdefs after "include config.mk"
[PATCH] Add tests for git-mv in subdirectories
arguments cleanup and some formatting
remove unused variable
speedup allocation in pack-redundant.c
Fix sparse warnings
Documentation/git-log.txt: trivial typo fix.
allow git-update-ref create refs with slashes in names
make tests ignorable with "make -i"
fix t5000-tar-tree.sh when $TAR isn't set
ls-files and read-tree need core.filemode
remove CR/LF from .gitignore
debian packaging
Write .editmsg in GIT_DIR to avoid being in git-status.
Do not require ls-remote to be run inside a git repository.
[PATCH] Quote the missing GIT_DIR.
[PATCH] hold_index_file_for_update should not unlink failed to open .lock files atexit
[PATCH] document command to show diff of a commit
[PATCH] Docs for git-build-rev-cache.
[PATCH] Docs for git-show-rev-cache.
[PATCH] Docs for git-reset-script.
[PATCH] Docs for git-checkout-script.
[PATCH] Update Thunderbird specific hints.
[PATCH] Documentation for git-request-pull-script.
[PATCH] Documentation for git-clone-dumb-http.
[PATCH] Documentation for git-daemon.
[PATCH] Add footnote about Thunderbird about trimming trailing WS.
[PATCH] Add some documentation.
[PATCH] Subject: [PATCH] Add some documentation.
[PATCH] Be consistent in naming of remote heads
[PATCH] Make curl fail on server error
[PATCH] Fix sparse warnings
[PATCH] Fix warning about non-void return in a void function.
[PATCH] Use SHA1 for git-update-cache --refresh
[PATCH] Add --info-only option to git-update-cache.
[PATCH] Expose object ID computation functions.
[PATCH] Tidy up - remove use of (*f)() idiom from epoch.c
[PATCH] Ensure list insertion method does not depend on position of --merge-order argument
[PATCH] Write sed script directly into temp file, rather than a variable
[PATCH] Add t/t6003 with some --topo-order tests
[PATCH] Fixes a problem with --merge-order A B (A is linear descendent of a merge B)
[PATCH] Add a t/t6001 test case for a --merge-order bug
[PATCH] Tidy up - slight simplification of rev-list.c
[PATCH] Add a topological sort procedure to commit.c
[PATCH] Change the sed seperator in t/t6000-lib.sh.
[PATCH] Introduce unit tests for git-rev-list --bisect
[PATCH] Factor out useful test case infrastructure from t/t6001... into t/t6000-lib.sh
[PATCH] Fixup t/t5300 unit tests broken by 5f3de58ff85c49620ae2a1722d8d4d37c881a054
[PATCH] Remove unnecessary sort from t6001 testcase
[PATCH] Fix broken t6001 test case
[PATCH] Demonstrate broken t6001 test case function
[PATCH] Fix for git-rev-list --merge-order B ^A (A,B share common base) [rev 2]
[PATCH] Test case that demonstrates problem with --merge-order ^ processing
[PATCH] Fix to how --merge-order handles multiple roots
[PATCH] A test case that demonstrates a problem with merges with two roots.
[PATCH] Fix --merge-order unit test breaks introduced by 6c88be169881c9223532796bd225e79afaa115e1
[PATCH] git-resolve-script: Add LAST_MERGE and use git-rev-parse
[PATCH] Fix for --merge-order, --max-age interaction issue
[PATCH] Prevent git-rev-list without --merge-order producing duplicates in output
[PATCH] Prevent git-rev-list --merge-order producing duplicates in the output
[PATCH] Relaxes error checking in epoch.c to allow duplicate parents
[PATCH] Fixes problem with --merge-order head ^head
[PATCH] Tweaked --merge-order --show-breaks output in case specified head has no parent
[PATCH] Additional git-rev-list unit tests to demonstrate problems that require fixes
[PATCH] three --merge-order bug fixes
